// Code generated by go-bindata.
// sources:
// runtime/README.md
// runtime/colorschemes/default.micro
// runtime/colorschemes/solarized-tc.micro
// runtime/colorschemes/solarized.micro
// runtime/syntax/Dockerfile.micro
// runtime/syntax/LICENSE
// runtime/syntax/README.md
// runtime/syntax/apacheconf.micro
// runtime/syntax/arduino.micro
// runtime/syntax/asciidoc.micro
// runtime/syntax/asm.micro
// runtime/syntax/awk.micro
// runtime/syntax/c.micro
// runtime/syntax/cmake.micro
// runtime/syntax/coffeescript.micro
// runtime/syntax/colortest.micro
// runtime/syntax/conf.micro
// runtime/syntax/conky.micro
// runtime/syntax/csharp.micro
// runtime/syntax/css.micro
// runtime/syntax/cython.micro
// runtime/syntax/d.micro
// runtime/syntax/dot.micro
// runtime/syntax/erb.micro
// runtime/syntax/fish.micro
// runtime/syntax/fortran.micro
// runtime/syntax/gentoo-ebuild.micro
// runtime/syntax/gentoo-etc-portage.micro
// runtime/syntax/git-commit.micro
// runtime/syntax/git-config.micro
// runtime/syntax/git-rebase-todo.micro
// runtime/syntax/glsl.micro
// runtime/syntax/go.micro
// runtime/syntax/groff.micro
// runtime/syntax/haml.micro
// runtime/syntax/haskell.micro
// runtime/syntax/html.micro
// runtime/syntax/ini.micro
// runtime/syntax/inputrc.micro
// runtime/syntax/java.micro
// runtime/syntax/javascript.micro
// runtime/syntax/json.micro
// runtime/syntax/keymap.micro
// runtime/syntax/kickstart.micro
// runtime/syntax/ledger.micro
// runtime/syntax/lisp.micro
// runtime/syntax/lua.micro
// runtime/syntax/makefile.micro
// runtime/syntax/man.micro
// runtime/syntax/markdown.micro
// runtime/syntax/mpdconf.micro
// runtime/syntax/nanorc.micro
// runtime/syntax/nginx.micro
// runtime/syntax/ocaml.micro
// runtime/syntax/patch.micro
// runtime/syntax/peg.micro
// runtime/syntax/perl.micro
// runtime/syntax/perl6.micro
// runtime/syntax/php.micro
// runtime/syntax/pkg-config.micro
// runtime/syntax/pkgbuild.micro
// runtime/syntax/po.micro
// runtime/syntax/pov.micro
// runtime/syntax/privoxy-action.micro
// runtime/syntax/privoxy-config.micro
// runtime/syntax/privoxy-filter.micro
// runtime/syntax/puppet.micro
// runtime/syntax/python.micro
// runtime/syntax/reST.micro
// runtime/syntax/rpmspec.micro
// runtime/syntax/ruby.micro
// runtime/syntax/rust.micro
// runtime/syntax/scala.micro
// runtime/syntax/sed.micro
// runtime/syntax/sh.micro
// runtime/syntax/sls.micro
// runtime/syntax/sql.micro
// runtime/syntax/swift.micro
// runtime/syntax/systemd.micro
// runtime/syntax/tcl.micro
// runtime/syntax/tex.micro
// runtime/syntax/vala.micro
// runtime/syntax/vi.micro
// runtime/syntax/xml.micro
// runtime/syntax/xresources.micro
// runtime/syntax/yaml.micro
// runtime/syntax/yum.micro
// runtime/syntax/zsh.micro
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _runtimeReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\x4f\x4a\xc7\x30\x10\x85\xf7\x39\xc5\x03\xb7\x3f\xda\x63\x88\x0b\x37\xe2\x01\x9a\x3f\x53\x3b\x9a\x64\x4a\x32\xb1\x66\xe3\xd9\x4d\x2d\x82\xa0\xab\x40\xe6\xbd\xef\x63\xe6\x0e\x4f\x2d\x2b\x27\xc2\xca\x91\x2a\x56\x29\x78\x64\x5f\xc4\x98\xe7\x8d\x2b\x02\x17\xf2\x2a\xa5\xe3\xe0\x18\xe1\x08\x94\x1c\x85\x40\x01\x9c\xa1\x1b\xe1\x5e\xe0\x38\xdb\x91\x38\xbb\xbb\x14\xb5\x8e\x23\x6b\xbf\xc1\x35\x05\x2b\x92\xed\x78\x6d\x55\x61\x2b\x0e\xba\x28\xfb\x39\xca\x58\x3e\xe7\xc9\x4b\x5e\xf9\x65\x4e\xa7\x75\x99\xf0\xb0\xa2\x4b\xc3\x21\x2d\x06\x44\x7e\x23\xa8\x0c\xc4\x78\xc7\x77\x81\x1c\x19\x5e\xa2\x94\xea\x37\x4a\x54\x8d\xcd\x01\xb5\x67\xb5\x1f\xd7\x0a\xb7\xef\xba\xb7\xf9\xc7\xf1\x8f\x66\xfe\x4d\x58\x70\x22\xfe\x44\x2e\xe6\x82\x42\x75\x1f\x27\xe0\x77\x8a\x7d\x32\xe6\x2b\x00\x00\xff\xff\xd8\x8e\x0e\x48\x31\x01\x00\x00")

func runtimeReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_runtimeReadmeMd,
		"runtime/README.md",
	)
}

func runtimeReadmeMd() (*asset, error) {
	bytes, err := runtimeReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/README.md", size: 305, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeColorschemesDefaultMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\xcf\xc1\x0a\xc3\x20\x0c\xc6\xf1\xfb\x9e\x42\x3c\xaf\x0f\x65\xf5\xab\x0b\x8b\x46\xb2\x94\xe1\xdb\xcf\xb2\x31\xb0\xf4\xe2\xe5\xe7\x3f\x24\x51\x58\x74\x61\xaa\x4f\x17\xa5\x14\x54\x73\x7e\xe5\x1d\xfe\x36\x49\x7d\x59\x38\x48\x91\x26\xa1\x34\x0a\xda\x08\xea\x7c\xec\xa1\x4e\x38\x1a\xc3\x77\x64\x07\xb3\xbc\x27\x6d\x8a\xa6\x12\x9d\x2f\x21\x8f\x3f\x61\x42\xeb\x0d\xce\x67\x05\x4e\x23\x1b\x22\x05\xbe\x8e\x28\x57\xd1\x91\x25\x6c\x61\x67\x9b\x0c\xaa\x32\x76\xbc\xaf\x4a\xf9\x61\xe7\x33\x4c\x92\xfc\xf1\x62\xd7\xf1\x60\xa9\x7b\x59\x8f\x3b\x7f\xfe\x09\x00\x00\xff\xff\x9b\x69\xb6\x36\x3a\x01\x00\x00")

func runtimeColorschemesDefaultMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeColorschemesDefaultMicro,
		"runtime/colorschemes/default.micro",
	)
}

func runtimeColorschemesDefaultMicro() (*asset, error) {
	bytes, err := runtimeColorschemesDefaultMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/colorschemes/default.micro", size: 314, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeColorschemesSolarizedTcMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\xd1\xc1\x6e\xc3\x20\x0c\x06\xe0\x7b\x9f\x22\x4a\xaf\xad\x44\x20\x64\xe6\xd8\xb4\xdb\x7b\xa4\xc1\x95\xd0\x08\x8e\x08\x1c\xf6\xf6\x33\x55\xa7\x6d\x12\xed\x2d\x87\x2f\xbf\x8d\xff\x99\x3c\xc5\xa3\x77\xe1\xb3\xb1\x78\x9b\xb2\x4f\x4d\xbb\x07\x65\x7a\x33\x1c\xf6\x42\x48\x50\xaa\xdd\xfd\x41\x33\x2d\x0b\x86\x82\x34\x0c\xef\x6f\xba\x8a\x9c\x65\xe2\x6e\x0e\x23\x3b\x39\xc0\x78\x91\x4f\xc2\xc2\x96\xa6\x7b\x9a\x3c\x9d\x3a\x03\x55\xc5\x24\xe1\x63\x28\x68\x63\x84\xa8\xb2\x35\xe2\x1a\x69\x66\x74\x1e\xfb\xb1\xab\xaf\x9f\xbe\x56\x64\x31\x6a\x78\x16\xb3\xad\x38\xbb\xc9\x33\xba\x9c\x95\x94\x1f\x55\x94\x83\xc5\xc8\x5f\x68\x8b\x53\x6a\x80\xfa\x03\x31\x46\xe2\x1b\x5c\xc9\xdb\xe6\xe5\x5a\x64\xe9\x87\xbd\x88\x2b\x97\xc8\x5b\x99\xcb\x63\x85\x50\xba\xef\x0e\x8f\xb2\xfe\xb9\x22\x8e\x21\x2f\xd7\x7b\x01\xbf\x45\x95\x1f\xda\xdd\x77\x00\x00\x00\xff\xff\xa3\xfd\xbd\x12\xf3\x01\x00\x00")

func runtimeColorschemesSolarizedTcMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeColorschemesSolarizedTcMicro,
		"runtime/colorschemes/solarized-tc.micro",
	)
}

func runtimeColorschemesSolarizedTcMicro() (*asset, error) {
	bytes, err := runtimeColorschemesSolarizedTcMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/colorschemes/solarized-tc.micro", size: 499, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeColorschemesSolarizedMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\x51\x0e\x83\x20\x10\x44\xff\x3d\x05\xe1\x5b\x0f\x85\x30\xb5\xc4\x85\x25\x2b\xa4\xf1\xf6\x05\x6d\xd3\x50\xdb\x3f\x92\x99\x79\xc3\xac\x65\x62\x99\xc8\xc7\x55\x59\x0e\x01\x31\x2b\x3d\x8b\x5f\xee\x79\x11\x20\xea\xa1\x33\xc4\x2d\x9b\xe6\xb0\xbb\xe9\x25\xef\x6a\xd2\xdf\x3c\xa4\xc6\xa9\xa0\x13\x6b\x28\xe3\x44\x5f\xa1\x49\x90\x84\xed\xbb\x55\xe0\x3a\x39\xef\x09\x4a\xef\x20\xe2\x47\x0f\x4d\xb0\xde\x90\xd2\xdf\x89\x12\x1d\xa4\xbe\xe0\x94\x0e\x66\xa9\xb5\xa6\xd3\x21\xc2\xed\x97\x4c\x4e\xfd\xe9\x64\xc7\x2f\xc3\x2f\x40\x9b\x53\xb6\xd6\xd0\xb6\x1a\xbb\x8e\x27\xe6\xb2\xbb\x59\xa6\x58\xc2\x7c\x5c\xe5\x73\xd4\xf1\x48\xe9\xe1\x19\x00\x00\xff\xff\x70\xff\xe7\x9f\x7c\x01\x00\x00")

func runtimeColorschemesSolarizedMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeColorschemesSolarizedMicro,
		"runtime/colorschemes/solarized.micro",
	)
}

func runtimeColorschemesSolarizedMicro() (*asset, error) {
	bytes, err := runtimeColorschemesSolarizedMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/colorschemes/solarized.micro", size: 380, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxDockerfileMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x92\x5d\x6f\xda\x30\x14\x86\xef\xf3\x2b\x8c\x61\x90\x64\x5d\x77\x5f\x4d\x9d\x80\x64\x12\x6a\x20\x2c\x94\x76\x95\x3f\x24\x97\xb8\x10\x35\x24\xd4\x4e\xc5\xd0\xdc\xff\xbe\x83\x49\x33\xb2\x8b\x5e\x58\x91\x1f\x9f\xf7\xe4\xf1\x47\xb7\x8b\x16\x87\xa2\x12\xbf\xd1\x26\x5b\x6f\x72\x18\x55\x56\xac\xd1\x53\xa9\x50\x50\xae\x9e\xa5\x7a\xca\x72\xa9\x1d\x7d\xaa\xc1\xff\x18\x3e\x9f\x10\xfe\x95\xf9\x3d\x40\xf4\x32\x6d\x60\x0f\x3b\x0e\xb4\xbf\x91\x87\x7d\xa9\x52\xed\x28\x99\x22\x37\xf3\x10\xe6\xee\x8f\x24\x9e\x9a\xe9\x70\x32\xbb\x85\x11\x26\x26\x59\xce\xcc\x78\x1a\x98\x68\x38\x0a\x23\x13\xfe\x9a\xc7\x8b\xd0\x84\xb3\x3b\x33\x0c\x02\x33\x8e\xe7\x0f\x30\xb9\x4d\x1e\xe6\x31\x24\xcc\x5d\x1c\x2d\xa7\xa1\x59\x2e\x20\x78\x1f\x27\x37\xc1\x24\x31\xf1\x6c\xb4\x9c\x44\x81\x47\xc8\x95\xde\x89\x95\xbc\x62\xec\xf4\xf7\x91\x12\xe0\x53\x69\xd4\x47\x3b\xa1\x64\x51\x6d\xa4\xce\xb4\xb3\x2a\x73\xd8\xe1\xa3\x3a\xee\x77\xad\xa4\x2c\x10\x76\xa9\x6b\xa8\x67\x28\x31\x94\x79\xa7\x70\x50\xbe\x3e\xe6\x12\x89\xed\x4e\x2a\x2d\x8a\xb4\x15\xdb\x8a\x35\xb4\x13\x08\xf7\xfb\xa7\xea\x71\xb9\xdd\x02\x81\xe6\x07\x51\xd4\x3b\x3d\xf3\xf1\xbb\x97\x7e\x7d\x24\xa3\x5c\x14\xcf\xc8\x2e\x20\x51\xa1\x30\x8e\xea\xce\x17\xb5\xcb\x59\xec\x73\x9d\x59\x54\x0a\x2e\x46\x5f\x20\x0d\x9f\x5c\x7e\x79\x79\x2d\x2b\xd9\x36\xda\x6f\xb2\x4a\x22\x3c\x70\x09\x1f\x30\xe3\x52\x3a\xf0\x3c\x7f\x00\xb7\xf2\x89\xbc\xec\x19\xfd\x43\xf8\x1b\xf3\xe9\x5b\x03\xa0\xce\x03\xe0\xbd\x83\x6f\x84\x5f\x33\xff\xba\x59\x27\x84\x83\x36\x65\x0d\xe8\x11\xde\x03\xd0\x6b\x00\x27\x9c\x03\xe0\xef\xa0\x43\x78\x87\xf9\x9d\xff\x8c\x53\x7b\x8c\x1f\x18\x63\x30\xc1\xd6\x18\x83\x31\xb6\xdd\x7e\xde\xb3\xef\x6d\x65\x4b\x5a\xce\x47\x72\x2e\x6d\x2b\x5a\xd6\x96\xb4\xb4\x2d\x69\x79\x1f\x49\x5b\xdc\x9e\x30\x82\x0b\xaf\xd5\x91\x55\x6f\xbf\x9a\x83\xcc\xf3\x72\x0f\xcf\x66\x60\xc0\x1a\x3b\x7f\x03\x00\x00\xff\xff\x16\x4c\x78\x29\x49\x03\x00\x00")

func runtimeSyntaxDockerfileMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxDockerfileMicro,
		"runtime/syntax/Dockerfile.micro",
	)
}

func runtimeSyntaxDockerfileMicro() (*asset, error) {
	bytes, err := runtimeSyntaxDockerfileMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/Dockerfile.micro", size: 841, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxLicense = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x92\x4f\x8f\xda\x30\x10\xc5\xef\xfb\x29\xde\x71\x57\x45\xd0\x3f\x52\x0f\xdb\xaa\x52\x8a\x60\x37\x12\x05\x94\x04\xad\xd2\x9b\x49\x26\xb1\x25\xc7\x8e\x6c\x87\x34\xdf\xbe\x13\x43\xc5\xa9\x2d\x27\x3c\x9e\xf7\xf3\x7b\x33\x01\xff\x3a\x55\x39\x0b\x3f\x99\x20\x7e\xa1\x51\x9a\xfc\xc3\x5c\x5e\xdb\x7e\x72\xaa\x95\x01\x8f\xeb\x27\x7c\x7c\xff\xe1\xf3\x3b\xfc\x14\x95\x14\x6e\x42\x49\xb5\xaa\x95\x00\x05\x08\xbd\x7c\x88\xfd\x85\x54\x1e\xbd\xb3\xad\x13\x1d\xf8\x6f\xe3\x88\xe0\x6d\x13\x46\xe1\xe8\x19\x93\x1d\x50\x09\x03\xc7\x52\x1f\x9c\x3a\x0f\x81\xa0\x58\x6f\xea\x95\x75\xe8\x6c\xad\x9a\x29\x82\xb8\x38\x98\x9a\x1c\x82\x24\x04\x72\x9d\x87\x6d\xe2\xe1\x65\x7f\xc2\x0b\x19\x72\x42\xe3\x38\x9c\xb5\xaa\xb0\x53\x15\x19\x4f\x10\xfc\xf6\x5c\xf1\x92\x6a\x9c\xaf\xa0\x59\xb2\x9d\x5d\xe4\x37\x17\xd8\x5a\x26\x8b\xa0\xac\x59\x80\x14\xdf\x3b\x5c\xc8\x79\x3e\xe3\xd3\x9f\x47\x6e\xc4\x05\xac\x8b\x94\x47\x11\x66\xf3\x0e\xb6\x9f\x85\x4f\xec\x78\x82\x16\xe1\xae\xfd\xcb\x00\xee\x39\x6b\x28\x13\xd9\xd2\xf6\x1c\x49\x32\x91\x43\x8e\x4a\x6b\x9c\x09\x83\xa7\x66\xd0\x8b\xc8\xe0\x6e\xbc\xa5\xc5\xeb\xe1\x54\x20\xd9\x97\x78\x4b\xb2\x2c\xd9\x17\xe5\x17\xee\x0e\xd2\xf2\x2d\x5d\xe8\xca\x52\x5d\xaf\x15\xa3\x39\x98\x13\x26\x4c\xec\x3f\x22\x7e\x6c\xb2\xf5\x2b\x6b\x92\xef\xe9\x2e\x2d\x4a\x8e\x81\x6d\x5a\xec\x37\x79\x8e\xed\x21\x43\x82\x63\x92\x15\xe9\xfa\xb4\x4b\x32\x1c\x4f\xd9\xf1\x90\x6f\x96\x40\x4e\xb3\x31\x8a\x84\x7f\x8c\xb9\x89\xab\xe2\x49\xd6\x14\x84\xd2\xfe\x16\xbd\xe4\xe5\x7a\xb6\xa7\x6b\x48\x71\x21\x5e\x72\x45\xea\xc2\xe6\x04\x2a\xfe\x8c\xfe\xbf\xbf\x48\x11\xda\x9a\x36\x06\xe5\xee\xfb\x2c\xd9\x5d\xda\xc0\xd8\xb0\x80\x67\x97\x5f\x65\x08\xfd\xf3\x6a\x35\x8e\xe3\xb2\x35\xc3\xd2\xba\x76\xa5\xaf\x14\xbf\xfa\xb6\x7c\xf8\x1d\x00\x00\xff\xff\x68\xac\x8d\xfc\xd3\x02\x00\x00")

func runtimeSyntaxLicenseBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxLicense,
		"runtime/syntax/LICENSE",
	)
}

func runtimeSyntaxLicense() (*asset, error) {
	bytes, err := runtimeSyntaxLicenseBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/LICENSE", size: 723, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x54\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x0c\xbc\x87\x75\x0c\x41\x3e\xf4\xb6\x40\x51\xa0\xc5\x76\x1b\x20\x6b\x14\xd8\xe4\x14\x04\x10\x4d\x8e\xc4\x49\x28\x8e\x40\x52\x76\xdc\x43\x7f\x7b\x87\x94\x9c\xda\x08\xb2\x06\xf4\x01\x8a\xf3\xde\xbc\xc7\x37\xfe\x04\xdf\x49\x07\x86\x78\xf2\x49\xbd\x82\xa5\xde\x3a\xb9\x12\xf9\x1e\x3a\x72\x18\xab\xea\xde\x62\x44\x50\x01\x21\x59\xfc\x78\x23\x74\x1c\x60\xc8\x60\x0d\xdc\x33\x90\x8f\x49\x39\x97\x6b\x86\x1a\x9e\xa7\x98\xaa\x71\x4a\xb0\x2c\x9d\x61\xe6\x4a\xf2\xd0\xfe\xbb\x6d\x34\xfb\x8e\xfa\x6d\xc1\xd8\xce\x1b\xda\xa6\xf0\x9f\x66\x7a\xf5\x82\x1e\xba\xc0\x03\xec\x94\xe7\x1a\xe2\x88\x9a\x3a\xd2\x02\x7a\x9a\xd7\x1f\x93\xa5\x08\x01\x47\x8e\x94\x38\x9c\x9e\xd6\x36\xa5\x31\x7e\xd9\x6e\x7b\x4a\x76\xda\x0b\xc7\xb0\x8d\x9a\x47\x95\xfe\xd9\x7a\x01\x09\xfa\xa6\xa9\xae\x2c\x98\x5b\xca\x7c\xca\x0d\x1c\x13\x90\x41\x9f\x32\x09\x24\x2e\xc4\x9f\x63\x0d\xf8\xaa\x71\x4c\x45\x73\xe4\x01\xe1\x45\x7a\x34\xd4\x75\x18\xd0\x6b\x8c\x5f\xaa\x6a\xb3\x38\x6b\x58\xe0\x3c\x27\x98\xc4\xc5\x96\x34\x3b\x0e\x6d\x03\xb7\xe2\x0f\x2a\x53\x17\x08\x05\x5a\xc9\x57\xf1\x0c\xbd\x34\x4e\x07\x84\x41\x25\x6d\xeb\x52\x94\xfd\x7a\xf7\xbd\x73\xaa\x87\x75\x4b\xed\x4d\xb6\x2f\x6f\x09\xd8\x4f\x4e\x05\x69\x6d\x0c\x18\x23\xb1\xaf\x40\x7e\x1b\xf8\x93\xf3\xa2\x1a\x46\x87\xf5\xb9\x03\xe8\x03\x8a\x99\xab\x66\xb3\x6a\xe1\xc8\x93\x33\xb0\x47\x9d\x95\xb4\x97\xdf\xd7\x74\x33\xef\x79\x2f\x27\x4e\xe3\xc8\x21\x41\x2b\xe7\x1c\xd2\xaf\xab\xa6\x69\x56\x80\xde\xcc\x6f\xff\x2b\x7c\x93\xd0\xc6\x76\xee\x5a\x6c\x2c\xea\xc0\xe3\xd1\x91\xcf\x6e\x7b\x03\x39\x1d\x6d\xb3\xf9\xad\x3d\xeb\x19\xc8\x18\x87\xef\x35\x5c\x77\xb8\xb0\x5b\x74\x8e\x17\xfe\x23\x07\x67\x7e\x2e\x2b\x8a\xac\x52\x22\x84\xcb\xf6\xaa\xfa\x04\x0f\x31\xc7\xf9\x28\x51\x81\xb2\x3d\x6a\x49\x6f\x9e\x81\x1d\xcf\xd1\xe5\x2e\xb7\x26\x82\xe6\x94\x58\x25\x27\xb1\xcf\x88\x92\xdd\x03\x86\x84\x26\xab\xcb\x8a\x4b\x8a\x3f\xc7\x4b\x1c\xe8\x50\xa5\x29\x60\x03\xdf\x73\xae\x66\xac\xa1\xcc\x86\x20\x05\xa3\xd9\x2c\x87\x5d\x6a\x6a\x38\x5a\xd2\xb6\xd2\xca\x0b\x07\x8c\x81\xf7\x0e\xc5\x38\xd2\x60\x70\x14\xa5\xb9\x57\xf6\x17\x15\x33\xcb\x89\xa7\xdc\x81\x4c\xce\x5f\x92\x46\x90\x79\x50\xe0\xe8\x8d\x70\x69\x3d\x59\x95\x3e\xea\x5f\xa8\x46\x0c\x32\x53\x59\xc8\xa5\x11\x25\xd6\x07\x92\x5b\xcf\x72\xd3\x72\x19\xb9\x06\x15\x5e\x0c\x1f\xbd\xbc\xda\x34\x38\x79\xb8\x49\xc9\x3d\x1e\xa9\x4b\xf2\x0c\x79\xfa\x37\xf0\xac\x0e\x6a\x79\x44\x1d\x68\xcc\x6b\xe3\x29\x59\xf6\x65\xcf\xfe\x94\x4b\x6c\x06\xa7\x94\x4f\xe3\x8e\xb4\xc4\x1d\xab\xea\x77\xd4\xea\x9c\xa2\x3c\xb4\xd7\xa3\x7a\x3b\xcb\x18\x58\xe6\x8f\x44\x40\x1e\x5d\x23\x7a\x03\xed\xa7\x2c\x68\xf2\x06\x43\xa9\xfd\xb6\x7b\x80\x6f\x7f\xdf\x1d\x7e\x11\x3f\x0a\x74\x7d\x75\x9a\xf3\xcc\x47\xbe\xac\xae\xce\xd5\xe2\xd6\x52\xd4\xc0\x0f\x44\x78\xbc\xbb\xfd\xe3\xeb\xee\xc7\xd7\xa7\xf5\xf2\x22\xff\x23\xff\x05\x00\x00\xff\xff\x67\x39\x94\x62\x4d\x05\x00\x00")

func runtimeSyntaxReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxReadmeMd,
		"runtime/syntax/README.md",
	)
}

func runtimeSyntaxReadmeMd() (*asset, error) {
	bytes, err := runtimeSyntaxReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/README.md", size: 1357, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxApacheconfMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x58\x5b\x73\xdb\xb6\x12\x7e\xef\xaf\xf0\xa8\x2f\x4d\x3a\x75\x33\x3d\xaf\x99\x9c\xd1\xcd\x89\xa6\x92\xac\x8a\x72\xda\x39\x51\xda\x41\x48\x88\xc2\x31\x09\xf0\x00\xa0\x2d\x75\xf8\xe3\xcf\x5e\x00\x8a\xba\xb0\x0f\xb6\x76\x3f\x2e\xc1\xc5\x62\xf7\xdb\x25\xbf\xbf\x1b\x56\x22\xdd\xcb\xbb\x9d\x2a\xa4\xfb\xce\x1d\xb5\x17\x87\xbb\x01\x83\xa9\xd1\xbb\xc1\xdd\x60\xef\x7d\x95\x6d\xef\x51\x6b\x4a\x55\xca\xed\xbd\x3f\x56\xd2\x35\x2f\x7b\xe3\xbc\xdb\xde\x67\xdb\xed\xdb\x66\x7b\xbf\xf7\x22\x4d\xa5\x73\x83\xef\x52\x53\x18\x7b\x77\x94\x45\x61\x5e\xef\x06\xf7\x3f\x46\xe4\x9b\x55\xf9\xde\xa7\x47\xa1\xef\x06\x3f\x0c\xc1\xb8\xf2\x8b\xda\xcb\x43\xc3\xf2\x4a\xf8\xfd\x4c\xef\x0c\xa9\xce\x3d\x80\x47\x4b\x51\x4a\x50\xbd\x32\xba\x19\x66\xd9\xb0\xf0\xe1\x67\x74\x9c\xea\xd4\x64\x4a\xe7\x2d\xb0\x01\xa7\x50\x19\xef\x85\x75\x92\x0c\x27\x72\x27\xea\xc2\x9f\x21\x2e\xb5\xaa\x8a\x0b\xc6\x45\xde\xdc\x76\x31\xcb\x3e\x09\x9d\x15\xd2\xa2\xed\x2c\xe5\x7b\xf0\xf7\xfc\xf1\x8c\xc4\xe7\xcf\x74\x55\x7b\x70\xde\xf3\x6d\x73\xa1\xf3\x5a\xe4\x74\x69\x61\xb2\xba\x90\xbc\xc7\x2c\x7b\xac\xfd\x99\x65\x57\x3f\x2d\xc7\xbf\x85\x12\x8e\xff\x2f\x84\x4f\xf7\x3d\xfe\x62\xc0\x1b\xfa\x3f\x7e\x5c\x2e\xa7\xe3\x0d\x2b\xe4\xab\xcc\x92\x42\xb8\xbd\x74\x8c\x3d\xbe\x48\x6b\x55\x06\x4b\x6b\xa3\x8f\xa5\xa9\xdd\x49\xfa\x6b\x58\xfb\xbd\xb1\xca\x0b\xaf\x5e\x3a\x16\x7f\xcd\x4d\x3e\x2d\x85\x2a\x3a\xd0\xa2\x76\xfe\x23\x58\x5d\xe2\x4b\xf3\xe4\xa4\x9d\x4d\x7a\x3c\x6d\xed\x3e\x4b\xab\x76\xc7\x70\xb7\x73\x2a\xd7\x7c\x5f\x83\x3e\x5c\xf8\x01\xda\x64\xb4\xb8\x09\x7e\xb4\xa6\xae\x30\x63\x22\xc0\x61\x63\x19\x57\x3c\x5d\x53\xb9\x74\x7e\x58\xe4\xb8\xc6\xbe\xec\xf1\xaf\x35\x9c\x18\x70\x4d\x77\xee\xbc\x58\xe8\xe2\xc1\x84\x2d\xd3\x31\x14\xcf\x73\x17\x31\x3a\x95\x0f\xc6\x96\xc2\x5f\xa2\x73\xb5\x93\x5e\x95\xdd\xfb\x7f\x33\x55\x47\x4b\xf6\xa5\x2c\x13\xf5\xb7\xec\x77\xf5\xdc\x89\xf9\x64\xb8\xba\x0e\x12\xa2\x23\xa5\xb3\xc9\xf2\x4c\x5d\x09\xe7\x5e\x8d\xcd\x5a\x30\x14\xcb\x18\xaa\x5d\xe5\x27\xd4\x94\x95\xb0\x72\xb2\x7c\xd4\x89\xb4\x2f\x98\xb0\xe1\xca\x44\x5a\xb9\x83\x3f\xd8\x0a\xe5\xa7\x74\xfd\x7e\xa2\xfd\x54\x8b\x6f\x85\x3c\x3d\xef\xc1\x1a\x0d\xa5\x9f\xcb\x4f\x22\x84\x0c\x51\xda\xd1\xd0\x7b\xab\xbe\x01\x43\xf4\xc0\x33\xd7\xd9\xcc\x5a\x96\xc6\x4b\x4a\x9e\x2e\xfc\x64\x0b\x92\x99\x49\x40\x68\x13\x23\x66\xc5\x6d\x77\x47\xd6\xbc\x82\x01\x55\x5b\xd3\x55\x96\x66\x0c\x9b\x6c\x46\xc9\x2f\xef\xde\xbd\x03\xa6\x32\xb5\xf6\xcd\xa8\xde\x61\x0c\x32\x28\x10\xd7\x8c\x91\x3b\x03\xf5\x4c\x0f\x95\xb2\x32\x40\xca\xce\xa5\xce\xfd\xbe\xa3\xbe\xc8\x22\xde\xa0\x1c\x06\x86\x15\x0e\x52\x90\x71\x89\x23\x65\xd4\x6d\x57\xc9\x8a\x4e\x9f\x25\x63\x53\x89\xe7\x55\x48\xa2\x39\x02\x3f\xa6\xe3\x42\x8a\x56\x99\x40\xb9\x1d\xa3\x32\xd3\x40\x38\x2f\xa2\x88\xfa\x42\x96\x4f\x0e\x19\x2b\xe8\x4f\xba\x76\x70\x60\xa4\xcd\x72\x6d\xac\x24\x11\x32\xc4\x5b\x53\x74\xf1\x4f\x52\x64\xd2\xf6\x24\x40\xc7\x6e\x69\xe6\xc2\x79\x60\x43\xbe\x39\x28\x6a\xa7\x64\xf6\x20\x52\x6f\x2c\xe3\x0b\x71\xe8\xc6\x0f\x54\xdc\x25\x96\x42\x00\x94\x3e\x07\x96\x32\x37\x5e\x09\x2f\xb3\x89\x49\x43\x5c\xd7\xc6\x78\x96\x4e\x76\x1b\xa8\xb7\x85\xb0\xb9\xd2\x3d\xae\x7e\x9c\x2d\x44\x35\x3d\x78\xa9\x1d\x85\x90\x6b\x22\x9c\x69\x54\x1f\xa9\x8d\xb8\xa8\x26\xa6\x86\xc0\x03\xd7\x36\x74\x56\x49\x05\xfd\x0f\x1b\xc4\x78\xaf\x8a\x6c\x25\x6d\xe0\x35\x0c\x9b\xd4\x9e\x6b\x1b\x34\xf3\xac\x64\x20\x19\x56\x78\xcb\x2e\x68\x90\x51\x41\xc2\x0c\xee\x71\x97\xae\x27\xfe\x88\x29\x40\xf2\xc6\x42\x31\xd1\xc3\x21\xda\x93\xba\xac\x20\xd9\x24\x06\x16\x0e\x1d\x08\xdb\x94\xb8\xec\x44\xbc\xe0\xdf\x04\x5a\x2f\xf6\x5d\xa5\x95\x3f\x22\x30\x37\xe9\xf3\x64\x84\x12\x04\x18\x43\x65\x6a\xdf\x84\xbd\x53\x13\x0c\x72\xdb\xd9\x82\x8e\x95\x75\xdb\x41\x30\x28\xe0\x54\xb8\x4a\xe8\x18\x02\x82\x69\x0a\x7b\xc5\x20\x53\x2d\x44\x9c\x9b\xe0\x12\x0a\x3a\x22\x90\x94\x67\x16\xbf\x03\x77\x99\xd7\xb0\x96\x06\xbf\xdb\x0d\xb6\xd2\x4c\x67\x30\x5b\xb4\x2a\x97\x72\xab\x52\x37\xec\x71\xd7\xa4\x75\x09\x67\x44\xa9\x83\xd1\x9b\x3d\x52\x53\x0f\x32\xf7\xe9\x86\x6b\x74\x7a\xc0\xd1\x05\xfc\xff\x04\x81\x0f\xd8\x62\x31\x5c\x05\x31\x91\x3a\xc3\xd1\xaa\x99\x5a\x6b\x6c\x5c\x98\x35\x3c\x83\xe9\x41\x60\xa1\x36\xe1\xd0\x71\xd4\x79\x69\x35\x1e\x02\x6e\xfb\x18\x4c\x62\x4a\x52\xae\x62\x8f\x07\xc6\x87\x56\x0e\x2a\x87\x10\xae\x2b\x2d\x4f\x7a\xcc\x59\xac\x9b\xe9\x46\xe4\x24\xb0\xca\x93\x45\x43\xf4\x11\x8f\x76\x65\x15\x76\x91\x23\xa3\x44\x9d\x20\x61\x55\xa4\xe8\x3d\xd1\x71\xc3\x55\x7f\xdb\x4d\xbe\x46\xe4\xfb\x09\xa6\x45\x0d\xc2\x1c\x02\x55\x57\xae\x99\x65\x10\x09\x58\x9b\x7b\xe5\x6c\x17\x5c\x9d\xed\x78\x4a\x02\x01\x66\x03\x2a\xbf\x59\x29\xaa\x11\x92\x2e\x0a\x71\xc7\x28\x2f\xa4\xae\x9b\x99\x4e\x8b\x1a\x06\x19\x3a\x6e\xe6\x17\x96\xe3\x5e\x59\xb1\x19\x45\x03\xef\xbd\xed\xea\x2c\x19\xae\x66\xc3\xaa\x82\x38\xc2\xde\x36\x86\xce\x08\xee\xbe\x80\x7f\xab\x25\x24\x19\xa1\x27\xe2\x25\xf5\x41\x3c\xcb\x21\x4c\xd0\x29\xab\x60\x0d\x09\x9c\xd4\x55\x65\x2c\x30\x12\x83\x6b\x88\xc7\x70\x0f\xff\xb8\x16\x9a\x5f\xa5\xac\xa0\x6d\xc2\x99\xb7\x52\xa8\xb8\xdb\x4e\x5e\x1d\x0c\x35\x67\x6e\x19\xd0\x15\xe1\x28\x5b\x60\xb3\x99\xb3\x62\xb4\x96\x34\x42\xc7\x5a\x46\xf4\xb1\xba\xba\x2b\x40\xf1\xbe\x04\x68\x4d\x66\xa7\x3d\x5e\x60\xfd\x13\x09\x1a\x6e\x2c\xd0\x0c\x58\x0e\x9b\x33\x8d\x32\x68\xae\x4a\xe5\xf9\x3f\x57\x0f\xcb\xd4\x86\xb4\x28\xd6\x32\xad\xf9\xdc\x09\x5e\xcb\xff\xd5\xc0\x94\x23\x93\x1d\xcf\x80\x07\x25\x8b\xcc\x5d\x43\x44\x09\x5d\x74\x0e\x59\xd5\xe3\x28\x5a\xfd\xb1\x98\x9f\x3f\x02\x3c\xd5\xe1\x67\x04\x2c\x8a\x79\x3e\x37\x22\xe3\x18\x80\x10\xd2\x13\x58\x52\x50\x7f\x8d\x02\x97\x0f\x92\x67\x30\xcd\xc3\xc0\x07\x12\x53\x17\x34\xb0\x71\xa1\x20\xeb\x1d\x8a\xed\x81\x87\xc7\xf7\xb4\x4d\xb0\x04\xee\x7b\xb0\x52\xe2\x4d\xd1\x16\xfa\x09\xf5\x95\x0b\x6c\xb3\xb7\x90\x5b\x08\x26\x38\xae\xf1\xa8\xe6\x5a\x9d\x2f\x93\x7e\x2d\x9e\x96\x8c\xdd\xf6\xf1\xdb\x7f\x21\x71\xc6\x34\xe1\x5c\x80\xfd\xa7\xdf\x1a\x26\x1e\x96\x2d\xa1\x09\x85\x54\x5f\xc4\x9e\x7d\x5a\x21\x60\x38\xba\xc1\xfc\xd1\xce\xe4\x01\x66\x0b\xe9\x05\x70\x36\xfd\x32\x57\xa1\x94\xc0\x92\xea\xd0\x2c\xa8\x8f\xe7\x2a\xa5\x88\xc3\xd2\xe7\xbb\x0e\x7a\xd8\x5f\x8f\xbb\xd0\xe8\xf9\x6e\x93\xe1\x72\xd0\xa5\xdb\xf7\xd0\x05\x70\x85\x7a\x51\xf2\x35\x50\x23\xd2\xd8\x67\x65\x7d\x2d\x0a\x24\xb3\x66\x69\x56\xd6\x1c\x8e\xcd\xb2\x2e\xe3\x33\x97\xbf\x27\xc9\x3c\xa6\xbb\xb4\x3e\x20\x4f\x55\x6e\x81\x08\x69\xa8\x8b\xb4\x44\x8c\xd4\xe0\xfc\x3d\xd5\x2f\xcd\x4a\x65\xfd\xc3\x28\x3c\xc6\x1b\xc0\xa7\xe9\xde\x34\xfc\x4c\xfa\x3f\x12\x19\x13\x6c\x50\x0b\x48\x3e\x16\xc3\x44\x41\x32\x11\x59\xfb\xbe\x47\xd0\xec\xb1\xd3\x8b\x09\xe1\x1d\x06\xf1\x00\x99\xfb\x2a\x2c\xa4\x07\x01\xe8\xe3\x49\x5a\x4b\xdc\x69\xbf\xa7\x60\x05\x8d\x09\xe3\x41\x41\x22\x04\x6a\x5a\x42\xa6\x5f\x3e\x94\x67\xf6\xae\xdc\x71\x23\xa6\x35\x6b\x91\xbb\x48\xf9\xac\x44\x83\x4c\x5a\xf2\x07\x82\xb5\xcc\xa8\xab\xb7\xc2\x3f\xbc\x23\x47\x13\xc8\xf6\x52\x68\xec\xc5\x11\xd9\xc8\xb2\x6a\x28\x15\x65\xfc\x60\xc0\x5a\xfb\xaa\xcf\x6a\xfc\x24\xc0\x5a\xf7\x6d\x9f\x91\x76\x2c\x62\xf5\xec\x2d\x9f\x21\x62\xc1\xb0\xbd\x7f\x6a\x9e\x68\x82\xd3\xef\x5a\xbe\x42\x5d\x48\x6a\x81\x41\x06\x52\xcf\xa2\x3c\xd5\x39\x36\xce\xa0\x21\x01\x9d\xe4\xbc\x23\x32\x09\x05\x1d\xd2\x3e\x8a\x31\x21\x83\xba\x46\x76\x5b\x13\x37\x8e\x57\x4f\x41\x5a\x4c\x17\x41\x5a\xae\xd6\x8f\xe3\xdb\xfe\x26\xc0\x83\x6e\x77\x6c\x92\x14\x7a\xf0\xc8\x40\x02\x51\x65\x25\xf4\xc5\x25\xfc\xf0\x97\x8c\x8e\xcc\x27\xce\x00\xb5\x00\x18\x08\xe1\x3f\x4f\xd3\x01\xc7\x7d\xb4\x52\xa0\x93\x56\x0f\xef\x54\xac\x27\xb8\xfb\x04\x3b\x88\x64\x0a\xef\xf1\x14\xba\x79\x27\x19\xb9\x7a\x87\x19\xb0\x55\x94\xd9\x4d\x92\xb9\x5f\xb1\x4c\xf9\xc6\x22\xd2\x44\x10\x69\x50\x64\x31\x51\xb9\x86\x11\xcc\x46\xab\x8d\x79\x86\x71\x09\x14\x8f\x55\xce\x3f\xb3\x5d\x2b\x84\xb7\x49\x50\x43\x5a\xf5\xf9\xeb\xbb\x89\x06\xea\x59\x5a\x25\xc9\x6c\xaa\x33\x1c\xe7\x50\xc2\x72\x5f\x38\x92\x61\x1c\xb4\x3e\xe0\x58\x41\xa1\x23\x81\xf6\x04\x43\x11\xce\x5b\x19\x71\x0a\x50\xd4\x78\x88\x7c\x05\xef\x60\x29\xcf\xdf\xf2\x0a\xc4\x0d\xf7\xb8\x87\x96\xc0\x0b\xa1\x13\x9e\xee\x3e\x61\x1c\x2d\xc0\x4e\xeb\x41\x95\xa9\x93\xed\x8d\x87\x9f\xa0\x5f\xe5\xb1\x45\x55\xb5\x87\x30\xd7\x90\xa9\xa8\x86\xe4\x07\x89\x3f\x25\x82\x10\xf2\xb9\xd7\x55\x24\xb1\xd5\xde\x42\xdc\x27\x4a\x14\x98\x5a\x80\x05\x86\x0d\xf2\xe1\x78\x33\x1c\xd7\x57\xe2\xb6\xc2\x95\xeb\x18\x5c\x5d\x38\xbf\xe3\xb4\x99\x7e\x77\x89\xc3\xdb\x6d\x06\x8a\x4e\xf7\xa0\xf7\xb9\x78\x7d\xf9\xec\xa9\x57\x9b\xe5\x8f\x70\x17\x2a\xbd\x17\x22\xb6\x86\xcc\x34\xd0\xe1\x60\x86\x45\x8d\x49\xa9\xd7\xdd\x70\x1d\x24\xb4\x4e\xf8\xe5\x8e\xfa\xf9\xa5\x1e\x29\x1d\xfb\xa3\x8b\xa5\x95\xcc\xf9\xe9\x3c\x28\x9d\xf4\xe0\x0d\xe6\x73\xec\xb5\x9c\xdc\x61\x8e\x49\x6a\x79\x90\x29\xae\xc3\x2f\x25\x8c\x53\xe9\xde\x76\xf5\x72\xea\x61\x1d\xd6\x84\x57\x77\xe4\x04\xf4\x0e\x8a\xac\xc1\x57\xe9\xf8\x3d\x06\x64\xed\x80\x34\x90\x8f\x90\xc4\x5d\xf8\x4a\xf6\xa4\x1d\xd7\x37\x3c\x7f\x2c\xb4\xd1\x10\xf3\x82\xf6\x83\x0e\xd1\x3f\x9c\x61\xc2\xec\xd0\x7d\xbd\xbc\xed\xdb\x0d\xc3\xd9\xaa\xe9\x8e\x1e\x41\xee\x72\xea\x35\x04\xf7\xc0\x6b\xf2\xbf\x7e\x09\x9f\x96\xf8\x2b\xfb\xf4\xd0\xfc\x31\x52\x1e\xbf\xb6\xbd\xb9\xfc\x54\xff\xfe\xcb\x9f\x1f\xbe\xfe\xf8\xe1\x96\x4f\xef\x7f\xfe\xf7\x97\xe1\x4f\xff\x11\x3f\xfd\xfd\xf5\xf6\xf7\xfc\xf7\xcd\xfb\x9f\x9b\x0f\xed\x92\x39\x0c\xac\x00\x6f\x07\x3f\x6c\xb7\xf7\xcd\x97\x3f\xb7\x83\xaf\x6f\xde\x6e\x07\xf1\xf2\xeb\x1e\x52\xfe\x6e\xf0\xfd\xfd\xdb\xc1\x77\xff\x0f\x00\x00\xff\xff\x79\x4b\x0a\x01\x84\x18\x00\x00")

func runtimeSyntaxApacheconfMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxApacheconfMicro,
		"runtime/syntax/apacheconf.micro",
	)
}

func runtimeSyntaxApacheconfMicro() (*asset, error) {
	bytes, err := runtimeSyntaxApacheconfMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/apacheconf.micro", size: 6276, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxArduinoMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x57\x7d\x57\x22\xbb\x19\xff\xdf\x4f\x91\x72\xef\xa9\x8c\x77\x65\x16\xf7\xd6\xb6\x9e\x75\x3d\x88\xa8\x9c\x23\xe0\x51\xdc\xbd\x5b\x41\x4e\x98\x09\x90\x6e\x48\xa6\x49\x06\xa4\x4d\xbf\x7b\x7f\x99\x19\x46\x01\xed\x7a\x24\x09\xc9\x93\xe7\xe5\xf7\xbc\x85\xbd\x5f\x7e\x21\x97\xed\x9b\x56\xb7\xd1\x69\x9d\x10\xfc\x51\x1d\xa7\x5c\xaa\x9a\xa4\x52\xe9\x08\xc7\x9e\xe2\xa2\x75\xdf\xbc\x6b\xdf\xf6\xdb\xbd\xee\x09\xe9\xcf\xd8\x16\x15\x31\x2b\x69\xe9\x33\x99\x70\xc1\x0c\xa1\x42\xa8\xa5\x59\xef\xcd\xf8\x74\x26\xf0\xb1\x5c\x4e\x3d\xab\x8d\xbf\x89\xd2\xa4\x91\xb3\x22\xe6\x07\xb3\xd1\xac\xe0\xc1\x25\xb1\x10\x73\xd5\x7d\x20\x5e\x04\xb1\xec\xd9\x12\x16\x73\xab\x74\xad\xd0\xa9\x43\x39\x04\x70\xc9\x34\xf4\xee\xf2\x68\xa6\x04\x35\xe4\x1b\x17\x31\xf3\xc7\x5f\x99\x36\x5c\xc9\xcc\x26\xf2\xb1\x56\xcf\xcc\x68\xf4\x73\x23\xb3\xbd\xe3\xf0\xe8\x53\x78\xf4\xb1\x5e\x2f\x18\x5e\xf7\x3a\xad\xdb\xc6\x55\x4e\x31\xb3\x36\x39\x09\xc3\x48\xc5\xac\x36\x55\x6a\x2a\x58\x2d\x52\xf3\x30\x09\x0b\xcb\x0f\xbd\x5a\x87\xb9\x46\x87\xb9\xa9\x61\xc1\xa7\xd9\xeb\x74\x5a\xdd\xfe\x7d\xc6\xe7\xb0\xa3\x8c\x25\x6a\x92\x99\xe3\xb9\x91\x25\xb4\xb4\xf4\x07\x93\x64\xa2\xd5\x3c\xdf\x5f\xe3\x98\x11\x4c\x54\x2a\x63\xb2\xe4\x76\x46\x76\x00\x7b\x41\xe4\xa8\x76\x54\x3b\xae\xed\x10\x1c\x5e\x70\xcd\x22\x0b\xcb\xdf\x12\x54\x28\x4f\x16\x7c\xbe\xf6\x4f\x26\x72\xbc\x22\xff\x54\x33\x2a\x25\x33\xbb\x22\x3f\x7b\x2c\x0c\xc0\x18\x73\x3b\x4e\x23\xb8\xa9\xa6\xf4\x34\x5c\x5f\x28\x11\x01\xd3\x35\x12\x5f\x76\xf5\xea\x33\x63\x59\x4c\xa0\xd7\xc3\x38\x95\x36\x25\xf7\x4c\x2f\x98\x26\xf5\x7a\xed\xe3\xef\xa4\x4b\xad\x5d\x61\xd4\xcb\x19\x15\x84\xc2\xfe\x4d\x43\xd7\x71\xd8\xbe\x6b\x35\x7d\x14\x7a\x70\x2f\x11\x3c\x3f\xe5\x75\xb2\xab\x49\x47\x2d\x18\xd0\xe0\x26\x8b\x35\xf2\x79\x33\x96\xbf\x10\xab\x32\xac\x32\xe1\x71\x86\xa6\xd2\xab\x5d\x58\xc2\xd4\xe8\xd0\xcc\xa8\x66\xa1\x27\x0d\x77\x05\x35\xe2\x78\x3b\x51\x34\x9b\x30\xcd\x64\xc4\x5e\x4b\xf1\x09\xc4\xac\x4f\x90\x5c\xa5\x37\x64\x21\x35\xc2\x32\x23\xb7\x0e\x6b\xb5\xdd\x30\x20\xd8\x28\x12\xeb\xe7\x9a\xef\xa4\xfc\x1b\x02\xf6\x8a\x70\xa9\xb4\xbb\xbd\x0a\x21\x95\x41\xed\x0c\x57\x7e\xad\xec\x79\xf2\xbd\x48\x09\x38\x63\xac\x7d\x9e\x6b\x78\xb9\x32\xf8\xfc\xd8\x38\xfc\xc7\x68\xf8\xf8\xf1\xf0\xef\xd9\xe2\xb7\xc1\x97\x0a\x79\x4d\x3c\xd5\x0c\x91\x09\xc2\x6a\xd5\x9c\x19\xfe\x6f\x16\xb8\x6a\x35\x1d\x9d\x05\xe0\x6b\xab\x7f\x73\xf5\x63\xf7\xe9\xc8\x1d\xff\xee\x12\xab\x83\x20\x18\x59\x30\xc8\xee\x37\x95\x34\x96\x4a\x6b\xf6\x72\x16\x55\x1e\x64\x6c\xae\xdb\x57\xd7\xee\xa6\xf7\xcd\xb5\xbb\xb7\x0f\x7d\xd7\x7b\xe8\x63\x0a\xd6\xb7\x10\x21\x1c\x91\x75\xab\xc1\x7d\xcf\xab\xb8\xbe\x76\xd1\x6a\xba\xf3\x76\xd7\x5d\xb7\xfe\x70\xbd\x66\xdf\x9d\x7f\xef\xb7\xca\x5b\xb7\xed\x77\xc5\xdd\xb6\xdd\x75\xe3\xe6\x72\x84\xb9\xff\xad\x87\xe9\x45\xd4\x8c\x4f\x6c\x2f\xb5\x5b\x17\x6e\xee\xcf\x2f\xdb\x77\xf7\x7d\xd7\x29\x16\xe5\x85\x86\xb5\x14\x95\xaf\x2d\x2d\xd3\x3a\x4d\xb6\x2f\x36\xaf\x1b\xdd\xab\x96\xbb\x6c\xdc\xdc\xb4\xbb\x57\xee\xae\x7d\x8f\xe9\xe5\xb2\xa4\x42\x4d\xc9\xdd\x3a\xb0\xb6\x2e\x5f\xb4\x2e\x1b\x0f\x37\x7d\xd7\xfa\xa3\xdf\xba\xeb\x36\x6e\x80\xce\xd6\xa2\xfe\xb5\x5e\xae\x8f\xbe\xfe\xe5\xb8\xe4\x7c\x7a\x7a\x4a\x2e\x1f\xba\x79\xbe\x65\xdf\x90\x84\x59\x16\x52\x4b\x49\x7f\x95\xa0\x58\x6c\xfb\x72\xac\x94\x60\x54\xba\xf1\xca\x32\x17\x21\xc4\xdc\x44\x28\x6a\x1d\x50\x77\x42\xc9\xa9\x5b\x2a\x1d\x07\xaf\x5c\x69\xb5\x12\xe4\xde\xea\x34\xab\x59\x66\x23\x92\x56\xcc\x77\x92\x8c\x6f\x44\x0d\xf8\xa1\xc0\x1b\x17\xb3\x09\x4d\x85\x75\xb1\xc2\x7f\x3a\x16\xcc\x31\x81\xc3\x09\xcd\x46\xa5\x1d\x9f\x38\xc9\x96\x4e\xa6\x42\xb8\x44\xf3\x05\x85\x2a\x89\x56\x16\x89\xcc\x62\x97\xe0\x0a\x8f\x9c\x99\x29\x6d\x9d\xe1\x53\x89\x3d\x38\xd8\x62\x0f\x6a\x20\x07\x9d\x41\xe9\x8d\x66\xce\x57\x08\x0c\x5a\x2d\x9d\xd5\x2b\x7c\x52\xe6\x52\x59\xdc\x58\x28\x1e\xbb\xe5\x0c\xc9\x1a\x64\x81\x9d\xab\x3d\xa7\x53\x86\x2c\xc9\x34\x9e\x2a\xab\x5c\x04\x03\xb9\xc4\xc5\xb1\x66\xf4\x87\xd3\xcc\xa6\x5a\x96\xe6\x77\xa8\x9d\xbd\x67\x30\x1d\x1b\x47\x23\x85\xc1\x70\xe9\x00\x78\x3e\x1c\xb9\x88\x71\xe1\xf9\x1a\xab\xd1\xfc\x9c\x27\x89\x99\x77\x80\x71\xec\x39\xf1\x70\x03\x02\x44\x84\x9b\xd3\x04\x9f\x67\x37\x07\x95\xa6\x31\xa7\xd2\x60\x96\xb1\x9a\x17\xd3\x3d\x83\x21\xda\x37\x1b\xe7\x65\x98\x7f\xe1\x1f\x98\x40\x4a\xa9\xe1\x39\xb7\x86\xfc\x99\x9c\xc3\x9b\xef\xba\x06\x5d\xe1\x8e\xd1\xd8\x61\xfe\xa6\x39\xb0\xc6\xe2\x9e\x59\x3f\x35\x11\x0b\xda\x2f\x9c\x7f\x05\x78\x2e\xd0\x6c\xe9\xe7\xed\xf0\x6d\x87\xbd\x77\x91\xc8\x28\xca\xf8\x76\xeb\xef\x10\x99\x2f\x33\xa9\x25\xc3\xd6\x33\xb2\x08\xfb\x2f\xe9\xf4\xae\xe6\x34\xcb\xbb\x92\x0e\x38\x6e\x7c\x2f\x59\xf6\xf9\x9c\xbd\xc7\x23\x66\x82\xae\x5c\x36\x76\x78\xa4\x95\x61\xf0\x4d\x6c\x80\xba\x10\xdc\x4f\x7e\xaf\xe4\x74\xc1\xa7\xdc\x7a\xdd\xde\x37\x37\xe1\xb2\x83\x96\xec\xe2\x9c\x34\x87\xb4\xf8\xe2\x8d\x2e\x79\xfd\xdc\x3e\x5e\x52\x38\xa9\x5e\xc8\x5f\xb0\x8f\x17\x14\x88\xc6\xff\x4f\x1d\xa9\xfa\x4a\x22\x7f\x52\x64\x57\x1b\x41\xe2\x6b\xdb\x7a\x46\x8d\x73\x16\xa7\x5b\x45\xf6\x8d\x64\xc8\x0f\x5c\x3e\xd5\x8b\xf9\xa8\x98\x3f\xb9\x31\x9b\x22\x00\x19\x02\x31\x61\xcc\xa7\x09\x7c\x9b\xf8\x4a\x9d\x8f\x02\xb1\xbf\xa0\x5c\x50\x9f\xec\x13\x91\x9a\xd9\x8b\xc4\xac\x72\xa4\xfa\x5d\xff\xa0\xb1\xa6\x09\xa2\x4e\x25\xe5\x9d\x0d\xd2\x68\x45\x51\xb9\x9e\x1e\x1f\x4f\x4c\x42\x23\x76\x32\x1c\x1e\xfc\xf2\xfa\x0b\x1c\x3c\xc1\x1b\x13\x05\x2c\x12\x69\xcc\xaa\x23\x89\x97\x68\x70\xe6\xaa\xa9\x44\xa1\x91\x67\x01\xce\xbd\xe6\x28\x3a\x4c\x54\x31\x1a\x34\x32\x4c\x4b\xaa\xa5\x2f\x26\xc0\x1c\xf9\x98\x68\x3a\x9d\xd3\xe0\x0d\xf9\x25\x4a\xfb\xd5\xc7\xa7\xfd\xa1\xab\x0e\x06\x8f\x95\x7d\x3a\x9e\x48\x6d\x17\x83\xc1\x30\x08\xf6\x2b\x38\x1c\x0c\xaa\x55\xf4\xd2\x4f\xc3\x33\x8c\x7f\x1d\xfe\xa7\xfe\xe1\xe8\xbf\xe5\xd1\x73\xde\x65\x2f\xe9\xe1\x24\x3f\xd9\xcf\x05\x5d\x35\x9b\x64\x9c\x72\x81\x12\xb4\x8e\x91\xdc\xdc\xd1\x08\xa1\xaf\xf9\x38\xb5\x6c\x34\x7a\x6d\xed\xa0\x3a\x80\x1a\x01\x16\xc1\x20\xa8\x78\xc2\x2a\x15\x79\xc5\xa3\x66\xee\x0a\x66\xc8\xe6\x38\x66\xb0\x5f\x0a\x0f\x0d\x2e\xff\xf0\x95\x04\x0f\x3c\xcd\x23\x14\xd5\xfc\xfd\xe9\x2c\x3a\x84\x02\x12\xa8\x7c\xc1\x68\x54\xfa\x0b\xa8\x6c\xfc\x28\xa8\x11\xf2\x5d\xa5\x78\xef\x0a\xe1\x9f\xfd\x80\x83\x69\xa4\xc8\x12\x3d\x97\xac\x54\x0a\x9d\xd5\x7c\x0e\x8c\x8c\x7f\x16\x7a\x1e\x26\xe3\x61\xfc\x0b\x0a\x47\x8c\xa0\x2b\xd8\x0f\x64\xcc\x22\x9a\x1a\xf6\xd6\xcf\x0e\xa2\x53\xff\x9b\x22\x93\x30\xce\x5e\x57\x34\x49\x04\x47\xe0\x17\x3f\x33\xd0\x93\xf0\x7a\xc4\x6a\x85\xf7\x1a\x23\x3e\xfe\x70\x54\x7b\x33\xa6\x3e\x3f\x3e\x9d\xfa\x47\xd1\xf0\x00\x75\xbf\x52\x81\xbf\x6a\xee\xf1\xa9\x32\x0c\x0e\x2a\x45\xb5\xf0\x2f\xcb\x5c\x47\x82\xd5\xd7\xd6\xdd\x77\x70\x34\xb0\x04\xaf\x3e\x9f\x92\xe8\x21\x0b\xf6\xa7\xb7\x98\xa3\x0f\x69\x7b\xba\xc1\x14\xe1\xf0\xca\x3f\xbf\x56\x08\x62\xed\xb4\xf2\xb4\x2b\xb6\x59\xa0\xb4\xc1\x77\x2c\x52\x46\x2a\x61\x58\x3b\xa8\xec\xee\x17\xd2\xc2\xc1\x41\xc1\x75\x70\x10\x16\x26\xa0\xb5\x08\xaf\x3f\x3a\x1c\x2a\xbf\x97\x5e\x5c\xff\x50\xb4\xfa\x57\x4a\xfd\x86\x47\xe0\xff\x02\x00\x00\xff\xff\x32\x9c\xea\xc1\x46\x0e\x00\x00")

func runtimeSyntaxArduinoMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxArduinoMicro,
		"runtime/syntax/arduino.micro",
	)
}

func runtimeSyntaxArduinoMicro() (*asset, error) {
	bytes, err := runtimeSyntaxArduinoMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/arduino.micro", size: 3654, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxAsciidocMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x92\x51\x6f\xda\x30\x14\x85\xdf\xf9\x15\x56\x3a\x89\xd6\x2e\xd6\x5a\xad\x0f\x43\x5d\x25\xb4\x4d\x13\x0f\x0b\xa8\xca\xb4\x07\x5f\x1b\x4c\xb0\x48\xb4\x94\x20\xc7\x51\xc7\x1a\xf8\xed\x33\xb1\x3b\x92\xc0\xea\x48\x51\x74\xbf\x7b\x8e\x7d\x4f\x5c\x6c\xd7\x46\xfe\x46\xc1\xa8\x88\xd3\xf4\x4b\x1e\x07\x28\x00\x7a\x29\x8b\xb8\x92\x87\xca\x32\xb7\x1f\xf6\x75\xf5\x2e\xe8\xf5\x2e\xd0\x93\x4c\xd7\x28\x51\x72\xa9\x74\x2f\xce\xb3\x5c\x23\xad\x96\x28\x10\x9f\xec\x22\xb6\xe5\x02\x25\x37\x1d\xc0\xd8\xb0\xd8\xc8\x58\x0d\x39\xa7\xd8\xb6\x34\xe9\xc0\x2e\x2f\xbb\xf5\xe0\x49\xae\x94\x3d\x91\xf3\x3c\xaf\x3d\xb6\xec\xed\xf2\xfa\x0f\x1e\xae\xb4\x52\x6b\x7f\xa2\xf3\xf2\xd7\x0e\xf0\x8f\x37\xb8\xf3\x78\xa1\xd3\x55\x62\x16\x59\xa9\xbc\xcb\x7f\x6c\x5a\x7d\x40\xdc\x43\x5c\x4c\xd2\x18\x9d\x2e\x4a\xa3\x8a\x56\xb3\xdf\x79\x48\xf1\xb0\xed\x52\xa7\x01\x2f\x4c\x0e\xfe\xbc\x1f\x7c\xe4\x18\x76\xad\x9c\x00\xde\x60\x6e\xe7\x26\x77\xa5\xfa\x20\x53\xa9\xe5\x4a\xcb\x4d\x82\xa2\xd4\x64\xca\x0b\xb7\x2a\xcb\xf2\xe7\xc3\xb1\x69\x3d\x90\x6d\x2c\xf2\x52\xc7\x0a\x9d\x24\x0c\xec\xd2\xa1\x6b\x4a\xaa\x70\x12\x7d\xad\xa2\xf1\xb4\x1a\x7f\x9f\x4e\x1e\xa3\x51\x18\x55\x3f\x47\x8f\xe1\x38\xfc\x56\x7d\x1e\xfd\x88\xc6\x93\xf0\x0a\x78\x6d\x37\x31\x89\x3a\xd8\xe8\x5f\xe5\xa6\xb3\x29\xc5\x8d\x3c\x81\xfc\xcb\xf3\x95\xcf\x98\x98\x71\x32\xeb\x96\x01\x33\x01\x98\x13\xc0\x27\x84\x58\x42\x78\x3d\x72\x9b\xcc\x99\x98\x73\x32\x3f\x11\x08\x2b\x10\x56\x20\xba\x64\xcf\xc4\x9e\x93\x7d\xb7\xdc\x67\xa2\xcf\x49\xdf\x4e\xe6\xea\xf1\x56\xda\xdf\x38\x7f\xb9\xb9\xbe\xdd\x39\x54\x7f\xd6\x93\x2f\xca\x2c\x53\xa6\xfd\xdf\x8f\x71\x36\x46\xc7\x0c\x30\xd0\x01\xb7\xd2\xbb\x5d\xa3\xee\x2e\xd0\x3a\x4e\x72\xdd\x76\x79\x4e\x52\x63\xef\x1a\x30\x60\x14\x03\x3f\x24\x7d\x06\xdf\xdf\x53\xfc\xf0\x10\xf4\xfe\x06\x00\x00\xff\xff\xa4\x74\xae\x91\xd8\x03\x00\x00")

func runtimeSyntaxAsciidocMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxAsciidocMicro,
		"runtime/syntax/asciidoc.micro",
	)
}

func runtimeSyntaxAsciidocMicro() (*asset, error) {
	bytes, err := runtimeSyntaxAsciidocMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/asciidoc.micro", size: 984, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxAsmMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x52\xc1\x6e\xd4\x30\x10\x3d\xd3\xaf\xb0\xbc\x3d\x6c\x42\x9b\x45\xdc\x58\x75\x8b\x7a\x40\xe2\xc2\x85\x4a\x48\x90\x64\x91\x93\x4c\x12\x0b\xc7\x5e\xd9\x13\xb2\x29\xc3\xbf\x33\x49\x77\xc5\x06\x7a\x19\x25\x9e\xe7\xf7\xde\xbc\xf1\x6a\x25\x3e\x82\x07\xa1\x83\x50\x56\xc0\x51\x75\x07\x03\xa2\x76\x5e\xa8\x10\xa0\x2b\x0c\xf8\xe4\x6a\xb5\xba\x0a\xa3\x45\x75\x14\xf2\xe1\xf1\x93\x14\x32\x4b\xd6\x8f\x14\x48\x85\x2e\xba\x96\x57\xa5\x33\x8c\xf7\x50\x71\xe3\x2e\x7d\xb8\xfd\xf6\x3d\xff\xf5\xf6\xe6\x77\x76\x7f\x6e\x15\x5e\x37\x2d\x36\x1e\xc0\xce\x77\x2b\x85\x8a\x42\x5f\x04\x28\x51\x3b\x4b\x08\x47\x8c\xce\xe0\xbf\x30\x65\x74\x63\xa9\xd6\x06\xa8\x31\xae\x30\x73\x55\x86\x5a\x5d\x55\x60\xe9\x7c\x3b\xe8\x27\x20\x1c\x0f\x40\x03\xa8\x1f\xd1\x52\x74\x04\x63\xdc\xf0\x4c\x17\x4a\xad\x69\xaa\x4f\x54\x8c\x08\x54\xb9\x9e\xe7\xa3\xda\x38\x85\xd4\x0e\xce\x57\xa4\x2d\x92\x71\xb6\xa1\xd0\x3a\x8f\x4c\x6d\x1b\x46\x04\xf4\x7d\x89\x34\x21\x98\xfe\x99\x78\x1a\x77\xad\x23\x21\xf7\x69\xba\x0d\x07\x55\xc2\x36\xcf\xe3\x34\x79\x73\xfb\x6e\x4e\x20\xde\x2e\x8d\x94\x23\xe7\xbb\x04\xaf\x2e\x7f\xd6\x15\xd4\xda\x02\xf5\x96\x3f\xd8\x47\x69\xfa\x0a\x48\xd7\xf6\xfd\xf4\x0f\xb6\xd2\x5c\xcd\x5c\xc2\x74\x4e\x83\xf2\x96\xed\x11\x78\xef\x3c\xdb\x9a\x36\xc9\x42\x66\x12\x13\xec\x98\x7b\x41\xac\xad\x43\xd8\x8a\x2f\x1f\x3e\x7f\xe5\x05\x05\xd7\xfb\x92\x77\x6d\x11\x6c\xd0\x3f\x21\x7a\x31\xaa\xbb\x74\xbf\x13\xaf\xf2\xf8\x9e\x17\x2d\xd7\x59\x96\x50\xba\x97\x79\x14\xcb\x17\x93\x0d\xa8\x3c\xee\x16\xc0\x2c\xbb\x1c\xec\x5a\x0a\x76\xbf\x93\xfb\x25\xd5\xc2\x6e\xe9\xba\x0e\x2c\x86\x85\x40\x61\x7a\x10\x72\xb3\x49\x62\xf9\xff\xf9\x49\x76\x93\xc5\x27\xfa\x2c\xde\xfc\x43\x8a\x5e\x69\xc3\x29\x88\xa1\xd5\x08\xb3\x9f\x13\xcf\xcd\xe9\x8d\x5d\xd8\x7c\xcd\xef\xf8\x4f\x00\x00\x00\xff\xff\x20\x59\x7e\x9b\x0c\x03\x00\x00")

func runtimeSyntaxAsmMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxAsmMicro,
		"runtime/syntax/asm.micro",
	)
}

func runtimeSyntaxAsmMicro() (*asset, error) {
	bytes, err := runtimeSyntaxAsmMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/asm.micro", size: 780, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxAwkMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x94\x5f\x73\xda\x38\x10\xc0\x9f\x93\x4f\xe1\x38\xdc\x85\x3f\x01\x6e\xee\xed\xb8\x5c\x38\x02\x26\xf1\x5c\xb0\x33\xc6\x97\x74\x6a\x9b\x8e\xb0\x65\xd0\x20\xcb\x54\x92\x0b\xb4\xfb\xe1\xbb\x86\xd0\xd2\x36\xf0\xc0\x6a\x97\xd5\xfe\x76\x57\x2b\x59\x6d\x84\x26\x6b\xc3\xec\xbd\xfc\x67\x1a\x66\xd8\x22\xab\x45\xc5\x3c\x9f\x53\x92\x50\x69\x98\x93\xcb\x8b\x56\x7d\xca\x44\xbb\x4a\xc5\x27\xa3\x51\xeb\xa2\xbb\x6a\x40\xa5\x66\x9e\x9f\xc7\x39\xcf\xa5\x31\x95\x6c\x36\xd7\x1b\xca\x79\xbe\xc2\xf8\x4a\xd0\x6b\xbe\x27\xcd\xcf\x7f\x34\xff\xfa\x70\xf1\xef\x65\xa5\xde\x6d\x46\x0d\xf3\xed\xbd\x37\xd5\x9e\x77\xdf\x07\x14\xb6\x33\x28\x97\x67\xb8\xb3\x9d\x91\x3b\xb0\xa0\xef\x3a\xcf\xc3\x91\x0f\x96\xf3\x6c\x7b\xae\x03\x96\xe7\x39\x2e\x0c\x6d\xeb\x71\xf0\x62\x0f\xfc\x87\x71\x2d\xbc\x3d\x4a\x1d\xda\x8f\x96\xd3\x1b\x59\x30\x74\x3c\x18\x8e\xc1\xbe\x77\x5c\xcf\xea\xf7\xc6\x16\x3c\xda\x8e\x0f\xce\x10\xd0\xe1\x96\x7c\x17\xdd\xae\x77\x92\xf6\xe4\xb9\x7d\xdb\x19\xba\xe0\x8d\xc1\xf3\x51\xfa\xbd\x72\xc1\x14\xf7\xfe\x03\x8c\xff\xbf\x1b\x5b\x4f\xe0\x5b\xef\xfc\x81\x3b\xea\xd9\xce\x2f\xa8\x29\x2f\xe8\x16\x94\x16\x22\xd6\x2c\x17\x40\xd7\x9a\x0a\x55\x6a\x77\x16\xb6\x8e\x4d\x0e\x0e\xa2\x24\x4d\x0c\x33\x68\x36\xea\xed\xdf\x26\x70\xf1\xcf\xef\x37\xb7\xdd\xbf\x3b\x11\x84\x21\x84\x01\x84\xd1\x7e\x5b\xbc\x21\xc2\xd8\x71\x73\x09\x2c\x85\xd5\x9c\x71\x0a\x49\x0e\x94\x2b\x0a\x4c\x40\x42\x39\xd5\x14\xb3\x31\x7d\x80\xff\x1e\x37\x95\x94\x2c\x20\xce\x85\x66\xa2\xa0\x20\xa9\x2e\xa4\x38\x5e\x7e\xcc\x73\xe4\xce\xa8\xe6\x4c\x50\x10\xd8\xc4\x56\xa4\x65\xd6\xa5\x64\x42\xef\x64\x0a\x6a\xa3\x34\xcd\x20\x4d\x79\xa1\xe6\xc7\x79\x44\x13\xf1\x27\xa6\x57\x58\xe1\x12\xca\x78\x9e\xcf\x40\x12\x91\x80\xc2\xea\xd5\x47\xa9\x41\x95\xe6\x09\x84\xca\x71\xd3\x56\x32\xac\x4c\xa8\x62\x0a\xb3\x52\x30\x91\xd0\x35\x70\x2a\x66\x7a\x0e\x19\xd1\xf1\x89\x3a\xd4\x92\x33\xcc\xb4\x2f\x5e\x4b\x9d\x8b\x22\x83\x12\x83\x3f\xb4\x41\x63\xd8\x8a\x96\x6b\xb1\x5c\x52\x79\x1c\x95\x2d\x34\xcb\x68\xc9\x48\x77\x0a\x9e\x04\xae\x27\x1a\xc0\x66\xe3\x3c\x5b\x72\xe0\x6a\xce\x52\x0d\x38\x4a\xb9\xd3\xd6\xf9\x89\x44\xf8\x22\x13\x8d\x87\x9f\xe4\x19\x29\x27\x1d\xe3\x58\x4a\x1b\x35\xf1\xaa\x1e\x04\x67\x04\xcf\x46\x13\x03\xc7\xde\x6e\xd5\x83\x49\x18\x46\xed\xbd\x6f\x7f\xd1\xcd\x6a\x18\xb6\x20\x98\x98\x51\xad\x6e\xc2\xd5\xab\x75\x85\xd6\xd5\x1b\x18\xf4\xfe\x5c\x19\x89\x17\x86\x59\x9d\x40\x10\x74\xd4\x92\xc4\xb4\x13\x45\xb5\xcb\x6a\x30\xf9\x12\xb5\xea\xb5\x6e\xe5\xc7\xed\x78\x57\x35\xbd\xde\x5e\x45\xd3\x77\x07\x6e\xa7\xbb\xf7\x5f\xcf\x24\xa5\xf8\xef\x01\xa6\xf1\x2d\xf8\x7a\xfb\x36\xce\x1a\x46\x03\x8c\xc6\x19\x7e\x56\xbe\x06\x00\x00\xff\xff\x02\x4a\x7a\x83\xbd\x04\x00\x00")

func runtimeSyntaxAwkMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxAwkMicro,
		"runtime/syntax/awk.micro",
	)
}

func runtimeSyntaxAwkMicro() (*asset, error) {
	bytes, err := runtimeSyntaxAwkMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/awk.micro", size: 1213, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxCMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x54\xef\x6f\xdb\x36\x10\xfd\xee\xbf\x82\x95\xb7\x45\x74\x12\x7b\x6d\x87\x6e\xcb\x96\x19\x83\xb1\xad\xdf\x36\x6c\xc5\x80\xce\x72\x0c\x4a\x3a\x5b\x44\x69\x52\x20\x29\xff\x58\xaf\xff\x7b\x1f\x6d\x25\x75\x1b\xe4\x83\x04\x89\x77\x7c\xf7\xee\xee\xdd\x0d\x87\xe2\x35\x79\x12\x3a\x08\x65\x05\xed\xd5\xa6\x35\x24\x56\xce\x8b\xd9\x64\x76\x79\x39\x1e\x0c\x87\x83\x70\xb0\x51\xed\x45\x36\xcb\x44\x56\x8c\xf3\x2a\xaf\xb8\x6d\x79\xbf\x97\x53\x9e\xc9\xaf\x4e\x87\x4d\xde\x3c\x1c\xbe\xee\x0f\xb5\x9e\xf6\xd6\x9a\x56\x38\x1b\x54\xce\x00\x58\xd7\x64\xa3\x5e\x69\xf2\xb0\x95\xf3\x5f\xaf\xff\x5b\x2e\xe6\xdf\x5e\xff\x78\xfc\xb8\x2c\xca\x4c\xf4\x8e\xf1\xd0\x52\x72\xc9\x57\xc6\xa9\xc8\xb5\xeb\x4a\x43\x5c\x3a\x67\xb8\x6a\x94\x67\x6d\x23\x87\xc6\xf9\xc8\xc6\xd9\x35\x07\xfd\x3f\xb9\x15\x93\xed\x36\xbc\x75\xba\xe6\x10\x55\xd4\x15\x57\xce\x06\x38\x46\xdf\x55\x91\x3b\xab\x9d\xe5\x84\x0c\x4e\x4c\xfb\x48\xde\x72\xde\x59\x39\x0d\x7a\x6d\xa9\x06\xa8\xd1\x96\x24\x68\x7c\xc9\x22\x0f\xd3\x14\x42\x72\x9e\x77\xcb\xa9\x9c\x22\x7c\xfe\x03\x3f\x7f\xc5\x2f\x5f\xf0\xab\xef\xb8\x8d\x5e\x4a\xb9\x8c\x9f\x6e\xa6\xf8\xb4\x41\xb2\xc7\xeb\x95\x51\x21\xb0\x55\x1b\x0a\xad\xaa\x88\x61\x6a\x0d\x1c\xb8\x45\x5a\xa0\xd9\x7a\x17\xa9\x8a\xa0\xd0\x7a\xbd\x4d\x86\x14\x39\xf9\x73\x6c\x74\xe0\x95\xd7\x64\x6b\xde\x6a\x1f\x3b\x65\xb8\x0b\x1a\x39\x6f\xba\xa8\x52\x51\xb6\x0e\x50\x1a\x1f\x9e\xd6\x3a\x20\x29\xa4\xd6\x02\x55\x47\xf9\x14\x1f\xf4\x98\xf5\x8a\x77\x4d\xba\x56\x3b\x26\x13\x88\x2b\x85\x17\x2a\xa3\x3a\x83\x92\xed\x74\xac\x9a\x27\x01\xa2\x3f\x80\x99\x77\x3b\xdc\x82\x1f\xbb\x96\xbc\x8a\x40\xb5\xb4\x03\x86\xa1\x48\x4f\xde\x5d\xbb\xe8\x52\x63\xa2\xb6\x1d\x5a\xea\x49\xbd\x03\xf5\xd8\x79\x7b\x76\xa5\xf5\x84\xa2\x54\x22\xbb\x9b\xcf\x6f\x8e\x45\xbb\x59\x2c\x46\xc3\xf3\x9f\xa4\x2c\xb4\x0b\x5d\xab\x4c\x57\x53\xea\x24\x92\xb2\x53\x79\xec\xae\xad\x91\x20\x99\x1c\xef\x80\xbe\xa5\x6c\x95\xb7\xa9\x6e\xe4\xbd\xf3\xf2\x3e\xd0\x51\x21\x2a\x51\xbb\xc8\xe7\x77\x17\x45\xb1\xe0\xbc\x28\xe6\xd9\x85\x2a\x57\xd6\xc7\x2d\x0e\xa4\xbc\x80\x94\x61\xca\x73\x68\xf5\xe5\x62\x8a\xf7\xf7\x8b\xf7\xcf\xaf\x5e\x7c\x78\x30\xed\x4f\x2a\xfe\x5d\x5d\xaf\x4e\x96\x8b\x6c\x90\xe6\x07\x33\xf6\xc7\x6c\x26\xca\x4e\x1b\xe4\x1b\x1e\x17\x64\xb9\x54\x31\x7a\x5d\x76\x91\x96\xcb\xf3\xf4\x8a\xbc\x00\x21\x89\x0f\x59\xc8\x2c\x39\xe6\xca\x9c\x74\xaa\xc2\x86\x7b\x44\x6e\x74\x8d\x99\xea\xa5\xcb\xb8\xfc\x0e\x0e\x9e\x20\x79\x0d\xc9\x07\xa8\xea\x5e\xf4\x98\x8f\x1d\x6a\x2d\x97\xcb\x44\xed\xcf\xbe\x63\x62\x96\x18\x3d\xe6\x35\x1f\xdf\xfc\x74\x75\x39\xe2\xdb\x67\xc5\xd7\x0b\x84\xff\x19\xcf\x2f\x78\x26\x78\xae\xf1\x7c\x83\x51\x1d\x0c\xff\x52\x1e\xde\x0d\x61\xd6\x94\xe9\xa1\x86\xe2\x04\xb6\x51\x6b\xd8\x14\xa0\x72\xf9\xfe\x43\xc2\x40\x59\xf1\x5a\x20\x7c\x5f\x9a\x7f\xc0\xd2\xae\x45\xa3\xd7\x0d\x52\x6b\x90\xcf\x7a\x2c\xc4\x5b\xd7\x89\x9d\x36\x46\x68\x2b\x00\x01\x9e\x46\xec\x52\x8b\x0e\xae\xf3\xa2\xf4\xc9\xb3\x34\xc8\x34\xed\xad\x3a\xe1\x84\x23\x4e\x10\xd1\x21\xf6\x86\x04\xc6\x2d\x5e\x89\x92\x2a\xd5\x05\x12\xfd\x0e\x3b\x8f\x22\x7c\x67\x28\x9c\xa2\x94\x94\x20\x54\x8b\x99\xa1\x3a\xc5\x44\x3e\xc2\xf9\x1a\x3b\x0a\x5f\x07\x81\x14\x05\x44\x9a\x4c\xe3\x47\xa2\xc9\x20\x96\x31\xcf\xef\xb2\x85\x1c\x65\x59\x9f\xd6\x1b\xcc\x6c\xcf\x29\x2d\xd7\x7f\x7f\xfb\xfb\x2d\x10\x02\xd8\x57\xd8\xb6\x36\x92\x0d\x7a\x4b\xcf\x06\xc3\x1e\xed\x80\xf5\x0b\x3c\x1f\x6f\x3f\xc3\x83\x0c\xcf\xf4\x80\x75\x0a\x51\xdf\x66\x77\x9f\x47\x4c\xf1\x66\x6e\x73\x6c\xda\x79\x86\x0f\x4c\x4f\xa6\x6c\x32\x19\x8f\xb2\x2f\x0e\xfb\x98\x93\x62\xd4\x63\x17\xa3\xc9\x09\xf1\x8d\x57\xda\x24\xfa\x58\x11\xf1\xb4\xb4\xee\xd9\x5e\xad\x3d\x91\x45\x57\x3f\x71\xbb\xc4\x7e\xff\x18\x00\x00\xff\xff\xd5\x88\x9a\xb3\x4d\x06\x00\x00")

func runtimeSyntaxCMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxCMicro,
		"runtime/syntax/c.micro",
	)
}

func runtimeSyntaxCMicro() (*asset, error) {
	bytes, err := runtimeSyntaxCMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/c.micro", size: 1613, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxCmakeMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x52\x6d\x6f\x9b\x3c\x14\xfd\xce\xaf\x40\xa6\x52\xed\x3e\x6a\x94\x67\x95\xb6\xb5\xda\x16\x51\xe2\xa5\x48\x60\x98\x21\x6d\xb3\x90\x22\x4a\xdc\x84\x95\x40\x65\x88\xda\x28\x77\xff\x7d\x86\xa6\x11\xeb\xda\x0f\xc8\xf7\xed\xdc\x73\x74\xb8\x86\xa1\x5b\x6e\x72\x2f\xf4\x6a\x53\xd4\xc9\x93\xbe\xcc\x16\xcb\x5c\x7d\xb5\x90\xfa\x5d\x29\xf5\x11\x1b\xeb\x2c\x29\x4a\xcd\x30\xb4\xdd\x08\x6a\x01\x48\x47\xb8\x0d\x9c\xac\xaa\xab\xa8\x57\x3f\xd5\x10\xf5\xd2\x95\xaa\x90\x03\xa4\x69\x0b\x29\x44\xa1\xe3\x8c\xe8\xe8\x66\x3a\x3d\xab\x1e\x92\x54\x9c\xcd\x66\x47\x53\xf3\xf8\x67\xff\xf8\x34\x9e\xfd\x87\xb4\x5b\xd9\x30\x6d\x44\x9e\x97\x8f\x6f\x8c\xe2\xac\x48\xf3\xf5\x5c\xc0\xee\x8d\xe7\x99\x14\x69\x5d\xca\x4c\x54\xfb\x9a\x78\x52\x52\x8b\x24\x8f\x57\xd5\x83\x2c\x7f\xa9\x3e\x89\xbe\x29\xfe\xe7\xdd\xef\xa9\x88\xbe\x60\x2c\xf2\x4a\x80\x28\xe6\x64\x90\xdd\x41\x9b\xe0\x36\x7b\x5c\x66\xf9\x4b\xac\x2c\x10\x49\xba\x84\x5b\xf5\xdc\xb7\x8b\xd3\x32\x57\xb6\x74\xb7\x23\xb5\xcc\xf2\xfc\x09\x30\x2f\x04\xcb\x73\x5d\x93\x0d\xc1\xe7\x9e\x4f\x79\x38\x01\xdf\x73\x6c\x6b\x02\xa1\xc9\x47\x34\x04\x7a\x6d\x07\x61\x00\x76\x10\xe3\xa1\xcd\xa9\x15\x7a\x7c\x02\xe6\x79\xe0\x39\xe3\x90\x12\x18\xd2\xef\x36\xa3\x43\x45\xd4\x11\xfb\x26\x67\xa7\xaf\xe8\x3d\x0e\x0d\xa9\x5a\xcb\xe8\x15\xe5\x71\x78\x61\x32\x70\xcd\xd0\xba\xa0\x01\xe0\x20\xe4\x70\x49\x79\x60\x7b\x2c\x26\x03\xec\xd0\x20\x80\x11\xa7\x66\x48\x39\xd0\x1f\x63\xd3\x21\xaf\x09\x77\xee\x49\x31\x7f\xcf\xbb\xc6\x1c\x7c\xb7\x2e\xd2\x3a\x2b\x0b\x58\x25\xa9\x2c\x09\x48\x51\xaf\x65\x41\x14\xde\x08\x6a\x99\x15\x0b\xdd\x6a\x94\xef\xf4\xa7\x9b\xa4\x11\x7e\x38\x9b\xde\x1c\xaa\x3b\xb8\x89\xa2\x99\x4a\x50\x5b\xda\x9e\xfc\xee\xed\x4b\x2a\x41\x7f\x63\x90\xc2\xa0\x17\x0c\x6a\x31\xa8\x8b\x41\xcf\x98\x57\xb2\xab\x3a\x91\xf5\x57\x14\x1d\xe0\x68\x0b\x94\x5d\x46\x5b\x82\x74\xa5\x5c\x95\xf6\x04\xab\x64\x21\xd4\x55\xb7\x3f\xd1\xf4\x7d\x87\xc2\x98\xd9\xd7\x70\x65\xb3\x93\x0f\x60\x4d\x46\x2a\x80\x73\x8f\x3b\x8d\xbd\xae\xcd\x46\x57\xe0\x06\x97\x16\x8e\xed\x21\x85\x8f\x7d\xf8\xf4\x3f\x7c\xee\xc3\x69\x9f\x0c\xba\x57\x77\x9b\xaf\xc5\xce\x38\xdc\x75\x8e\x0c\x8c\xde\x11\xfa\x67\xa8\x33\xd2\xf6\xb5\x3f\x01\x00\x00\xff\xff\x79\xbe\xf5\x19\x95\x03\x00\x00")

func runtimeSyntaxCmakeMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxCmakeMicro,
		"runtime/syntax/cmake.micro",
	)
}

func runtimeSyntaxCmakeMicro() (*asset, error) {
	bytes, err := runtimeSyntaxCmakeMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/cmake.micro", size: 917, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxCoffeescriptMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x52\xcb\x6e\xdb\x30\x10\x3c\xc7\x5f\xc1\x30\x41\xad\x47\xe5\xf4\x5a\xc3\x75\x5a\xf4\x13\x7a\xab\x25\x07\x14\xb5\xb2\x84\x10\x4b\x81\x8f\x2a\x6a\xf7\xe3\xbb\x4e\x2d\xd8\x4d\x0c\xf0\xa0\xe5\xee\x0c\x67\x76\xe4\x27\x0c\xea\x45\xc8\xef\xb6\x6d\x01\x7e\x68\xd7\x0f\x41\x0a\x59\xae\xf4\xeb\xc5\xbd\x5c\x74\xa0\x1a\x70\x42\xee\xef\x6e\x57\xd9\x43\x02\xf8\x4b\xe4\xe9\xe3\xbf\xb6\x5c\x2c\xb4\x35\xd6\x09\x07\x8d\x90\xbb\xdb\x0f\xf4\xe5\x21\xcb\x8b\xcd\xb6\xa2\x72\x93\x28\x6c\xc8\x3a\xea\x3d\x1f\x0c\x84\x36\xa4\xe5\x56\x9e\x10\xb5\xeb\x0f\x5d\xa8\x4d\x04\x06\x7e\x2b\x7e\xaa\xe2\xf7\x53\x75\xfa\xf8\x54\x7c\x7e\xaa\xb2\xf5\x6e\xb7\xf6\x83\xd2\xb0\xae\xaa\x2c\x29\xb6\x54\x26\x29\x4b\x2b\xae\x53\x24\x69\x35\xdf\xeb\x49\xa1\x60\x0f\x9b\xa4\xe5\xe7\x6d\x4b\xda\x62\xe8\x31\x02\xd5\x0e\xd4\xf3\x49\x4d\x34\x86\x22\x1a\xf0\x9e\x42\xc7\x1a\xc1\x78\xa0\xbe\x25\x07\x21\x3a\xbc\x50\x7a\xa6\x0b\x6e\x22\xad\x82\xee\xa8\xed\x51\x19\x33\x31\xd2\xd9\x91\x10\x46\x6a\xc0\x40\x00\x0a\xd3\x00\xfc\x62\x8f\x7c\x7c\x50\xa8\xb9\xba\xca\xd5\x40\x1d\x0f\x07\x70\xe4\xc7\xfe\xc8\x38\x76\xbd\x01\x6a\x2c\x69\xa3\x58\x12\xbc\x04\xc0\xc6\x93\x8f\x03\xb8\xab\x04\x11\x1b\x60\x19\xd0\xb0\x08\xc0\xd9\x4a\x64\xa7\x86\x8c\xb5\xc3\xd1\x78\x3d\x31\x2f\xe0\xbb\xb5\x5f\x5a\xe2\xb5\xb4\xea\xe8\x7d\x02\xcf\x19\x91\x45\x46\xb6\xef\x20\x13\x18\x63\x47\x21\xbf\xfe\x97\xd1\x3c\x33\x77\x65\x52\x96\x2b\xda\xed\x65\x95\x66\x92\x96\xa7\x6a\xc9\xd5\xf2\x6d\x6a\x4a\x3f\x0b\x99\xec\xe9\x22\xe5\xf4\x2e\xd9\xed\xff\x54\xab\x2c\x7d\xbc\x9f\xc7\x3f\x1e\x1c\x00\x72\xc0\xe7\xb1\xfc\xdc\x7c\xfd\xef\x6e\x72\x91\x93\xc8\x6f\x72\xb9\xf8\x1b\x00\x00\xff\xff\xc9\xb0\xc1\x00\xcf\x02\x00\x00")

func runtimeSyntaxCoffeescriptMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxCoffeescriptMicro,
		"runtime/syntax/coffeescript.micro",
	)
}

func runtimeSyntaxCoffeescriptMicro() (*asset, error) {
	bytes, err := runtimeSyntaxCoffeescriptMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/coffeescript.micro", size: 719, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxColortestMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8f\xc1\x0a\xc2\x30\x10\x44\xef\xfd\x8a\x10\xfc\x0c\x11\xc4\x93\x20\xe2\xc1\x63\x2f\x49\x5c\xa2\x18\x1b\x48\x23\x9a\xbf\xb7\x9b\xb6\xbb\x6b\x4e\x3b\xf3\x66\x20\x93\xb1\x0c\xd9\x7c\x95\x76\x31\xc4\x74\x85\x31\x6b\xa5\x0f\xab\xde\xe8\xae\xab\x81\xb2\xc1\xb8\xa7\xd2\xfd\xf6\x72\xda\x1f\xcf\xfd\x8e\x82\x04\x37\xc4\xd3\x41\x38\x33\x9f\x00\x06\xa4\x55\x30\x2f\x10\x42\xfc\x60\x30\x2b\x4e\x6c\x78\x03\x72\xbc\x4c\x5f\xc6\xc3\xb4\x0e\x83\x45\x72\xe6\x8a\xa9\x4f\xe0\x15\x73\x6c\x7a\xf8\x7b\x5e\x46\x91\x11\x0f\x55\x44\x03\x85\x6d\x3b\x3c\x56\xfa\xb6\x45\xc3\xc9\xb5\x0d\xf1\x89\x3f\xd0\xf6\xd6\x0f\xb1\xc3\xc6\x2f\x00\x00\xff\xff\x3b\x80\xe8\xb0\x9f\x01\x00\x00")

func runtimeSyntaxColortestMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxColortestMicro,
		"runtime/syntax/colortest.micro",
	)
}

func runtimeSyntaxColortestMicro() (*asset, error) {
	bytes, err := runtimeSyntaxColortestMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/colortest.micro", size: 415, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxConfMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8e\xb1\x4e\x03\x31\x0c\x86\xf7\x3c\x85\xe5\x30\xb4\x37\xe4\x01\xba\x30\x74\x61\x44\x62\xcc\xa5\x52\x2e\x38\x6d\xa4\x8b\x73\xb2\x83\x68\x25\x1e\x9e\x1c\x30\x32\x7f\x9f\x3f\xff\xd6\xc2\x0b\x09\x41\x51\x88\x0c\x74\x8f\x75\x5b\x09\x72\x13\xe0\xc8\x4d\x12\xe4\xb2\x92\x3a\x63\xad\xd1\x07\xf7\x78\x07\x3c\x37\xce\x08\x38\xbb\xe4\x5b\x78\xe6\xfc\x84\x83\xc2\x6b\x53\x2d\xcb\xb8\x25\x91\x26\x7b\xed\x1d\xb6\x28\xb1\x52\x27\xd1\xdd\x78\xeb\x52\xf8\xaa\xe6\xf3\x56\x3a\xc1\xa1\x1c\x01\xf1\x30\xcf\xee\xcb\x5f\x30\x1c\x27\xfc\xc9\x9c\x5b\xad\xc4\x5d\xcd\x22\xe5\x7a\xeb\xcb\xfa\xf1\xa7\x5e\xbc\x3f\xe9\x16\x13\x9d\x42\x98\xac\x9b\xc6\xd7\xf4\x18\x93\xff\x81\xbf\xd4\x7c\x07\x00\x00\xff\xff\xe6\x88\x60\x09\xdb\x00\x00\x00")

func runtimeSyntaxConfMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxConfMicro,
		"runtime/syntax/conf.micro",
	)
}

func runtimeSyntaxConfMicro() (*asset, error) {
	bytes, err := runtimeSyntaxConfMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/conf.micro", size: 219, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxConkyMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x59\x5d\x8f\xe5\xb6\x0d\x7d\x9f\x5f\x31\x99\x5d\x14\xd9\x14\x59\x24\x9b\xaf\x0d\x9a\x26\x2d\x8a\xbe\xf6\xa5\x41\x51\x34\x37\x55\x65\x5b\xb6\x85\x6b\x5b\x8e\x24\xdf\x8f\x44\xf9\xef\x3d\x24\x25\xdd\xeb\xd9\xcd\x5b\x51\x60\xae\x79\x48\xcb\x92\x4c\x51\x87\x94\xe7\xc5\x8b\x87\x17\x2f\x1e\xff\x7e\x5d\xa2\xbe\x3c\x8e\x76\x18\x27\xfc\xa2\x5d\x86\xc7\xde\xf9\xc7\xd6\x2d\xc7\xab\x6f\x1f\x7b\x3b\x99\xf0\xfa\x81\x1b\x3f\x04\x69\xfc\xf4\x17\xba\xf9\xf4\xf8\xf4\xe1\xe1\xf5\x47\xb9\xe1\xeb\x8f\x5e\x26\x86\xaf\x71\xed\x5f\x3d\x3d\x50\xe7\x68\xd7\xdb\x61\xf3\x3a\x5a\xb7\x3c\xda\x68\xe6\xf0\xd0\xba\x09\xdd\x0f\xde\x98\xe5\xf1\xe9\xf0\xcd\x87\x1a\xc3\x2e\xb3\x59\x62\xd2\xeb\x6a\x96\x4e\xd1\x88\xa9\xd1\xed\x71\xf0\x6e\x5b\xba\xd4\x38\xdf\x19\xaf\xec\xb2\xe0\x3a\x6b\x3f\xd8\xa5\xd8\xdc\x16\xdf\xb1\x9d\x6d\x17\xc7\xc4\xa3\x7c\x22\xe2\x53\x11\x6f\x44\x7c\x26\xe2\x73\x11\x5f\x88\xf8\x52\xc4\x57\x22\xde\x8a\xf8\x5a\xc4\xdf\x52\xbb\x6e\x4a\x9f\x06\x15\xf4\xbc\xc2\x1b\xa9\x33\xbd\xde\xa6\xa8\x1a\xed\xd5\x68\xc8\x6b\x3b\x93\xcc\xa0\x58\xb8\x8f\xaa\x0d\x7a\x1b\xcc\xf3\x87\xc4\xb8\x7f\x6c\xf0\x7a\x1d\xdf\x69\xc8\xc6\x7d\x43\xf8\x60\xb2\x8b\x79\x36\x4e\x18\x75\x57\x6d\x36\x1c\xad\xdb\xbf\x81\x0d\xeb\xa4\xaf\xa9\x73\x5b\x33\x19\xd5\x6c\x7d\x6f\xd0\xd0\xeb\xb3\x12\x37\x06\x51\x64\xc0\x9d\x29\x8f\x27\x0a\x0f\x13\x92\xb9\x44\xaf\xd5\x62\xce\x7c\xa7\x77\x58\x4c\xc4\xd0\xac\xa3\x1a\xb7\x59\x2f\xca\x1b\xdd\x69\x0c\x94\x06\xbd\xaa\x0b\x5f\xaf\x69\x8c\x71\xc5\x9d\xde\x9b\x30\x26\xdb\xab\x6d\x55\x21\x7a\xdb\xc6\xc5\x84\x90\xec\xac\x57\x5c\x26\xdb\xa8\x56\xb7\xa3\x51\xfd\xb4\x85\x11\x51\x80\x15\x3f\xe9\x69\x77\x2b\xd8\x9f\x4d\x9a\x36\xad\x78\x4e\xa3\x73\x47\xb5\xba\x10\x9f\x9b\xbc\x34\x9a\x9c\xee\x18\x84\x71\x8b\x9d\x3b\x2f\x7c\x5b\x2c\x51\xfb\x88\x79\xb0\x61\xd6\x76\x52\x61\x75\x6e\x02\xbc\xa0\x47\x1f\xd5\xec\x16\x1b\x9d\x87\x63\x11\x8d\x2d\x45\x75\xe0\x9b\x11\x1e\xc8\xeb\x42\xea\x16\x10\x88\x64\x23\xcd\xce\xdb\x5c\xee\xd9\x85\xb5\xbc\xac\x45\xcd\x37\xd7\x0e\x03\x63\xda\x04\x56\x1d\xc2\x19\x6e\x17\x05\x43\xa7\x79\x0b\xb6\x55\xb4\x6a\xbc\x19\xb2\x1b\xe6\x6b\xf8\x69\xca\x8f\x31\x94\xb6\x0c\x69\x16\xc5\x5a\xbb\x63\xb5\x6b\xd2\x62\xe2\x2e\x22\x16\x97\xa3\x00\xf0\x64\x3b\x0b\xcf\xe5\x18\xc1\x82\xab\xe8\xe8\x95\x83\xc3\x12\x66\x95\x56\xaf\xe0\xa5\xdd\x7c\x40\x1f\x59\x0d\x11\xd1\xe2\x8b\x76\x49\xee\x04\xd5\x22\x1c\xb7\xd8\xbf\x85\xfb\x5b\x4d\xdd\xc0\x78\xf6\xa0\x04\xd9\xef\xb4\x0c\x67\xbb\x60\x39\xee\xa0\x6a\x27\xcc\x7b\x67\x40\x40\x6f\xfe\xde\x32\xc2\x15\xbb\x26\xd1\xc6\x5d\x7f\x0a\xa1\xb9\x84\x55\x7b\xa2\x98\x7b\xf3\x75\x35\x69\xd5\xf0\xae\xf1\xad\xa1\x4e\x56\xb7\x7e\x96\x82\xc1\x6b\x7a\xd5\x99\x93\x6d\x4d\x0a\x23\xad\xfa\x86\x45\x0f\x84\xcb\x86\x40\x8f\x83\xb9\x37\x04\x7e\xa7\x10\xed\x0a\x67\x76\x75\xc3\x80\xf0\xd0\xbb\x8e\x9b\x37\xdc\x09\x1b\x26\x1d\x4d\x05\x9f\x54\xf4\x69\x45\x6f\x2a\xfa\xac\xa2\xcf\x2b\xfa\xa2\xa2\x2f\x2b\xfa\xaa\xa2\xb7\x15\x7d\x9d\x38\x00\x39\x32\x65\x65\x65\x9f\x44\x3b\x9b\x80\x00\x52\xc1\x60\x49\x3b\x4c\xd2\xad\x8a\x18\x2e\x18\x38\x89\xe7\x06\xc3\xa2\xe7\xc2\x48\xd1\x45\x3d\x29\xbf\x2d\x8a\x1f\x4d\xdb\xda\xa1\xd5\x2d\x04\x9f\xe9\xca\x2d\x60\xc1\x08\xe5\x8a\x5b\xe4\x5c\x1d\x4c\x42\x2c\x62\x2f\xe9\x16\x11\x49\xf0\xd2\xc7\x84\x9f\x9e\xd6\x51\x13\x20\xca\x78\x75\xf8\xf6\xb7\xb2\x06\x65\x23\xec\x4d\x2c\x52\x4e\x1f\x57\x33\x4d\xee\x2c\xf9\xa3\x41\x28\xa5\xc6\x40\x47\x0a\x88\xd1\xcd\x6a\x32\xe8\x3e\x63\xcf\x3b\x2d\x2b\xb3\xed\x3a\xac\x13\x28\xeb\x88\x97\x04\xfb\xb5\x47\x04\x3e\xfe\xc0\x5a\x0b\x11\xd6\x54\x83\x35\x81\x33\x57\xec\x9b\x01\x33\x66\x18\x75\x38\x82\xdd\x69\x91\xdb\xe3\x95\x9d\xc4\xe3\x10\x90\x41\x08\xe5\x11\x44\x48\x83\x8c\x7d\xde\xf2\xac\xe4\x66\x48\x6f\x58\x04\x72\x7a\x97\xae\x26\x54\x0f\xfc\x43\x7b\x4b\x7c\x59\x5e\xb7\xe1\x87\x9b\x69\x33\xf2\xca\xed\x6a\x75\x0b\x4a\x5d\xe1\xe5\x44\x5a\xaf\x17\x96\xb4\xf8\x49\x77\x9d\xe7\x4b\x48\x9c\x5c\x5b\x11\xb0\xad\xed\xb6\x86\xae\x48\xb0\x27\x71\x72\xd5\x46\xe4\xd1\x9b\x8a\xad\x17\x2f\x94\x15\xaa\x01\xdc\x7e\xba\x69\xc4\xa2\xf7\x0a\xf9\xe6\x5e\xe7\xa4\xb6\xb7\xd0\x56\xa9\x96\xd9\x75\x66\xaa\x1a\xc5\x5b\x55\xb0\xd4\x71\x0b\x55\x95\x97\x2a\x0a\x62\x90\xdd\x5a\x0c\xb8\x50\x57\xd0\x67\x55\x5d\x02\x9c\x63\x10\xd3\xee\xcd\xce\x40\x3d\x24\xbd\x75\xba\xb5\x6e\x0b\x8a\xe7\x7d\xd3\x6c\xe4\x3d\x70\xb3\xc0\x2d\xe0\xfa\x29\xdc\x99\x88\xb1\x64\xc2\x37\x93\x37\x3f\x6d\x66\x69\xaf\x77\x36\x34\x1a\xb0\x7f\x9e\x1b\xea\xc6\xbb\xdd\x40\xaa\x59\xd4\xc9\x4d\xdb\xae\x4f\x62\xdf\xc9\x86\xf8\x6e\x47\xf5\x0e\xd2\x9c\xa5\x5d\x72\x7f\xef\xb7\x4d\xef\x19\xb9\xb8\xba\x1a\x84\x3e\xcb\x06\x2e\x3e\x23\x27\x15\x9c\xf9\xb2\xea\xcc\x91\x69\xe7\xdd\x06\xb1\x72\x4c\xcd\xbc\x5e\x94\x9e\x9a\x6d\xce\xd0\x47\xcc\x59\x70\xf1\x33\x2b\x79\x4c\x86\x1e\x85\x9f\xc0\xcd\xdb\x54\x52\x12\xe7\xf9\x2e\xb5\x73\xc7\xb5\x0e\xd2\xca\x6a\x3b\x29\xcf\xfe\x67\xa5\xde\xdc\x50\xf1\xc2\x35\x2c\x08\xd3\x4e\x1d\x26\xdc\x8e\x3b\x03\x11\x5d\x36\x80\x26\x02\x79\x19\xcc\x49\x3f\x72\x10\x84\x04\x3d\x01\x8e\x75\xe4\xc5\xe9\xc6\x36\x22\x25\xd4\xab\xb2\xcd\x8d\x91\x12\x0d\x05\x8a\x8b\x28\x2a\x72\xbd\x56\xca\x36\xaa\x9d\x0a\xe6\x84\x99\x15\x19\xe1\x0e\xdf\xb7\xcc\x85\x62\x69\x8e\xb2\xaa\xd9\x38\x28\xa8\xde\x09\xab\x81\x2f\x2b\xea\x6f\x30\xf7\xe9\x75\x1f\x29\x26\x11\xf4\x08\x7c\x93\x50\x95\xdb\x1e\xd7\xe8\xdd\x7a\x45\xd5\x80\x3b\x55\xa3\x17\x2f\x98\x22\xe3\xa6\xa0\x70\xe2\x84\x63\x28\x49\x18\x70\xb4\xb9\x98\x96\x2f\xfc\x0c\xa4\x78\x8b\x11\x0f\x4c\xc8\xca\xb5\x34\xb1\xb7\x36\xf6\xd6\x68\x95\xab\x4d\xfd\xa4\x87\x01\x09\x57\x26\x7b\x5f\x78\x72\x1c\x02\x9f\x35\x52\x71\x6d\x80\x5d\xca\x17\x35\xa4\x5e\xb6\xbe\x08\xda\xbf\x86\xf0\xbd\x94\xf7\x81\xc2\xaf\x01\xc9\x25\x03\x24\x32\x58\x57\xa4\x34\x1a\x5c\x74\x69\x38\x2b\x10\x31\xaa\x06\x02\x6b\x1a\xbb\x8e\x99\x6b\xa4\x65\x19\x7d\x1a\xcf\xa8\x1e\x93\x7d\xd3\x26\xfb\xf6\xa8\x74\x5b\xf6\x1e\x69\x8d\x75\x19\x6c\x48\x54\x4b\xb8\xbf\x47\xb9\x99\x3b\x22\x85\xa8\x4f\xf5\x54\x52\xaf\xf3\xde\x70\xf7\x04\x67\x8b\x5d\xab\x9b\xe5\xae\x19\xca\x43\x4b\x95\x34\x60\x89\x66\xdb\x80\x27\xb9\xb1\x14\xe1\x50\x29\xb5\x90\xa4\x29\x88\x25\x13\x95\x6d\xe9\x61\xec\x86\x93\xd4\xcd\x15\x23\xd6\x51\xce\xa3\x79\xbc\x32\xb8\x20\x00\x71\xac\x24\x3c\x9c\xe9\x8a\xf5\x69\xb9\xe4\x9f\xed\x85\xce\x6f\x38\xc5\xb1\x86\xe3\x1e\x65\x42\x82\x54\xf5\x82\xe4\xf2\x63\x28\x3e\x96\x0c\x03\xce\x05\x96\xb8\x1c\x05\x07\x86\x9d\x26\x79\x60\x5b\xe5\x4a\x3b\x14\x99\x0e\xf8\x32\xcf\xe1\x4d\x29\xd4\xa9\xd1\x8c\x5c\xce\xc7\x0a\x85\x2a\x26\x40\x91\x43\x06\x0a\xb3\x80\xb3\x68\xc2\x0a\x10\xc7\x6c\x13\xb6\xa3\xc5\x92\x1e\x8d\x07\xed\xa7\x09\x19\x85\xf2\x3a\xa5\x18\xe2\x9e\x90\x28\x95\xa1\x72\x4e\xb7\x94\x86\xa3\x03\x1f\x1f\x28\x9e\x48\x4a\xcc\x32\x2a\xf7\x51\x49\xa0\x44\xc6\x71\xa0\x1d\x89\x65\x24\x1c\xe7\xc6\x5d\x50\x39\x2e\x69\x36\x33\xfd\xce\x36\x8e\x85\xf1\xa0\x52\x77\x7b\x6b\xb6\x18\x1d\xae\x1c\xa8\xc0\x45\xca\x98\x04\x78\x48\x00\x1c\x3d\x48\x70\x7c\xb2\xa3\xe5\xca\x7d\x10\x98\xb2\xa8\x86\x22\xd8\xe0\xda\x4c\xdd\x8c\x84\xb9\x09\x16\xe2\x26\x0c\x7a\xe3\x6d\x46\x98\xab\x78\x02\xf5\x6e\x70\x58\x31\x06\xb1\x98\x6a\xf2\x16\x25\xe6\x47\xb8\xc2\xcc\x3d\xf1\xf9\xaa\xc8\x42\x8f\x14\x0e\x79\x36\x84\xf2\x6c\x00\x79\xaa\x24\xcb\xac\x80\x0d\x96\x8c\x36\x28\x61\x99\x15\x40\x4e\xa1\x04\x99\x7f\x39\xc0\x72\x22\x23\x8c\x8a\xbe\x73\xd2\xbd\x37\xab\xd1\x62\x45\xb0\xf9\x8c\x64\xdb\x10\xcc\xf3\x26\xc4\xc9\x8a\xd0\xc9\xe5\xa3\x58\xa2\xde\xb1\xb1\xb0\xa1\x70\xc4\x3a\x67\xde\x59\x10\x3d\x3c\x6c\x01\x39\x69\xe2\xd0\x25\x21\x9b\xcf\x5c\xc9\x35\xa8\x68\x90\x07\xba\x0d\x79\x80\x15\x39\x8f\x04\xde\x86\x3b\x03\x53\xc2\xce\x82\x49\xe4\x87\x4e\x60\x6c\x78\xd1\xf5\x7d\x30\x31\xe5\x13\xbb\x64\xcb\xb5\xa9\xd5\x39\x52\x28\xaa\x1b\xef\x5c\x14\x28\xc9\x55\xf0\xb9\x63\x69\x30\x2f\x0f\x5e\xb8\xc3\x8a\x0a\x0f\x31\x5c\xa4\xf1\x42\x27\x25\x02\x6e\x35\x0b\x7f\x2f\x62\x2d\x1f\xb9\x18\x7a\xeb\x90\x8b\x64\x48\x09\x87\x8a\xb2\x2b\x44\xe7\x83\x63\x86\x76\x29\x08\x2f\xc0\x30\x8e\x94\xe2\xc2\x1d\xbe\x4d\x86\xc2\x47\xc9\x9e\xe5\xbd\x5a\x6d\x74\x0a\xde\x59\x18\x6c\x36\xbf\x60\x01\xa1\x80\xbe\xa2\xa1\xb4\x29\x20\x0c\xb5\x4d\x41\x9c\x73\x09\x9c\xb0\xd1\xf4\x31\x43\x4e\x18\x02\xa7\xb6\x18\xc1\xff\x19\xf9\x10\x32\xc2\xda\xeb\xf2\x4c\x2c\x0d\x8b\x5f\x4f\xf4\x89\xa3\x74\x9e\x5d\x26\x29\x9d\x0e\x78\x94\xe7\xf8\xc8\x5a\x08\x4c\x30\x45\x3e\x02\xa8\x05\xc5\x61\x1d\xd8\x47\x11\xf9\x92\xc1\xd6\x11\x58\x27\x5b\x13\x22\xcd\x24\x93\xab\xba\x7b\x2a\x5b\x8a\xbf\x43\xeb\xdd\x34\x25\x1a\x25\x3f\xc7\xdf\x7d\x24\xa0\x98\x90\xd3\x8d\x96\xf9\x8c\x54\x35\x66\x9f\x3b\xd5\x9d\xcd\xfd\x6d\x0e\x62\x10\xc5\x95\xe2\x5b\xea\x92\x7a\x88\x1e\xe9\xac\x45\x27\xb4\x70\xd6\x2b\x5f\xb8\x6b\x48\xe6\x3c\x02\x44\x71\x24\x65\x94\x6b\xe0\x3d\x16\x75\x83\x1f\x4a\x14\xbc\x37\xca\x44\x90\x10\x03\x04\x19\xe5\xdf\xff\xd3\xc1\x9b\x0a\x99\x98\x8b\x94\xe2\x46\x0e\x3e\x94\xae\xcd\x35\x1a\x3e\x76\xf3\x89\x11\x95\x1e\x27\x18\xa4\x00\x92\xb9\x11\x08\x91\xaa\x32\x41\x48\x6e\xa0\x9a\x30\xd6\x65\x8b\x3f\x73\xb3\xc1\x66\x36\xdb\x2a\x58\xf6\x15\x11\xf4\x67\x25\xd0\xb6\xec\x23\x40\x82\xa7\x28\x4c\x46\x24\x65\x2d\xb2\xec\x0b\x90\xdc\xb2\xad\x3c\xba\x88\xbc\x7d\xf9\x8b\x17\x73\x5f\x86\x42\xdc\xf9\x43\x98\x9f\xb3\x39\x7f\x41\x28\x30\x6d\x7c\x3d\x65\xa2\x22\x02\x43\x5e\x56\xf3\xa9\xc2\x53\x3a\x83\x8c\x47\x74\x75\xb6\x1e\xb9\x23\x04\x85\x60\xa8\xb8\xf0\x7e\x35\xe0\x87\x9d\x59\x55\x3a\x87\x70\x44\xee\x2d\x3f\x6d\x28\x5d\xde\x35\x29\x8a\xa7\xf7\x98\x39\xbc\xaa\x9d\xc9\x84\x3e\xa6\x85\x24\x35\x86\x64\xa6\x8c\x25\x37\x89\x42\x03\x67\x94\xe7\x59\x8a\x92\x99\x3f\x78\x8b\xd6\xdd\x6e\x74\xf9\xa3\x47\x56\x4b\x26\x13\x6d\x40\x61\x53\x1a\xda\x62\x2c\x39\x2c\x6b\xf9\x5c\x98\x55\xa6\xa1\x0c\x39\x93\x65\x2c\xb9\x4c\x14\x5e\x11\xfe\xaa\xd8\x55\x0b\xe5\xb7\x8c\x29\xc3\x2d\xe5\x2d\x70\x9a\x91\x4f\x14\xef\xf9\x2a\xf1\xf2\xf0\xcb\x77\x3f\x7c\xf2\xf1\xd7\x7f\xfe\xf8\x5f\xea\x83\x3f\xbd\x78\xf9\xd1\x77\x1f\xff\xf8\xfb\xc3\xaf\xdf\x3d\xe5\xc6\xed\x55\x2f\xf4\x0f\x83\x5f\xd2\xe1\xd7\x74\xf8\x30\x1d\x5e\xa5\xc3\x1f\xd2\xe1\xc7\x74\xf8\x21\xfd\x27\x1d\x0e\xe9\xf0\x32\x7d\x93\xbe\x4d\x1f\xa4\x3f\xa6\xdf\xa5\x43\x7a\xf5\xb4\x1b\xc5\x9b\xee\xf1\xe9\xdf\xdf\xff\xf5\x9f\xdf\xbf\x7c\x7a\xf8\x6f\x00\x00\x00\xff\xff\x71\x6d\xa6\xc5\xba\x18\x00\x00")

func runtimeSyntaxConkyMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxConkyMicro,
		"runtime/syntax/conky.micro",
	)
}

func runtimeSyntaxConkyMicro() (*asset, error) {
	bytes, err := runtimeSyntaxConkyMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/conky.micro", size: 6330, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxCsharpMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x54\x5d\x6f\xdb\x36\x14\x7d\x6e\x7e\x05\xc7\x74\x8b\x6d\xd5\x71\x07\xec\x65\x46\xd3\xac\xe8\x50\xa0\x40\xb1\x6e\xc0\x9e\x66\xa9\x01\x45\x5d\xd9\xac\x69\xd2\x25\x29\x3b\xea\xee\xf6\xdb\x77\x28\x3b\x89\xd7\x24\x88\xc5\x8f\xfb\x7d\xce\xbd\x8c\xbd\x4b\xea\x56\xc8\xb7\xe7\x52\xc8\xf2\x52\xc7\xe7\xf2\xec\xec\x5c\xbc\xb5\x2a\xc6\x33\xed\xad\x0f\xa2\x0e\x66\xb9\x4a\x1b\xb5\x24\xa8\x0a\x21\x75\x96\x89\x62\xf1\x66\xfa\x97\x9a\x7e\x7d\x39\xfd\xb9\x2a\xc4\x64\x34\x9a\x8f\x4f\xef\x2e\xab\x62\x7c\x3d\xb8\x7a\xe3\x9c\x4f\x2a\x19\xef\x8e\xfe\xee\x3d\x09\xf9\xcb\xd1\xa0\x2a\xa0\x7a\x1a\xad\xb6\x1d\x09\x79\x94\xde\x54\x0f\x7e\x6f\xaa\xc9\x62\x31\x8f\x5b\xa5\x69\x5e\x61\x3f\x1a\x57\xf2\x68\xb9\x0c\x44\x4e\xe4\x3f\x59\xbe\x1a\xd5\xde\x5b\xae\xfb\x44\x1c\x87\xaf\x5e\xa9\xc0\x0d\x69\xb3\x51\x96\x1b\xdf\xd5\x96\xb8\xb5\x5e\x25\x7e\xef\xd2\xef\x29\xb0\x71\x89\xbb\xfc\xb1\xde\x2d\xb9\x1b\xbe\xbe\xfe\x4c\x3a\x71\x5c\xf9\x00\xe1\x61\x89\x29\x18\x88\x6a\x15\x89\xd3\xca\x44\xde\xc1\xf1\xce\x9b\x66\x5c\xbe\xbe\x4b\x45\xf7\xca\x1d\xd2\x50\xd6\xa8\xc8\xf8\xd7\x59\x5f\xab\xa4\x57\x48\x85\xf4\x9a\x1a\x64\xd3\xaa\xce\x26\x64\xc3\x4d\xef\xd4\xc6\x68\x26\x0b\xad\xd6\x38\x65\x6d\x8f\xf5\x16\x5a\xad\x0f\xf9\x47\x0a\x96\x4b\x9f\x3c\x9b\x96\x11\xd5\x7a\xbd\x66\x47\x7b\x76\x9d\xb5\x1c\x28\x75\xc1\x71\xdc\x9b\x1c\x20\xad\x82\xdf\x73\x0a\x3d\x77\xee\x2e\xd8\x7e\x65\x2c\x3d\x9d\x62\x8d\x92\x14\xca\x54\x68\x06\xcd\x03\xbd\xac\xbd\x8b\xc8\x8c\x2c\x2d\x15\xd0\x23\xd7\x6d\x98\x76\xe0\x8d\xe9\x76\x6b\x8d\x36\x79\x93\x08\x31\x97\x94\xd8\x6c\x8e\x77\xc6\x65\x1c\x71\x0d\x90\x87\x4d\x0b\xa2\x18\xb5\xd1\x40\x19\xfb\x2d\x05\x95\x50\x91\xef\x12\xfb\x1d\x85\x60\x1a\xe2\xad\x0a\x6a\x13\xf3\x92\x0c\x0c\xb7\xc1\xec\x72\xd0\x6d\xf0\x09\xf0\x23\xf9\x2d\xe8\x02\x3a\x00\xa1\xf1\x0e\xc8\x04\x6a\x39\x92\xb2\x10\x45\x84\x8f\xe6\x2b\x79\xdc\x24\xa5\xd7\x40\xce\xeb\xbc\x4d\x26\x2f\xa1\x43\x61\xa9\xdf\x66\x79\xe7\xa2\x6a\x09\x3c\x66\xfe\x76\x0a\x2d\xc6\x3b\x13\x52\x87\x90\x3b\x6f\x61\x80\x96\xe8\x0d\xd9\x03\x93\xe7\xe2\xc3\xfb\xdf\xfe\x98\xe6\x78\x62\x4d\xfd\xde\x87\x26\x8a\x91\x77\x14\x45\x5a\xa9\x24\xb4\xca\x8d\x2d\x6a\x12\x5d\xa4\x46\xa0\xa0\x88\x5a\x84\x6f\x85\x1a\x2c\xc5\x97\x8e\x42\x2f\xa6\xc2\xfa\x14\x85\x4f\x2b\x0a\x31\x1b\x8d\x1f\x11\xd0\x06\xbf\x01\x3f\x14\xd0\xab\x00\x1c\x09\x2f\x83\xef\xb6\x00\xb0\xf5\x8c\xb0\x14\xea\x9e\x3f\x7b\x60\x6b\x69\x80\xd8\x3b\xa6\x2f\x48\x3b\xa2\xc1\xc1\x9a\x26\xd7\xe4\x92\x1a\xba\xdb\x9e\xf0\x7c\x98\xa7\x80\x0c\xef\x27\x03\x30\xae\x33\xc1\xc9\xb8\x8e\x1e\xa9\x0e\x79\x65\x3d\x60\x87\x5e\x44\x94\x53\x9d\xec\x48\x2e\xa6\xc5\x6c\x72\xf5\xea\xf5\xf5\xfc\xbb\x7f\xbf\xff\x81\xef\x27\x70\x98\xda\x43\x90\x45\x7e\x03\x6e\xaa\x82\x5f\xde\x62\x78\xdf\xa9\x69\x3b\x0c\x2f\xce\x35\x44\x3f\x62\x37\x5e\xbc\xfb\x50\x5d\x3f\x78\xee\x09\xcc\xed\x85\x94\xa3\xb2\xbc\xe4\xc5\x27\x59\x8d\x27\x92\x2f\x8e\xa7\x0b\x9c\x2e\xe4\xe3\x17\xa4\x2c\x47\x8b\x3a\xb9\x36\x54\x7c\xc1\xa5\xe4\xb2\x1c\x3f\xa9\xd5\x3d\x64\x51\xfd\xfd\xd3\x3f\xf2\x9b\xd7\x06\x8d\x23\xe4\xe8\x13\x9f\xbc\x2d\xe3\xd9\xec\x72\xf2\x94\x1e\x7a\x2b\xa4\x2b\x39\x2b\x27\x52\x00\xee\x2b\x59\x4e\x66\xff\xd7\xc3\xac\x25\x7a\x71\x00\xf2\xcf\x8f\xbf\x7e\x9c\x5f\xdf\xc9\x5f\x1c\x1e\x29\x79\x12\xa7\x78\x7e\x2f\x1c\xc0\x7d\x56\x88\x82\x45\xf1\x0c\x4f\xe2\x7f\x01\x00\x00\xff\xff\x38\xe3\x82\xc8\x9d\x05\x00\x00")

func runtimeSyntaxCsharpMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxCsharpMicro,
		"runtime/syntax/csharp.micro",
	)
}

func runtimeSyntaxCsharpMicro() (*asset, error) {
	bytes, err := runtimeSyntaxCsharpMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/csharp.micro", size: 1437, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxCssMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8f\x31\x6f\xc3\x20\x10\x85\x77\xff\x8a\xd3\x39\x43\x9b\xc1\xd9\x89\x3a\x75\xe9\x9e\xb1\xb4\x12\xb6\xcf\x31\x2a\x85\x8a\x23\x4e\x2c\x5f\xff\x7b\x71\x55\x2a\x59\xca\x0d\x08\x78\x1f\x8f\xf7\xea\x1a\x5e\x28\x12\x58\x06\xe3\x81\x6e\xe6\xf3\xcb\x11\x0c\x21\x42\xc7\x0c\x83\x75\xc4\x4d\x55\xd7\x55\xc5\xb3\x4f\xe6\x06\xf8\x7c\x3a\x21\xa0\x6e\x1e\xb2\x2e\x9c\x97\xc7\x1d\x56\x5d\x70\xf9\x45\x1b\xed\x79\x4c\x91\x7a\x58\x07\x9b\xed\xfd\x4c\xce\x85\x2b\x00\x27\x13\xd3\x13\xea\x05\x81\x7c\x9f\x37\xdf\x5b\xee\x3a\xda\x44\xf0\xcf\xa9\x3f\xec\xf5\xf8\xae\x97\xb7\x2d\xda\xba\x0b\xfd\x7e\xa5\x4c\x97\xec\x44\xa2\x86\xd0\x5d\x58\xd4\x18\x26\x8a\xa2\x9c\xf5\x1f\xa2\x26\xcb\xd9\xb1\x2f\x47\x33\xa4\x55\x6b\x29\x97\x24\xd9\xdd\x77\x2c\x21\x0f\x7a\x5f\x62\xee\xf5\xa1\xb0\xe7\x48\xe4\xa1\x0c\x1e\x45\x89\x5e\x64\x2d\xf2\x13\x00\x00\xff\xff\xd2\xcc\x92\x6e\x4f\x01\x00\x00")

func runtimeSyntaxCssMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxCssMicro,
		"runtime/syntax/css.micro",
	)
}

func runtimeSyntaxCssMicro() (*asset, error) {
	bytes, err := runtimeSyntaxCssMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/css.micro", size: 335, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxCythonMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x53\xef\x6b\xdb\x30\x10\xfd\x9e\xbf\x42\x53\xba\xe5\x47\xdb\x6c\xb0\x4f\xeb\xda\xc2\xe8\x5a\x18\x1b\xac\xd0\x6f\xb3\xd3\x21\xcb\xe7\x44\x4c\x96\x84\x24\x2f\x11\xbd\xfe\xef\x3b\x39\x3f\x48\x08\xcc\xe4\xec\x3b\xe9\xde\xcb\xd3\x3b\x7b\x38\x64\x77\x29\x2e\xad\x61\x46\x18\xeb\xe5\x05\xab\x44\x80\x9a\xd9\xa6\xa1\x60\x8f\x87\x7b\xb3\xc1\x70\x38\x08\xc9\x44\xb1\x66\x7c\x83\xe2\x8c\x97\x33\x97\xd6\x67\x9b\x64\x5d\x6f\x93\xa4\xce\xf8\xa0\xf2\x6a\xb1\x8c\x9e\xd8\xc6\x6a\xc2\x78\x0d\x0d\x2b\xd8\x87\xcb\x4f\x5f\x2e\x7f\xfd\x9e\x9f\x9f\xec\x4b\xd7\x77\xec\x1b\xca\xf1\x6c\x5a\x4e\xae\x4e\xfb\x72\x9b\x74\x4e\x6a\x11\xc2\x21\xe3\x1e\x40\xd7\x70\x27\xfd\x3b\xa4\x95\xf5\x35\xbb\xb3\xda\xfa\x81\xcc\x77\xb6\xf0\x00\x86\x74\x5e\x8f\x85\xa9\x51\x04\xfa\x05\xf0\x11\x7b\x46\x24\x7a\xfc\x7a\xff\x40\x4f\x8d\xa0\x55\x83\xf7\x3f\xbe\x3d\x50\x16\x80\xb2\xa7\x7b\x84\xb5\x04\x17\xe9\x01\x12\x1b\x65\x84\xd6\x09\x1b\xeb\xb1\xf1\xb6\xc5\x85\xb6\x95\xd0\x48\x28\xc2\xa8\xd6\x59\xa2\x55\x06\x55\x40\x2d\xda\xaa\x16\xd8\x0a\x87\xc6\x46\x24\x80\xcb\xff\xe6\xbc\x32\x11\xbd\x50\x44\x1f\x7d\xc2\xd5\x52\x69\xc0\x95\x8a\x4b\x4c\x0a\x74\x3d\x29\x6f\xf9\x56\xf6\xc6\x87\x56\x2c\x80\x46\xd0\xcb\x97\xd6\x44\x65\x3a\xc0\xca\x83\xf8\x83\x1e\x62\xe7\x4d\x8f\x18\xec\xe7\xfa\x7f\x03\xb2\x99\x28\xb7\x42\xfb\x09\xe0\xce\x5a\x94\x31\x39\xc8\x2b\xb0\x8e\xe0\xe9\x10\x46\xea\xae\x06\x34\xa2\x85\xe0\x84\x04\x12\x6f\x1d\x19\x97\x30\x44\xdf\xc9\x78\xa0\x35\x4f\x2b\xf3\x57\xf9\x74\x72\x29\x3c\xd6\xb6\xab\xe8\x64\xb9\x76\x94\x29\x89\x7f\xad\xaa\xb1\x33\x41\x2d\x0c\xd4\x5b\xd5\x3f\x89\x4f\x44\x22\x38\x94\x9b\x40\x6b\xbb\x62\xbc\x98\x5d\x7d\xbe\x38\x9f\xe2\xcd\x9b\xf2\xed\x9c\x5e\xb4\x6b\x8a\x5b\x8a\xf7\x14\x97\x14\xef\x32\xc3\xa3\xf0\xe4\xcf\x12\xa2\x92\x42\x1f\xd1\xec\x9d\x2b\xc6\x93\x97\xd7\x4c\x50\x16\xf9\x36\xcf\xb0\xa7\x48\x83\x58\x1c\xf5\xcb\x24\xc8\xa4\x62\x34\x2f\x9e\x47\xf3\x69\xf1\x5c\x96\x73\x2a\x78\xbf\xf4\xf2\xf1\x75\xb6\x5f\xa2\x82\x1f\x63\x38\x61\xf8\x0e\xc3\x7b\x0c\x3f\xc4\xf0\x13\x4c\x88\xc2\xc7\x1b\x4e\x57\x46\x72\x06\xa6\xee\x2b\xbe\xdb\x19\x8d\x46\x59\xc7\x76\x87\xaa\xcd\x90\x6d\xdb\xd2\xa1\x8e\x74\x6f\xde\x93\x4a\x77\xc0\xf8\x70\x36\xa5\x2f\xf1\x5f\x00\x00\x00\xff\xff\x44\xff\x25\xb3\xe6\x03\x00\x00")

func runtimeSyntaxCythonMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxCythonMicro,
		"runtime/syntax/cython.micro",
	)
}

func runtimeSyntaxCythonMicro() (*asset, error) {
	bytes, err := runtimeSyntaxCythonMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/cython.micro", size: 998, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxDMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x57\x7f\x53\xdb\x38\x1a\xfe\x9f\x4f\xa1\x73\x77\x4b\x1c\x48\x68\xef\x6e\x66\xef\xd8\xb6\x19\xba\xc0\x5e\xe7\x28\xf4\x5a\xd8\xbb\x1b\xdb\xa4\xb2\xad\x38\x1a\x6c\x29\xc8\x72\x48\x96\x97\xfd\xec\xf7\x48\x36\x01\x96\xd0\xee\xde\xec\x4c\xa2\xdf\x7a\xde\xe7\xfd\xa1\x57\xf2\xb3\x67\x6c\x9f\xd5\x4b\x65\xf9\x82\x4d\x65\x31\x2d\xf1\xb7\x52\x15\x6c\xa2\x0d\xfb\xf1\xf8\x8c\x29\xae\xf4\xc6\xb3\x67\xf8\xb1\xbd\xc6\x4e\xb5\xd9\x65\x7b\x2a\x37\x42\xb2\x9f\xa4\xd2\x17\x8d\xd1\x73\x37\xf7\x96\xd7\x22\x67\x5a\x01\xad\x14\x0b\x61\x58\x3d\x13\x99\x9c\xc8\x8c\x5b\x89\xd1\xde\xd4\xda\xd9\xee\xce\x4e\x5e\x72\x55\x0c\xb5\x29\x76\xb0\x2a\xdc\xd8\xe8\x24\x07\xfb\x01\x0b\xe2\x61\x2f\xef\x49\xca\xc3\x51\xf8\x4d\xb0\xe1\x40\x4f\x66\xc2\x70\xab\x4d\xcd\xb8\xca\xd9\xac\x51\x99\x6d\x3c\xde\x46\xa6\x4b\xf0\xab\x2d\xb7\xa2\x12\xca\xb2\xa0\x17\xf7\x69\x87\xbe\xa5\x78\x8b\x06\xf4\xe6\x0d\xbd\x7a\x85\xf2\x0d\x3d\xa7\xf8\xbc\x17\x9f\x87\x23\x8a\x89\x7e\x09\x47\xaf\x83\xc7\x5b\xe3\x21\x24\xc7\x43\xac\xf9\x13\x01\xe5\x39\xfd\x42\x71\x8f\xe2\x90\xe2\x88\xe2\x84\xe2\x18\xc0\x1e\xf6\x5b\x02\x28\xc5\x23\xda\xa5\xef\x3b\x82\x99\xe5\x25\x93\xca\x8a\x02\x2a\x97\xd2\x82\x6f\x09\xb6\x46\xb0\x5c\xcc\x8c\x80\xf6\x22\xef\x24\x0a\x63\x50\x06\xbd\x17\xd1\x8b\xc1\x77\xe3\xa4\x1f\xf6\x8e\xa2\xe6\x2c\x19\x91\x2b\x8f\x46\xe1\xa8\x85\xdc\x87\xd9\xaa\x35\xa0\x1d\x4a\xa6\x15\xa8\x7b\x8d\x81\xf3\xf7\x84\xa2\x97\x28\x5d\xf3\x69\xc8\xb7\x52\x71\xb3\xfc\x0d\x88\x2f\xa2\xf4\x2d\xb0\x5e\x7e\x9d\xdd\xa4\xd4\xdc\x3e\x8d\xe4\xa9\x75\xa4\x60\xdc\xfb\xdd\xb0\x17\x89\x83\x24\xda\x1a\x24\xa3\x87\xe3\xe1\x28\x9a\x1c\x1e\x25\x23\x39\x0a\xbe\x88\xf7\xe4\xfe\x2f\x6c\x3f\x1f\x26\x7f\x3c\x8d\x76\x19\xa1\x4e\xc2\xd6\x3a\xff\x10\x0b\x9e\xff\x66\xff\xbd\x88\x16\xff\x49\xbc\x70\x3e\x98\xec\x0d\x0e\x93\xbb\x26\xf0\xe9\x41\xef\xde\xaa\xf0\x09\xd7\xdc\x17\xfe\x15\xf7\xfc\xbf\x92\x71\x4a\x7e\xff\xa6\x51\x34\xfb\xb0\xce\xd0\x4f\x9b\xd9\xd3\xeb\xfc\xf5\xfb\x64\x7d\x55\x94\xb7\xd4\x0f\x53\x6e\x78\x66\xbf\xe4\x9c\xcd\x5e\x74\x1e\x6f\xba\xc3\xdf\x8b\x36\x83\x51\xcc\xd3\x89\x32\x76\x9e\xd0\x22\x8a\x76\x17\xb9\x2c\xa4\xdd\x4d\x92\xeb\x3f\xdf\x38\x2e\xdf\x25\xd7\x2f\xb7\xff\x72\x43\xcd\x83\xb9\xbf\xde\xd0\xd9\x83\x81\xbf\xdd\xd0\xf3\x61\xff\xfb\x30\xdc\x6c\x1d\xf6\x4f\xb1\xbc\xd2\x26\xaf\x5d\x9b\x0f\xc4\x9a\xc4\x94\xf6\x78\x5a\x5b\xc7\x95\x78\x29\x79\xed\xca\x42\x11\xaf\x2b\xfc\x6b\x61\x30\xdc\x58\x4d\xa9\xce\x97\x94\x1a\xc1\x2f\x28\x43\x1a\x76\x85\x45\x61\xb3\x29\x65\x25\x16\x92\xd7\xcb\x95\xc8\xec\x8d\xa0\x5c\xa4\x4d\x81\x72\xc2\x9b\xd2\xa2\x2e\x45\x01\x99\x94\x6b\x12\x25\xb6\x0b\xd5\x54\x24\x16\x33\x0d\x7c\xb1\x80\x81\x54\x18\xa7\x81\x63\x39\x19\x94\x6b\x59\x4e\xb8\xdb\x37\x41\x9a\x29\xdb\xb2\x5c\x12\xee\x0f\xf7\x17\x1c\x2c\xba\x7a\x6c\xc4\x5c\x18\xb7\xd2\x65\x72\xa4\x71\x2a\x34\xe8\xcb\x09\xc9\xaa\x6a\x2c\x4f\x4b\x81\x96\x97\x2b\x15\x7e\xba\x71\x0d\x10\x98\xf0\x0c\x33\x6a\xce\x8d\x84\x77\x48\xd6\x54\xf2\x9f\x97\xb7\xac\xaa\x81\x59\xcb\xaa\xe2\x99\xd1\x54\xc9\x05\xc0\x2a\x9d\x37\x40\x57\xe2\x8a\x94\xb6\x53\xa3\x51\x37\x65\x49\x4e\x84\x06\x29\x23\x73\x41\x33\x9e\x5d\xf0\x02\xb5\xe1\x45\xc5\x51\xc9\xb9\xb3\xcb\xcc\x68\x2b\x10\x2e\x39\xcd\x9a\xb4\x94\x19\x2a\x23\xc8\x88\x09\xfe\xb6\xb9\xb3\x4e\x3d\xb8\x5a\xcb\xa3\xce\xf4\x4c\x50\x8d\xa0\x03\x84\x9b\x02\x04\xbc\xda\xc0\xab\x75\x83\x1b\x8e\xea\x2b\xe9\x7c\x85\xbb\x30\x03\x33\x25\x7f\xc6\x3a\xec\x9f\x95\x4e\xba\x9d\x42\xdd\x96\x31\xf6\xa0\x6f\x96\x64\x97\x33\x21\x73\x5f\xe9\x09\x35\xca\x99\x12\xa5\xb5\x02\x6e\x76\x26\x76\x03\x57\x53\x09\x8d\x01\x3d\xbd\x25\x38\x1e\xaf\xe5\x37\x1e\x1f\xbe\x3b\x3a\x18\x8f\x69\x3c\x7e\x7f\xb2\x7f\xd6\x35\x8f\xde\x1d\xb7\x8d\xc3\xb3\xe3\x1f\x4e\xdf\x9d\x1c\xfb\xce\x87\x8f\x07\xa7\xa7\xff\x7d\x38\x56\x74\xaa\x8d\xc7\x08\x55\x69\x6b\x34\xe6\xb0\x17\xfc\x3f\x1e\xcf\x70\xd2\x2a\x01\x17\xd6\x9e\x44\x7b\x85\xdc\x5e\x8c\xec\xe2\xf6\x04\x3c\xb8\x21\x41\xc9\xc5\xa4\x8b\xc8\xd5\x52\xaf\x2b\x22\x96\xe6\x1a\x56\x81\x62\x2b\xb8\x0f\x46\x56\xd2\xca\xb9\x60\x6e\xc9\x2d\x94\x6b\x7b\xa4\x54\xeb\x92\xd2\x25\xc0\xb2\x5c\x37\x2e\xc2\x32\xe8\x4d\x99\xcf\x90\x94\x81\x39\x65\x08\xce\x92\x72\xdf\xee\xd6\xb4\xb3\xb2\xeb\xc9\xae\xeb\x42\xcf\xaf\x2d\xb5\x2a\xc8\xb7\xea\xa9\x8b\xd6\xc6\x0b\x68\x3c\x72\xe3\x96\x35\x7e\x45\xd3\xce\xce\x35\x7c\x75\xe5\xe0\x57\xa4\x7f\x2c\x75\xea\x4e\x09\x5e\x09\x38\x2f\xb0\x44\xbd\xac\x52\x5d\x3e\x62\x8f\x30\xc1\x5b\x8c\xae\xba\x3a\xef\xea\x1a\x21\x32\xb6\x34\xb3\x26\x97\x93\xc9\xd8\xae\x70\x3f\xb9\x47\x17\xf2\xbf\xd5\x17\x42\x3d\xce\x6a\xde\xd9\xfb\x7b\xa7\xad\x63\x0f\x4e\x0e\x7d\x7d\xfa\xee\xfd\xc1\xaa\xf1\xe9\x74\xef\xfd\x07\xdf\xfb\xe9\xe0\x78\xff\xe4\x63\xd7\xfc\xf8\xc9\x7b\xfb\x4e\x90\x27\x72\x97\x3f\x31\x74\x7a\xb2\x7f\xb2\xcb\x2a\xa4\x14\x59\x42\x27\x96\xe2\x34\x21\xd4\x2f\xfc\xdb\xad\xb5\xe4\x65\x83\x93\xc4\x5a\x25\x86\xac\x77\xa6\x4a\x79\x21\x60\x85\x99\xae\x6b\x89\x79\x86\x4b\x0b\x66\x61\x2e\x68\xfd\xc3\x73\x18\x02\x19\x21\xe3\x77\xff\xcb\xed\xce\x5b\xc9\x8f\x54\xc3\x03\x30\x1e\x52\x74\x1e\x24\x61\x3f\x08\x36\x98\xdf\xf7\xef\x65\x2d\xaf\x96\xc5\xfa\x2d\x28\x8d\x7d\x1d\x98\x20\x60\x42\xe5\xaf\x83\xe0\xf1\x45\xf4\x39\x3a\xff\x9c\xf4\x3f\x7b\x95\xfd\x05\xfb\x00\x69\xfb\x6e\xe1\x02\xaf\xb1\x68\xb7\x46\x02\x11\xc8\xf4\xfd\xfb\x69\xff\xa9\xf1\xb0\x7f\x7f\x26\xe8\x64\xec\x8b\xd2\x85\xf3\x93\x6a\x5e\x06\x71\x6f\xd8\x8f\xc3\x35\x64\x31\x75\x8d\xa9\x9b\xf5\x53\x11\xa6\x92\xb5\x53\xaf\x86\xfd\x37\x8f\x27\x3a\xeb\x5c\xe2\xed\xd4\xbb\x8e\x5e\x05\x89\x33\x6d\xff\x9b\xce\x56\xe7\xae\xb7\xb5\x16\xae\x77\xbb\x21\x1c\xae\xb4\x3a\x75\xe1\xd8\x69\xe4\xfb\x48\x64\x6d\x8c\x76\xc1\x50\x33\x83\xe0\xc0\xe1\x62\x0a\x29\x0c\x03\xdb\xac\xd6\xdb\x8c\x17\x5c\xaa\x6d\x66\xa7\x62\xc9\x32\xae\x36\x2d\x4b\x05\xc3\x0d\x51\xfa\xe4\x85\x63\xc3\xb3\xac\xc1\x17\x82\x8b\xa1\xa9\x30\x62\xe8\xd1\xf7\xac\xdb\xc1\x6a\x24\x1e\x66\x65\x25\x3c\x80\x7f\x8f\xa9\x5c\xb8\xcf\x08\x83\x78\x13\x4c\x4f\x7e\x45\xa1\xe2\x17\xa2\x66\xd2\xb2\xcb\xc6\x91\xd0\xca\x5d\x48\x58\x73\xf7\x5d\xe4\x80\x2a\xc6\xeb\xd5\x96\x36\x5e\x9d\x58\xd6\xc5\x44\x85\x0b\x04\x9f\x34\x2b\xfb\xc5\xd7\x9d\xc9\xe0\x98\xf6\xf1\xa1\x2b\x47\xde\x1f\x99\xe3\xb7\xbb\xcc\x25\x75\xaf\x35\xa8\xa5\xc6\x49\x49\x4b\x9c\x9c\xf6\x23\xc2\xdd\x86\xdd\xd1\x00\x8f\x95\xe6\xed\x01\xc1\xfd\x20\x15\x0c\x57\x88\xc5\xca\x0f\x55\x9b\xd5\x77\x76\x60\xfc\x5f\x0d\x76\x8c\x76\xe2\xfe\x2d\xa3\xfe\xce\x93\x6b\xb6\x6e\xd7\x6c\x61\xcd\xff\x02\x00\x00\xff\xff\x7e\x1f\x67\x88\x24\x0e\x00\x00")

func runtimeSyntaxDMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxDMicro,
		"runtime/syntax/d.micro",
	)
}

func runtimeSyntaxDMicro() (*asset, error) {
	bytes, err := runtimeSyntaxDMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/d.micro", size: 3620, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxDotMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x52\x4d\x6f\xdb\x30\x0c\xbd\xe7\x57\x18\xc2\x80\x7c\x00\x49\xee\xc5\xd2\xd3\x8e\x03\x36\x0c\xdb\x29\x4e\x0b\xda\x62\x65\x21\xb2\x64\x48\xea\x3c\x0f\xfc\xf1\xa3\xa8\x34\xdd\xa1\x87\x88\xef\x85\xe4\xa3\xf8\xe4\xb4\xf8\x0c\x7f\x1a\xf5\xe5\xdb\x4f\xd5\xa8\xf6\xb0\xd1\x21\x93\xf9\xbd\xfd\xa4\x56\xab\x3e\xb8\x10\x9b\x7e\x01\xdf\x34\x9c\xfb\xbc\xd1\xd6\x44\x98\x06\x42\x6d\x90\x2a\xf4\x41\x23\xa5\xd7\x4e\xd8\xb6\x7d\x54\xb7\xae\x11\x0c\xb2\xb2\xb4\x41\x8c\x61\x1e\x10\x34\x09\x4a\xf6\x2f\x56\x94\xc1\x3a\xea\x8c\x74\x50\xcf\xf5\xc8\xa1\x92\xe0\x53\x8e\x60\x7d\x26\x8d\x7d\x88\x90\xf1\x3b\x69\x1b\xf9\x97\x72\x88\xd9\x06\x4f\x2f\xd6\xb9\x5a\xfd\x12\x7c\x7e\x47\x1e\x46\x14\x20\x83\xca\xdc\xde\xd9\x49\x80\x83\x0e\x1d\x23\x6b\x86\x4c\x42\xc0\x1b\x87\x15\x16\x69\xf0\xfd\x8d\xbd\x6b\xde\xa9\x08\xdf\x99\xa8\x57\x41\x07\x0b\xc6\x54\x03\x8d\x10\x8d\xf5\x34\xf2\xd0\xd1\x66\x1a\xad\x77\xe8\x49\x7a\x8b\x59\x09\x27\xf2\xa9\xe6\x42\xd4\x18\xad\x37\x0c\x6c\x71\x4b\xd6\x9a\xd8\xb9\xb2\x69\x89\x34\x71\x7e\x1a\xf8\xc0\x44\x13\xef\xfd\x2c\x03\x9f\xef\x57\x8d\xe0\xaf\xa5\xb8\xc4\xa2\x5c\x22\x1f\x2c\x44\x11\xcd\xab\x03\x4e\x05\x16\xe6\x37\xe2\x0b\xc8\x1b\x14\x20\xc6\xa7\x01\x26\x64\x13\xb1\x22\x4a\x96\x6f\x47\xb2\x56\xba\xe2\x4c\x29\x2f\x9c\x2b\xa5\xe2\x5f\x01\x75\xdd\x5f\x3f\xbe\xd2\x5c\x3d\x9c\xad\xce\xff\x3f\x7b\x44\xcd\x9f\xca\x89\xf6\x8f\xb4\xdf\xbf\xfd\xb9\xa0\x73\x61\x6e\x94\xda\xb4\xed\x81\xce\x4f\xea\xb2\xdd\x29\x5a\xdf\xd8\x9a\xd9\xfa\xad\xb4\x8b\x45\xb6\x73\xd0\x5f\x1b\xb5\x79\xa2\xf3\xf9\x21\x4d\xd0\xe3\xc3\xe5\xb2\x3d\x1e\x0f\xbb\x8f\xea\xd8\x8a\x98\x4f\xea\xd8\xee\x54\x83\x5e\x9f\x54\xbb\x3b\xaa\xd5\xbf\x00\x00\x00\xff\xff\x5e\x6c\xc9\x9f\xd9\x02\x00\x00")

func runtimeSyntaxDotMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxDotMicro,
		"runtime/syntax/dot.micro",
	)
}

func runtimeSyntaxDotMicro() (*asset, error) {
	bytes, err := runtimeSyntaxDotMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/dot.micro", size: 729, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxErbMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x53\xed\x52\xe3\x36\x14\xfd\x9f\xa7\x10\x22\x34\x76\xa8\x13\xa6\xff\x96\xcd\x12\x58\x36\xbb\xcb\x0c\x1f\x53\xca\xb4\x4c\x65\x3b\x28\xf6\x8d\xa3\x59\x59\xa2\x92\xdc\x90\x22\xde\xbd\x57\x59\xf2\xb5\xa5\x93\xb1\x22\x9f\x73\xee\xd1\xb9\xd7\xf6\xfe\x3e\x39\x23\x5f\xef\xae\x2e\x0f\x6f\x9b\xc9\x82\x58\x70\x64\xaa\x0d\xf9\x6d\xa1\x1c\x7f\x22\x5f\x45\x35\x93\x78\x39\xa1\x2a\xd2\x03\x33\x21\x53\x21\xc1\x92\x68\x54\x4f\xa0\x2c\xa1\x24\xa1\xea\x96\x0b\x69\xc9\xef\x02\xe6\x96\x80\x2b\x62\x32\xba\xfd\xd8\x42\xe3\x08\xb7\xbf\x1c\x1d\xbd\xfb\x99\x7c\x01\x6d\x2a\xa1\x51\xd4\x23\x57\xa2\x98\x71\xc9\xbf\x89\x52\x58\x92\x90\xaa\x57\x6f\x01\xa7\x85\xae\x1f\x1b\x07\xa6\x87\x05\xc1\xe3\x52\x14\xa0\x2c\x1e\xd4\xa8\x12\x0c\x71\x33\x20\xe7\xe7\x24\x3a\x37\xc0\x9d\xf8\x1b\x6f\x74\x5d\x6b\x65\xe3\x95\xb0\x87\x45\xa1\x6e\xe6\xdc\xa3\x3d\xee\xf7\x2b\xe1\x66\xcd\xa4\x87\xb6\xfd\x0a\x34\x1e\xd5\xc7\x70\xc9\x99\x2a\x93\x2b\x6d\x20\x39\xd7\x25\x24\xdb\x5d\x26\xd8\x7d\xa2\xb8\xd2\xad\x96\xfd\x3e\x03\x8a\x05\x94\xd0\x34\xb4\xdf\x5e\x6e\xcc\xcc\xd5\xb2\x4d\x5b\x85\x96\x38\xaa\x89\x6c\x80\x58\xc7\x8d\xfb\x40\x07\x94\x80\x2a\x3f\xd0\x93\x15\x39\x9f\x09\xb7\x61\x0f\x5e\xe9\x83\x35\x6f\xb0\x33\xfa\x13\xcb\xdf\x33\x76\x6c\x1f\x79\x01\xc7\x59\x96\x75\xdf\xaf\xe8\x05\x48\xa9\xe7\x78\xe6\x20\xfa\x38\xfa\x72\x71\xed\x47\xd7\x9f\x3c\x97\x82\x5b\xcf\x55\xe9\x27\x50\x09\xe5\x27\x38\x8b\x6f\xbe\xe0\x16\x7c\x21\xb9\xb5\xbe\x84\x69\xb8\x84\x82\x32\x1d\xfa\x52\x7b\x90\xc8\xe1\x22\xa6\x1e\xcf\xc7\xcb\x36\x06\xfc\x94\x07\x18\xfb\xf5\x88\xa3\x4f\xad\xcb\x46\x82\x57\xf0\xe4\xbc\x12\xd2\x2b\xed\x3c\x92\x18\x51\xe3\x62\x8b\x06\xf0\xcf\x99\x45\x58\x1b\xa3\xbc\x05\x39\xf5\xb6\x79\x04\xe3\xf1\xb1\x28\xef\x0c\x2a\xc2\x63\x9a\xe2\x8a\x6f\x89\xc5\x3f\x87\x3e\xf3\x40\xe2\x20\xd0\x7b\x21\x40\x96\x71\xba\x6e\x7f\x62\xc2\xd8\x97\x13\xa4\x51\xda\xf6\xa7\xfe\xf4\x34\x1e\xa6\x03\x76\x96\xfc\x99\x1d\xb2\xa3\xe4\x1d\x6e\xc6\x3c\xf9\x27\xeb\xd2\x56\xcd\x2b\xc0\x27\x42\x22\x11\xa3\x9a\x11\x92\xf9\x3c\x3e\x5e\x89\xb2\xc3\x1f\x6d\xb7\x86\x37\x1e\x7f\xbe\xb8\x1c\x8d\xc7\x7e\x3c\xbe\xbc\xb8\xc6\xcd\x7f\x32\xac\xcc\xe9\x5e\x3f\x62\x79\x3f\xf3\x51\x9a\xf6\xe3\xb8\xdb\x67\x42\xd7\x4f\x78\x3c\xa1\x07\x26\x7d\x46\xee\x65\xc9\xbd\x20\x97\xbe\xac\xc8\x37\xda\x79\x60\xf9\x43\xd6\x7d\x08\x75\x4f\xe9\x73\x28\x43\xfd\x4a\x58\x19\x00\x45\x28\x76\x91\xd3\xa5\x1d\x45\x3b\x1a\xb4\xec\xd7\x3f\xb2\xe1\x46\xbf\x46\x50\x19\x23\x12\xaf\x91\x01\xcb\x4f\xb2\xee\xc9\x46\xc1\x58\x8e\xaf\x4e\x9a\x6d\x90\x36\xcb\xdb\x88\xb4\x37\x48\xce\xf2\x1c\x91\x7c\x8d\xec\xb1\x7c\x2f\xeb\xee\xed\x36\xf0\x9a\x6e\xff\xff\x62\x77\x30\x4c\x67\x19\xbb\x83\xb1\x3b\x4b\xb3\xbf\xe6\xd9\x6e\xea\x00\xec\x84\x46\x60\x3b\x73\xe0\x77\x22\x07\x60\x27\x71\x00\x76\x02\x23\xf0\x43\xde\x62\xc1\x43\x50\x96\x3f\x67\xbd\x6e\xa8\xda\x6f\xef\xb6\xf2\x2a\xd8\x56\x6c\x24\xdf\xdb\x59\x7d\x9c\x83\x64\xd8\x19\x8e\x6e\xee\x3a\xc3\xd7\xaf\x34\xc7\x9b\xb7\xdc\xa2\xfb\xfb\x7b\x7f\x77\xf3\xe9\xc6\x7f\xbe\xb8\xbf\x1a\xf9\x74\x18\x7e\x31\x6d\xb5\xfe\x0d\x00\x00\xff\xff\x2c\x16\x39\xf2\x4d\x05\x00\x00")

func runtimeSyntaxErbMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxErbMicro,
		"runtime/syntax/erb.micro",
	)
}

func runtimeSyntaxErbMicro() (*asset, error) {
	bytes, err := runtimeSyntaxErbMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/erb.micro", size: 1357, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxFishMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x53\xcd\x72\xdb\x3c\x0c\xbc\xfb\x29\x18\xd9\xf3\xc5\x4e\x3e\x7b\x7a\x6d\x9a\x26\xed\xa5\xd3\x67\xa8\xe9\xb8\x94\x04\x5b\xa8\x25\x92\x43\x52\xfe\x69\x36\xef\x5e\x48\xb2\x3b\x49\xa6\x17\x10\x00\x29\x60\xb1\x0b\x8d\xc7\xea\x3b\x05\x52\x1c\x95\xb1\x8a\x8e\xa6\xf1\x35\xa9\x8d\x0b\xea\x1b\xc7\x4a\xc5\x8a\xea\x5a\xc5\x22\xb0\x4f\x71\x31\x1a\x8f\x47\xf1\x64\x93\x39\xaa\xac\xbb\xce\x54\xa6\x17\x1b\x71\x26\xd9\x28\x0f\xbc\xad\xd2\x36\x10\x59\x35\xe5\x99\xca\x9e\x96\x1f\xe6\x1f\xbf\xce\x7f\xac\x57\xb7\x7a\xaa\x67\xd9\xa8\x70\xb5\x94\x1d\x5e\x64\xfa\x7e\x6a\x6a\x36\x11\x39\x6d\xd9\x22\x0f\x64\x76\x28\x4c\x24\x14\xce\x26\xb6\xed\xe0\x18\xb6\x11\x54\x4b\x9a\x6c\x09\x81\x85\x4d\x6b\x8b\xc4\xce\x82\x37\x68\x4c\xaa\x10\x28\xb5\xc1\x22\x52\x42\x3c\x70\x2a\x2a\x24\x8a\x09\x87\x8a\x6b\x9a\xe9\x87\x77\x7d\xa7\xfa\x19\xfa\x05\x7a\x0a\x3d\x83\xfe\x04\xbd\x82\x5e\xe2\x27\xb4\x86\x9e\xe0\x1e\x0f\xb8\xc2\x67\xfc\x07\x8d\x7f\x21\x16\x0c\x1c\x4d\x4a\x27\x58\x97\x20\x68\xd8\xbe\x6a\x71\x12\xae\xdc\x41\x65\xf3\xf9\xd2\xcc\x7f\xcf\x57\xb7\x97\x8b\x81\x9b\xc6\x6c\x49\x26\x92\x4a\xaa\x7f\xf0\xfe\x3e\xaf\x5b\xea\xdb\xe4\x5b\xe4\x2c\xad\xf2\xda\x15\xbb\x81\x1a\xef\xd8\x26\xe4\x2d\xd7\xc2\x0d\x8a\x52\xc8\x69\x9a\x0e\xce\xf9\xac\xd9\x76\x84\x75\xe2\x25\x42\xc9\xa1\xea\x8c\x50\x57\x54\x0e\xd4\x70\x02\xed\x4d\x0d\x3a\x52\x21\x46\xc2\xcd\x16\x9d\x70\xbd\x59\x0b\xd3\x1b\x1e\x12\x6b\x2e\x05\xe4\xe0\x7a\x01\x1c\xce\x6e\x90\xda\xe7\x74\x0f\xf6\x4d\xa6\xf5\xa5\x49\xb4\x3e\xf7\x17\x71\x62\x9f\x2f\x7b\xb1\x68\x38\xa2\xd9\xd3\x5f\xf1\x22\x64\xaf\x3c\x2a\x8e\xc9\x85\x13\x7e\xb9\x3c\xa2\xe1\x86\xca\x1c\x96\x8e\xa9\x84\xf3\x64\xe1\x9d\x2f\xe1\x03\xed\xc5\xc6\x36\x87\x6f\xbb\x9a\xfe\x50\x22\xc8\xc8\xae\x11\xe9\x4d\xd9\x09\xbf\xee\x69\x44\x4c\x26\xb5\x11\x29\x18\x8f\x74\xf2\x84\xb6\xe6\x6e\xf4\xb6\x31\x71\x87\xbd\x09\x54\xf6\x6a\x0d\x74\x4b\x34\x2c\xaa\x9e\xe8\xe7\xc7\xcb\xb2\x5e\x7d\x19\x4f\x6e\x1e\x45\x3b\xfd\xf2\x78\x91\xa7\x38\x99\x6e\x73\x9e\xb0\x5c\xde\x45\x6f\x0a\xba\x5b\xad\x66\xe3\xc5\xcd\xe4\xad\x7e\x17\xf9\x65\xc7\xf4\x02\xcb\xa7\x6c\x35\xbb\xc9\xe4\x17\xb9\x3e\xc7\xd7\x12\x5f\x5f\x3e\xf9\xff\xbc\x55\xaf\x4a\xde\x4a\xbd\x3f\x01\x00\x00\xff\xff\xf7\xb1\xf6\x8c\x8f\x03\x00\x00")

func runtimeSyntaxFishMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxFishMicro,
		"runtime/syntax/fish.micro",
	)
}

func runtimeSyntaxFishMicro() (*asset, error) {
	bytes, err := runtimeSyntaxFishMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/fish.micro", size: 911, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxFortranMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x56\x5b\x8f\xdb\x36\x13\x7d\xf7\xaf\x50\xe4\x7c\x5f\xec\x4d\xa3\xe4\x25\x0f\x9b\x26\x5d\x04\x01\x82\xbe\xa5\x68\xdf\x2a\x7b\x0d\x9a\x1a\x49\x6c\x28\x52\xcb\x8b\x2f\x2d\xfb\xdf\x7b\x86\x72\x16\xce\x42\x31\xa0\x19\x8a\x22\xcf\xdc\x0e\x87\x5e\x2e\x8b\x5f\xc9\x51\xa1\x7c\x21\x4c\x41\x27\x31\x8c\x9a\x8a\xd6\xba\xe2\xb3\x75\xc1\x61\xee\xf6\xcd\xeb\xdb\xb7\x8b\x85\x3f\x9b\x20\x4e\x45\x79\x99\x2e\x8b\x72\x53\xad\xea\xcf\xed\x36\xb1\xb8\x7d\x33\xa9\xb7\x59\xd5\x5f\xec\xb6\xfe\xdd\x6d\xd7\xcf\xcb\xc5\x62\x29\xad\x06\x9c\xa3\x06\x5b\xde\xd7\x1f\x5f\xfd\xb9\xdb\x8a\xfa\xcd\xab\xdb\x3c\x7a\xb9\xf9\xa5\x2c\x16\xdf\x2f\xc1\xb7\xcb\xfc\xa2\x73\x44\xa6\x58\xa9\x35\x7f\x58\x09\x19\x94\x35\x49\x34\x07\x61\x24\x25\xa1\x35\x3f\x56\x8a\x20\xf6\x9a\xbe\x8d\xa9\x49\xc2\x9c\x93\x18\xad\x0f\xce\x8e\x3d\xad\x81\xf5\x14\x69\x1c\xc9\x60\x9d\x57\x1e\xc2\xab\xce\x5c\xd4\x40\x26\xf0\xd0\x4a\x95\x91\x64\x2f\x1c\xcc\x92\x4b\xd2\x0e\x83\x35\x33\x58\xf8\x80\x9c\x9d\x52\x03\x37\x52\x43\xad\x88\x3a\x40\x6b\x35\xa4\x46\x01\xcf\xb3\xcf\x8d\x8d\x70\xb1\x18\x1d\x49\xc5\x13\x33\x38\xa4\x89\xad\x0b\x9d\x68\xf4\x4a\x63\x13\x9d\x60\xd8\x60\xa2\x55\x08\xaf\x1d\x42\x42\x61\x86\x2c\x44\x48\x7d\xec\xe6\x42\x53\xf0\x46\x49\x15\x92\x32\x52\xc7\x86\xa0\x1b\x78\xa7\xcc\x43\x54\x8e\xdf\x02\x75\x08\x87\xb5\x09\x59\xb9\x56\xc8\x59\x24\x13\x9c\x82\xfb\x32\x29\xa4\x12\x16\xbf\x02\x2a\x69\xdb\x29\x09\x9f\x06\xdb\x44\x78\x65\xac\x81\x88\x28\x85\x35\xfa\x3c\x83\x62\x47\x72\x22\x58\x97\xec\xc8\xd5\xc3\xce\x51\xc8\xaf\x10\x4e\x0c\xc4\x89\x1d\x6d\x76\x02\xda\xab\x5c\xdf\xd1\xa9\x03\x92\x3f\x83\x35\x3a\xdb\x61\x5b\x1a\x91\x4c\xb8\xe5\x08\x68\xc8\x68\x16\xd1\x79\x75\xa0\xe4\x91\x46\xd4\xab\xd9\x01\x74\xc7\x0e\xcf\xc0\x3c\xae\x61\x80\xbc\x28\xf9\xb8\x77\x36\x06\x85\x60\x38\xd4\xe8\xf3\xb6\x85\x3c\x8b\x2b\xd2\xec\x41\x16\x26\x04\x18\xf8\x57\xf4\x41\x5f\xb4\x7b\x64\x5e\xda\xab\xb0\xf3\xea\x6f\x4a\x92\xc9\xc9\x6b\xd7\x13\xc1\xaf\x71\xa4\xb6\x1e\x2b\x2c\x6a\x8d\xf4\x62\x10\x51\x08\x39\xc6\x5d\x00\x5d\x92\xf4\xbd\x6a\x03\xb3\x89\x76\xc2\x34\x79\x72\x06\xa4\xa1\x47\xa3\x8d\xea\x54\xf0\xa0\x58\xd8\x21\x41\x4d\x94\x21\x11\xf2\x4d\x76\x42\x6a\xa3\x99\xce\x8d\x12\x3f\x70\x48\xc1\x4e\x52\x7b\xa9\x41\x8b\x3d\x43\xa9\xbd\x27\x70\x23\xc7\xaa\x18\x4b\x59\x4d\xa6\x0b\x3d\x06\x78\xf1\x3d\x60\xb3\x94\x33\x68\x7a\x8f\x80\xc0\x13\x32\xfc\xec\xc0\xa1\x21\x81\xaf\x43\x04\x67\xc4\x89\x4e\x23\x18\x83\x80\x31\x86\xff\xac\x0e\xcc\x26\x72\xdd\x5c\x98\x03\x2a\xf2\xb8\x43\x99\xbc\x43\x99\xbc\xe3\x90\x5d\x35\x60\x91\x56\x3e\x24\x43\xc2\x11\x6b\x70\x51\xb5\xe7\x19\x2c\x30\x11\xe4\x12\x0d\x08\x46\x9e\x01\x41\xb4\x2c\xa7\x9c\x8d\x11\xc7\xe3\x21\x5a\x64\xd4\x89\x46\x9d\x66\x10\xd0\xf8\x1a\x3b\xec\x4c\x1c\xf6\x20\xec\xe5\xcd\x13\xfa\x04\xc6\x1d\x31\x21\x9b\x2c\x8e\x4e\x31\x0c\x8d\xfa\x72\xb4\x9e\x02\x91\xef\xc5\xc8\x2b\x8e\x99\x7d\x82\x99\x2b\x85\x01\x7d\x1f\x22\x71\x73\x9b\xbe\xe7\xce\x94\x09\xe5\x71\x6a\x94\xe9\x66\xb0\xfc\x98\xcd\xfa\x38\x24\x7f\xf6\x81\x86\x1d\x08\x86\x13\x16\x04\x52\x1a\x12\x77\x6b\xdf\xc2\xdd\x3c\x18\x99\x7a\x5c\x92\x19\xa0\x38\x15\x2e\x9a\x7c\x40\x0f\xe4\x90\xc6\x34\x45\x82\x83\x71\x4e\xe1\x0c\x8f\x22\xf6\x9f\xe9\x72\x3c\xce\x04\x0e\x1e\x1f\x01\x2a\x24\xa4\x02\xf5\xb1\xa4\xb1\x89\x34\x34\x8b\x3b\xd5\x4e\xfa\xd8\xe3\xaa\x49\xdc\x78\xf1\xdc\xf1\x12\x28\xd5\x66\xac\x27\x50\xfc\x65\x3a\xa6\xa9\xa2\x87\x43\xc5\x4d\x8f\x8f\x14\xa0\x34\x12\xad\xbb\x90\x34\xba\x8f\x46\xab\xad\x4c\x5e\x50\x19\x1b\xaa\x39\xa8\xca\xba\x8a\x4b\x41\xe8\x60\x13\x64\x91\x5d\x0c\x3d\xe8\x30\xb9\x74\xec\xd1\x60\xa7\x90\x06\xd1\x71\x13\xbe\xea\xee\x06\xc1\x47\x9c\xcb\xb3\x84\x41\x3a\xa1\xb3\x76\xf6\x2e\x58\x40\x7a\xee\xf4\x8e\x42\x74\x53\x3f\x5f\x2c\xbf\x5c\x9a\x5d\xf1\x89\x6f\xb4\xcb\xbd\x76\xf1\xa7\xac\xab\x77\x3f\xff\xf4\xf2\x26\x7d\x78\xb6\xf9\xdf\x16\x17\xe8\x7b\x3c\x28\x42\xf9\x1a\xcf\x2b\x3c\xff\x67\x84\xdf\xc0\x62\x03\xd7\x02\x37\xd9\xef\x60\xbe\x79\x56\xd6\xab\xf5\x3f\xff\x32\xc0\xa6\x66\xb1\xe5\x6d\xc5\xc7\xa6\xe1\xdb\x05\x64\x96\x84\xeb\xcb\x15\x7c\x5f\xa1\x1e\xbe\xba\x6c\xdf\x3b\xd5\xf5\x21\x17\xbc\xbc\xaf\xeb\x77\x4c\x28\x7a\xb7\xdd\xde\x2c\xaf\x5f\xd0\x57\x5a\x6e\x82\xdf\x2e\x8f\x55\x44\xdf\x68\xcd\xdd\x1a\xf3\x5c\xae\x5c\xca\x15\xa4\xa7\x35\x17\xe3\x28\x9c\x01\x2d\x13\x39\x67\xdd\x9a\x3d\x59\x16\x7f\xf0\xb5\xd1\x15\x3d\xec\x69\xb6\x89\x97\xaa\xb8\xe6\xda\xfb\xfa\xfe\x43\xc1\xbf\xed\x0d\xc7\x5f\xae\x36\x9b\x2a\xd5\xf7\xe5\x76\x7d\x53\x96\x3f\x5e\xf7\xe2\x6a\xdd\x8b\xc9\xd4\x27\x04\x89\xa4\x7c\x67\x6b\x31\x45\xca\xff\x26\x32\xca\xb3\xea\xe6\x39\x76\xaf\xee\xeb\x4f\x72\x9b\x0a\x96\xeb\x82\xe7\x16\x8b\xff\x02\x00\x00\xff\xff\xf9\x58\x00\x99\xfe\x08\x00\x00")

func runtimeSyntaxFortranMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxFortranMicro,
		"runtime/syntax/fortran.micro",
	)
}

func runtimeSyntaxFortranMicro() (*asset, error) {
	bytes, err := runtimeSyntaxFortranMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/fortran.micro", size: 2302, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxGentooEbuildMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x55\xed\x72\xd3\x46\x14\xfd\xcf\x53\x2c\x4e\xa6\xac\x02\x71\xfb\xb7\x94\xe2\x71\x6d\x43\x3c\xb8\x89\xc7\x36\x94\x36\x0a\xee\x5a\x5a\x5b\x5b\xaf\x76\xd5\xdd\x55\x9c\xc0\xe1\xdd\x7b\x57\x96\x19\x42\xc8\x74\x26\x91\xf7\xe3\xea\xde\x73\xce\xfd\xd0\xd1\x11\x3b\x93\x4e\x32\xe5\x99\x30\x4c\xde\x88\xb2\xd2\x92\xad\xad\x63\x72\x55\x2b\x9d\xfb\x1f\x65\xa6\x85\xf7\xd2\x3f\x3a\x3a\x7a\xe4\x6f\x4d\x10\x37\xac\x33\x6a\xee\x3a\xac\x93\x76\x25\x6f\xd6\x68\xac\x92\xe3\x0e\x99\xb1\xbe\xd6\x2c\x14\x92\xf9\x20\x4c\x2e\x5c\xce\x2a\xeb\x82\xd8\x90\xdf\xda\x64\x41\x59\xe3\x1f\x65\x56\x53\x8c\x95\x53\x9b\x22\x6c\x9c\x94\x86\x75\x3e\x78\x97\x2d\x79\x6d\x2a\x91\x6d\x91\xd9\xb2\x52\x5a\x42\x19\x72\xa2\x35\x82\xf4\x21\xa1\x80\x1f\xaa\xed\x66\xc9\x33\x6b\xd6\x6a\x03\x63\xd7\x32\x64\x05\xbc\x0c\x75\x05\x5e\x39\x89\xca\x92\x1d\x8f\x6f\xc1\x95\x49\xd2\xc0\x39\xa3\x20\x3a\x06\x62\x2b\xe1\x0b\xe6\xa4\x16\x41\xe6\x6c\x4f\xa6\x45\xd2\x62\x48\x5f\xf0\x4c\x78\x89\xdc\xd2\x9f\x91\x90\x5a\xad\xe9\x41\x27\xd2\x8b\x0c\xf2\x46\x05\xac\x15\x48\x1f\x1c\xb8\x80\x2c\x94\x81\xb6\x99\xd0\x70\x52\xe4\xf4\x08\xb5\x33\x84\x4a\xcb\x2c\xc0\x17\x6a\x1d\x40\x72\x18\x04\x55\x4a\xd4\x26\x28\x8d\x5d\x11\xd9\x11\x8f\xa0\x4c\x2d\xb1\xa2\x17\xb7\x49\xfa\xb2\x73\x17\x0e\x4f\x3f\x21\xfd\x8c\x94\x23\x4d\x90\xfe\x82\xf4\x0a\xe9\x25\xfe\x46\x9a\x22\x3d\xc6\x0b\xbc\xc4\x63\xfc\x8a\x1f\x90\x22\xf9\xe6\xcd\x53\x4e\x24\xb0\x86\xc3\x06\x35\x76\xb8\xc1\xe4\xbe\x7b\x32\xfa\x17\xc4\x72\x13\xa0\x03\x36\x12\x04\xc9\xc3\xe0\x63\x63\x7a\x47\xb9\x6b\xe1\x94\x58\x69\xe9\x59\xb7\xdb\x65\x76\xbd\x56\x99\x12\xfa\x4b\x62\x49\x2b\xcf\x94\x21\x6d\xf3\x67\x8c\xf2\xc5\x2c\x11\x76\xcd\xd1\x3e\xc7\xf1\xe6\x4e\xd2\x69\x4f\x72\x1f\xa7\x9f\x7a\x97\xe2\xf4\x63\xff\xf4\xaf\xe5\x4f\xa7\x3f\x5f\x3d\x4d\x3f\xf7\x0e\x20\xf7\x16\x2f\x78\x7f\x36\x38\xc3\xd9\xc5\xef\xa3\x69\xff\xf5\x08\xc3\xd1\x7c\x30\x1b\x4f\x17\xe3\x8b\x73\x8c\xdf\xce\x47\x98\xcf\x06\xcb\xb7\xb3\x31\x26\xe3\xc1\xe8\x3c\xee\x27\x17\x0b\xbc\x19\xfd\xf9\xc7\xc5\x6c\x38\xc7\xab\xf1\x64\x34\x1f\x8e\x67\xa0\xed\x9b\xf8\xcb\xa7\x98\x25\xbd\xe1\x68\x3a\x3a\x1f\x62\x3a\xbb\x78\x37\x1e\x92\xd3\xf1\x7c\x11\x2f\x67\xa3\xf9\x62\x36\x1e\x2c\x40\x8e\x67\x93\xfe\xf9\xf0\x2b\xcd\x0e\x70\xe6\x18\x62\x81\xe9\x3b\x4c\x5f\x61\x8a\xe9\x39\xfa\xd1\x28\x5e\x0d\xf8\xfb\xf7\x49\xef\xd5\xa4\xff\x7a\xde\x9e\x4c\x86\x5f\xef\x06\xfc\xec\x62\xbe\xc0\xa2\x3f\x7b\x3d\x5a\xe0\xb7\xb7\xe3\xc9\xf0\xbe\xd0\x07\x45\xa9\x01\x4a\xea\x9e\x43\xa7\x94\x74\x46\xe5\x1a\xdd\xd4\x5e\xf2\x25\xdf\xa9\x50\x40\x9a\x98\x93\x24\xe9\xa5\x2f\xd9\xe5\xe3\xbd\x8e\x24\xe3\xf2\x29\x3b\xbd\x3a\xa1\x98\xca\x50\x16\x54\xe8\x9e\x74\xee\x68\xbf\xd2\xb5\x8c\x9e\xa8\x77\xe5\x86\x6a\x57\x9a\x3c\x96\xe2\xfa\x4b\xb7\x95\x62\x2b\xb1\x13\x54\xc4\xca\xac\xad\xe9\x41\x3a\x47\x25\xaf\xed\x06\x95\x88\x1d\x67\xe4\x8e\x6f\x9c\xa5\xae\x23\x34\x2e\xf9\x4a\xa6\xbb\x11\x72\x25\x5b\xf2\xdf\x47\xdd\x5c\xb5\x28\xdb\x5d\x21\x7c\xbb\xe2\xb4\xc4\x2a\x36\xfe\xf2\x9a\x8a\x89\x7a\xed\xe0\xab\x99\x11\x0f\xc5\xe4\xd4\xbc\x84\xaf\x99\x02\xf0\xbd\x15\x11\xcc\x6d\x06\xad\x56\x3c\xed\x7a\x8b\xb4\x2b\x12\x62\xb8\xe7\x46\x2d\x1d\x87\x8c\x0a\x7b\x05\x72\x02\x77\x9d\x13\xc9\x12\xa5\x34\x35\x14\x1d\x3e\x4c\xce\xf2\xea\x36\x14\x36\xb6\x7a\x8e\x5c\x39\x14\x34\xec\xe0\x6f\x4b\x14\xa1\xd4\xf8\x47\x38\x94\xf6\x50\x1d\x5b\x29\x2b\xb2\xf9\xbe\x33\x1a\x5d\x15\x09\x4f\xd0\x33\xbf\xc7\x15\x01\xfa\xe0\x54\x15\xa7\x5e\xbc\xe6\xcd\x31\xb1\x88\xff\x69\x97\x13\x93\x96\x47\x6b\xf6\x90\x18\x59\x4c\x6b\xe4\x99\x28\x13\x6c\x8b\x66\xcd\xed\xce\x90\xa8\xa8\xa4\x2b\xfd\x01\x23\xdf\xab\xe1\x23\x99\xc4\x56\xc1\xdf\x2b\xcf\x58\x96\xd6\x7c\xa9\x4e\x46\x69\xcd\x63\x97\xb7\x5f\x8b\x03\x86\x36\x7a\xac\xa3\x83\xeb\x4c\x04\x64\xa4\x72\x51\xda\xf8\xa4\xf0\xc8\x2a\x48\x5a\x45\xcd\x09\x5f\xac\x7c\xd0\x64\xaa\x68\x0c\xd1\x40\x32\x28\xb7\x51\xd3\xf2\x9a\x26\x79\xa3\x30\x8d\x79\x04\xd2\x34\xd8\x9a\x4a\xb0\x36\xb4\xbf\xdf\x3f\x11\x19\x75\x8a\x67\xc4\x5c\x7a\x13\xd8\xce\xba\x2d\x7d\x8d\x04\xad\xa4\xd6\x49\x8b\xf0\x96\xd6\x76\xc7\x3a\x47\xdd\x93\xe3\x6f\x3c\x44\x39\xcd\xe6\xff\x1c\xec\x65\x3e\xb8\xa1\x49\x9d\x76\x71\xf9\x21\xed\x5c\x25\x27\x1d\x22\xfc\xa4\x3d\x78\x42\xfb\x27\x4d\x80\x85\x13\x4a\x93\x63\xe6\xa9\x78\x9b\x0f\xee\x4a\xe4\x8f\x5b\x6f\xcf\xda\x89\x7c\x79\xf9\xbc\xb9\x7e\x7e\x75\xf5\x94\x70\xfd\x17\x00\x00\xff\xff\xe3\x3f\xd9\xd5\x9e\x07\x00\x00")

func runtimeSyntaxGentooEbuildMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxGentooEbuildMicro,
		"runtime/syntax/gentoo-ebuild.micro",
	)
}

func runtimeSyntaxGentooEbuildMicro() (*asset, error) {
	bytes, err := runtimeSyntaxGentooEbuildMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/gentoo-ebuild.micro", size: 1950, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxGentooEtcPortageMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x51\xcd\x8e\xda\x30\x10\xbe\xf3\x14\x23\x67\x0f\x10\x94\x74\xa5\x56\xab\x2e\x02\x56\xdb\xbd\xf4\xd0\x4a\xbd\xf4\x52\xa0\xd5\xe0\x0c\x89\x85\x1d\x5b\xb6\x29\xa4\xb2\xf6\xd9\x3b\x10\x2d\x0b\x1c\x2c\xc7\xca\xf7\x37\xdf\x64\x19\x7c\x25\x4f\xa0\x02\x60\x0b\x74\x40\xe3\x34\xc1\xc6\x7a\xf8\x61\x7d\xc4\x9a\x40\xda\x36\x7a\xab\x61\xa3\x34\x85\x41\x96\x0d\x42\xd7\x46\x3c\x80\xa0\x28\x0b\xd7\x83\x04\x88\x65\x39\xdc\x52\xb7\xb7\xbe\x0a\xc9\x60\xd8\xa6\x5d\xdb\x5f\x81\x46\x77\x82\x79\xf0\x05\x03\x41\xa4\x43\x9c\x0c\xa4\xd5\xec\x50\x7b\xa2\x16\xc4\xef\x72\xdc\x03\x7e\xf2\xff\x8d\xc6\x3a\xbc\x01\xd6\x5e\xd5\x4d\xf4\x54\x81\x58\x2c\x26\xc1\xa1\xa4\xc9\x6a\x35\x5e\x8e\x9f\x16\x58\xfc\x7b\x2e\x7e\xdd\x17\x8f\x7f\x8a\xd5\x58\x5c\xe1\xd7\x7a\x47\xd7\x84\xe2\x16\xce\x66\xdf\xd4\x96\x74\x07\x7f\xc9\x07\x65\x5b\x68\x77\x66\xcd\x9f\x6f\xce\x86\x87\xe2\x29\x41\x14\xac\x53\xa9\x5a\x45\xd6\x29\xf3\xe1\x85\x6a\xba\x1b\x9d\x84\x9e\xa5\x24\x17\x39\x23\x7a\xd9\xd0\x59\x61\xdf\xa8\x78\x8c\xf1\x5a\xac\x9e\x96\xd3\x21\x6a\xd7\x60\x42\x53\x3d\x7c\x4a\xe8\x4d\x6a\x9c\xc3\xa4\x90\x5f\x46\xb9\x90\x9c\x93\xc7\xc3\xcf\xf0\xf1\xf1\x3e\x85\x26\xb1\x8d\x97\xe9\xf0\xf9\xe1\x78\x8a\xcd\x3a\x54\xa3\xe5\x5c\xdc\x88\xbf\xa7\xe9\x7d\xf2\x53\xa2\x17\x8c\x54\x5b\xaf\xde\xc3\xc8\x0e\x8f\x45\x5f\xe0\xf3\x32\xff\x70\x02\x7f\xe7\x25\xa9\xb6\x06\x4f\xf5\x4e\x63\xb4\xfe\xa6\xfd\x73\x13\x57\xec\xe1\x2c\xbd\xa6\x69\x9a\xce\xd2\x6c\x9a\xe6\x69\xce\xf7\xbc\xaf\xe3\xc5\x1a\xc3\x84\xb3\x4a\x47\x5a\xdb\x3d\x88\xac\xcc\x79\xcb\xff\x03\x00\x00\xff\xff\xa5\x03\x85\x88\x6f\x02\x00\x00")

func runtimeSyntaxGentooEtcPortageMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxGentooEtcPortageMicro,
		"runtime/syntax/gentoo-etc-portage.micro",
	)
}

func runtimeSyntaxGentooEtcPortageMicro() (*asset, error) {
	bytes, err := runtimeSyntaxGentooEtcPortageMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/gentoo-etc-portage.micro", size: 623, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxGitCommitMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x94\xdb\x6f\xda\x30\x14\xc6\x9f\xc7\x5f\x71\x14\x26\x15\x7a\x09\xdd\x1e\xd3\x87\xa9\x6b\x37\x54\xa9\xb4\xd2\x48\x1f\xa6\x00\x93\xe3\x9c\x24\x16\x89\x8d\xec\x13\xa5\x68\xec\x7f\x9f\x9d\x4b\x05\xa5\xdb\x34\x1e\xc0\x97\x9f\xbf\xf3\xf9\xb3\x0e\x43\x08\x73\x61\x80\xab\x04\xc1\xfe\xa6\x1a\x11\x8c\x4a\xa9\x66\x1a\xaf\x60\xab\x2a\xe0\x4c\x82\xc6\x44\x18\xd2\x22\xae\xc8\x62\x04\x4c\x26\x13\xa5\xa1\x54\x89\x48\xb7\x6e\xa1\x92\x09\xea\xc1\x10\x28\x47\x20\xd4\xa5\x01\x95\x36\x13\x89\x35\x7c\x9e\xdf\xc2\xbd\xe0\x28\x0d\xfa\x83\xa1\xa5\x6e\xd4\x66\xab\x45\x96\x13\x8c\xf8\x18\x3e\x5e\x7e\xb8\x3c\x87\x39\xc6\xcc\x90\xb0\xc5\xe6\xc4\xaa\x84\x2c\x76\x0d\x92\x49\x65\xbd\xc9\x54\x64\x95\x66\x24\x94\x84\x54\x14\xb6\x84\x02\x94\x2c\xb6\x23\xb3\x95\xc4\x9e\x21\xb7\x6a\x85\x53\x14\x32\x73\xa5\x8d\x2a\x11\xa6\xd6\x98\xd9\x20\x17\xa9\xe0\x56\xce\x9d\x34\x50\x0b\xca\x1b\x67\xd3\x87\xa7\x56\x9f\xf0\x99\xc0\x5e\x90\xec\x8d\x46\x39\xd1\x26\x98\x4c\xea\xba\xf6\xdd\xe6\x45\xbb\xee\x2b\x9d\x8d\xad\xf5\xae\x9a\x97\x09\xba\xe0\xaa\x2c\x05\x79\xe0\xdd\x3c\xce\x66\x77\xe1\x8f\x2f\xb7\x77\xe1\x6c\x3e\xdd\x85\xd7\xd3\x7e\xec\x0d\x9a\xcb\x3a\x0e\x4a\x34\x86\x65\x38\xe0\xaa\xb0\x75\x44\x26\x95\x46\xf0\xfc\xd3\x17\x06\x25\x99\x6e\x97\xb7\x53\xf0\x56\xc3\x0e\xf8\xda\x78\xe7\x39\x93\x19\xf6\xd4\x1a\xb7\xb5\xd2\x09\xb4\x1f\x6f\x18\x45\x81\xd9\x30\x8e\xc1\x72\x39\x4a\xb0\x40\xc2\x64\xd7\xbc\x90\xb0\x03\xf7\x0e\x2e\x80\x9d\xb6\xc1\x95\x98\x8c\x83\x3d\xdc\x15\x79\x4b\xf3\x95\x6a\x27\x1a\xbc\x0d\x1f\xa0\x7d\xdd\x23\xf6\x80\xea\x4d\x1d\x2b\x1e\x60\x9d\xe5\xa0\x49\xe2\x49\x92\x66\x7c\x8d\x49\x73\xd2\x6d\xf4\x79\xa0\xd6\xf6\xdb\x66\xf6\x2e\x5a\x4d\x3e\x9d\x06\x57\x3f\x7f\x2d\x16\xcb\xb3\x85\x7f\x30\x7d\x6f\x55\x5e\x59\x5a\xed\x17\xbb\x69\x33\xf6\x4f\xa3\x60\x79\x64\xfe\x80\xfc\xae\x2a\x0d\xb1\x66\x92\xe7\xae\x21\xe0\x24\x5a\x9d\x2c\xcf\xfe\xf3\xcc\xdf\xf1\x47\xd9\xc3\xd1\x0a\xfe\xa5\xfd\x02\x37\x39\x7d\xc3\x96\xcd\x99\xc9\x6d\x97\x94\xb1\x2a\xcc\x1f\xd7\xdb\xa5\xa6\x57\x58\x61\xc3\x6f\x14\x42\xcd\x44\xe1\xfa\xa9\x29\x60\x60\x74\x76\x7f\xf7\x10\xba\x7f\x09\xa9\x08\xd4\xfa\x1c\x32\xd7\xf9\xc6\x6e\x11\x8b\xcd\xb8\x53\x39\xef\xde\x61\xcf\x99\x0b\xfd\x77\x00\x00\x00\xff\xff\x5c\x55\x4a\x64\x69\x04\x00\x00")

func runtimeSyntaxGitCommitMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxGitCommitMicro,
		"runtime/syntax/git-commit.micro",
	)
}

func runtimeSyntaxGitCommitMicro() (*asset, error) {
	bytes, err := runtimeSyntaxGitCommitMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/git-commit.micro", size: 1129, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxGitConfigMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\xcc\x51\x8a\x83\x30\x14\x85\xe1\x77\x57\x11\xee\x08\x26\x81\xc9\xbc\xcb\x38\xb3\x90\xdc\x04\x82\x46\x91\xaa\x29\x26\xd2\x4a\xb3\xf8\xa6\x55\x68\x8b\x8f\xff\xe1\xe3\xf8\x75\x0a\xe6\x4a\xa0\xeb\xc3\x77\xed\xa6\xb6\xef\xe0\x19\x74\x8b\x38\xba\x66\x19\xac\x67\x79\x44\x91\xe6\x9f\x6d\xce\x21\xcb\x6a\x37\xb8\x99\xa4\xf6\xc1\x4c\x81\x00\xfe\xd2\x30\x2f\x36\xb6\x66\xf0\x96\xe1\x1f\xec\xe2\x64\xd7\x8b\x9b\x1b\x02\x5a\xca\xd2\x9f\x4d\x6d\x4b\xa5\xb8\xd4\x95\xe2\x15\x1c\x5e\x3e\x10\x4a\xc1\x51\xe5\x47\x05\x14\x51\x44\xa9\x41\x31\x0e\xb1\xd8\xab\x48\x55\xbc\xf0\x38\xda\x87\xa5\x3a\xbe\x7d\xb2\x2f\x2a\xf5\x4d\x09\xce\xfe\xd3\xef\x3d\x00\x00\xff\xff\xc2\x05\x8a\xe9\xfe\x00\x00\x00")

func runtimeSyntaxGitConfigMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxGitConfigMicro,
		"runtime/syntax/git-config.micro",
	)
}

func runtimeSyntaxGitConfigMicro() (*asset, error) {
	bytes, err := runtimeSyntaxGitConfigMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/git-config.micro", size: 254, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxGitRebaseTodoMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\xc1\x4e\xc3\x30\x0c\x40\xef\xfd\x0a\x2b\xbd\x0c\x68\xd1\x0e\x48\x88\x33\xbb\x70\x45\xdc\xd0\x26\x65\x8d\xb3\x59\x6b\x93\x92\xa4\xd0\x89\xf0\xef\xa4\x49\xc6\x61\x1b\xda\x7a\x8b\xfd\xfc\xec\xca\x2e\xe1\x6d\x4b\x16\xec\x5e\x39\x3e\x82\xd4\xa6\xe3\x0e\x42\x60\xb0\x28\xa6\x27\x90\x72\x68\x78\xe3\xe8\x13\xc1\xe0\x9a\x5b\x52\x9b\x22\xe3\x6c\x43\xae\x8e\x41\xac\x9d\x16\x9a\x9d\x46\x8a\xa2\x84\x05\x4a\x3e\xb4\xae\x68\x74\x3b\x09\x37\x4a\x1b\x04\x76\x7f\x1b\x93\xcf\xba\xeb\x50\x39\x9b\xb3\x4d\x7a\x02\x5b\x95\x19\x78\x8d\xb6\x98\xe0\x4a\x1c\xb8\x1d\xee\xbf\xb4\x11\x90\x3e\xb6\x9a\xa1\x47\x41\xee\x06\xde\xe7\xf5\x13\xaf\xe5\xf2\xfb\xb1\x7a\x98\xff\xb0\x7f\xf0\x12\x60\x86\x15\xc4\x92\x63\x26\xc8\xa4\x97\x34\x0e\xfd\x25\x5b\xf2\xc8\x0a\x12\x7d\x46\xd4\xfb\x9e\x9a\xdd\x75\x9e\xbe\x82\x08\x9f\x9f\x79\xb2\x19\x6f\x70\x0a\x5d\xf7\x97\x59\x6b\x2a\xc8\x55\xa7\x58\x70\x5a\x6f\x3f\x06\x6e\xb7\x97\x9d\x49\x67\x2b\xc8\x05\x67\xbb\x06\xe3\xe8\x71\xc4\x26\xf8\x56\xb0\xbc\xbb\x66\xd2\x24\x1e\xc3\x3a\xa6\xba\xbc\xf4\xc4\x6d\x43\xa3\x70\x9c\xdd\x5a\xb7\x87\xcd\xdb\x1e\x1b\xe2\x2d\xb0\xf2\xef\x7e\xc8\xc1\xcb\xe2\x90\x27\x11\xee\x87\x24\xa1\x01\x76\xdc\xfc\x37\x00\x00\xff\xff\x9e\x10\xac\x53\xee\x02\x00\x00")

func runtimeSyntaxGitRebaseTodoMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxGitRebaseTodoMicro,
		"runtime/syntax/git-rebase-todo.micro",
	)
}

func runtimeSyntaxGitRebaseTodoMicro() (*asset, error) {
	bytes, err := runtimeSyntaxGitRebaseTodoMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/git-rebase-todo.micro", size: 750, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxGlslMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x52\xd1\x6e\xda\x30\x14\x7d\x6e\xbf\x22\xb3\xba\x09\x92\xa6\x74\xd0\x97\xa1\xd2\xaa\x1b\xeb\x5e\xa8\x5a\x8d\xed\x65\x90\xa2\x9b\xe4\x26\x58\x35\x36\x72\x1c\x5a\xa6\xab\x7d\xfb\x1c\x87\x86\x6c\x94\x87\xcb\xf1\xf1\x89\xcf\xf5\xf5\x29\xb6\xd2\xc0\x8b\xc7\xbe\x4d\xa6\x13\xe6\xb1\xf9\x59\x27\xd3\x90\xd3\x06\xb5\xa1\x6c\x4d\x9b\x35\xe5\xa2\x10\xdd\x13\x76\x7c\x9c\x28\xa1\xb4\x17\x6b\x9e\x2f\x4d\x2c\x4a\xf4\xd8\xec\x26\xfc\x05\xe1\xef\x45\xb4\x03\xe7\xe1\xa7\x45\xe4\xcf\x66\xc3\x62\x0d\x09\x0e\x23\x8b\x3b\xdd\x88\xed\xbe\xcc\x35\xa2\xf4\xaa\x1f\x9b\x5f\x76\x36\x8a\xa7\x14\x2b\x25\x28\xde\x60\xd2\x77\x75\xe0\xea\x05\x71\x69\x88\x3b\x96\x3b\x96\x3b\x36\x13\x0a\x0c\x39\xda\xb1\x8e\x5c\x81\xe9\x57\x65\x50\x95\x0b\x2a\x8c\x2e\x13\x43\x05\xac\xd6\x02\xf5\xc7\xf1\x2b\xea\x37\x68\xd0\xa0\x2f\x3f\x3f\x7f\xdd\x2b\xa7\x4b\x48\xd5\xf3\x5e\x5f\xaf\xbb\xf3\xab\x37\xdb\xcf\xc5\xa2\x33\xc6\xb5\x59\x7e\x07\x99\xe3\x03\x68\x58\xa1\x41\x5d\xd0\x83\xb2\xcd\xb7\xd6\x77\x60\xff\x38\x88\x16\x35\xa9\x06\x38\x55\xa5\x4e\xf0\x7f\xf6\x4e\xa5\x78\x20\xad\x49\xad\x52\x7b\xb3\x1d\xd5\xac\x6e\x55\xbe\x97\xb7\x9a\x4d\xb6\x20\xeb\x39\x27\x4a\x16\x86\xc0\x18\xcd\xe3\xd2\x20\x6d\x40\x6f\xb9\xcc\xa9\x94\x3c\x53\x7a\x65\x67\x4d\xaa\xb4\xe3\x96\xae\x66\x84\xa2\x40\xd2\x68\x4a\x2d\x29\xe5\x45\x02\x3a\xa5\xe7\x25\x17\x48\x56\x4e\xa9\x6a\x99\xd4\x51\xd0\x98\x36\x8f\x1a\x6b\x84\x27\xb2\x96\x86\xcb\x12\x0f\xa4\xae\xab\x4a\x67\x5f\xc9\x9e\x07\xd6\xaa\xa5\xa9\x0e\x62\xb3\x30\xe8\xf9\xa3\xcb\xab\xeb\xe1\xbb\x3f\xef\x3f\xd0\x63\x93\x1e\x97\xb8\xda\x65\x66\x73\x16\x05\x74\xfe\x52\x01\x08\xb3\x9b\xf0\x36\xf2\x0f\xcc\x62\x01\xc9\x93\xc7\x3a\x8f\xd4\x0a\x64\xb7\xd7\x3b\xf3\xdf\xd2\x15\x06\xb4\x19\xb1\xde\xdc\x67\x1e\xca\x74\xc4\xe6\x7e\xef\x5f\x9d\x1d\x82\xc1\xd3\xfa\x0a\x3f\xee\xc7\xf7\xc3\xeb\xd7\xfd\xd3\x3a\x1a\xac\xe5\x13\x9c\x34\x9b\xee\x5a\x47\x81\x17\x90\x17\x1c\x05\xec\xf8\x6f\x00\x00\x00\xff\xff\x47\xa1\xa0\xce\x72\x03\x00\x00")

func runtimeSyntaxGlslMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxGlslMicro,
		"runtime/syntax/glsl.micro",
	)
}

func runtimeSyntaxGlslMicro() (*asset, error) {
	bytes, err := runtimeSyntaxGlslMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/glsl.micro", size: 882, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxGoMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x93\x51\x6f\xda\x30\x10\xc7\xdf\xf9\x14\x99\xb5\x8d\x24\x15\xd0\x52\xc4\x18\x1a\x43\x93\xa6\xed\xb1\x2f\xdb\x53\x12\x84\x13\x2e\x69\x84\x63\x47\xce\x85\x82\x7a\xec\xb3\xef\x5c\xda\x0d\x95\x34\x0f\x76\x2e\xf6\xfd\xee\x7f\x7f\x3b\xcd\x41\xa3\xdc\x7b\xe2\xa7\x11\x9e\x88\x87\x85\x79\x2f\x7a\xbd\xcc\x28\x63\xbd\x06\x25\x42\x05\x1a\x79\x21\xf5\x65\x5d\x83\xde\x50\x26\x6b\xca\x94\x69\x80\x32\x53\xd5\x0a\xf6\x3c\xd7\x07\xda\x80\x02\x04\x2a\x2b\x59\x90\x02\x1d\xc4\xa9\xe8\xa4\x54\x72\x0b\xa4\xe1\x81\x6a\xa9\xcb\x8c\x6a\x5b\x6a\x3c\x8d\x4a\xf3\x6c\x10\x32\x24\x0b\x52\xf1\x90\x99\x1d\xd8\x33\x12\x1e\x6a\xf0\xdc\xe3\x40\xed\x92\x73\xfc\x19\xdd\x4c\xe9\x76\x4c\xd3\x49\xb0\xa4\x5c\x19\x89\xfe\x29\x7a\x51\xe7\x4f\x27\x74\x33\x9e\x05\x6f\x62\x98\x52\xa3\xa5\xf4\xc0\xea\x6d\xab\x81\x1a\x64\x35\x05\xf1\x77\xb0\xb9\xcc\x80\x52\x63\x14\x55\xae\xed\x7b\xa9\x09\xac\x35\xb6\xb3\xbd\x27\x5e\x2d\xb3\xad\x2c\x9c\x11\xb5\xb1\xc8\x2a\x74\x83\xb4\x93\x96\x5c\x55\xc7\x6e\xb9\xbf\xbc\xd5\x19\x15\x86\x4d\xcb\xc1\x92\x2e\x15\x95\x06\xe5\xdb\xd0\xdc\x58\xb2\x52\x3b\x6c\x4e\xa0\x9c\xf7\x92\x07\x4e\x97\xad\x42\x6a\x1e\x4a\xcc\xee\xd9\x30\x6c\x6d\xb7\xf3\x2f\xdd\x72\xcd\xc2\xa0\xa1\x94\x1d\xde\x3a\x71\x58\xea\x16\xce\x52\x9e\xf4\xca\xe7\xb3\x62\xb1\x40\xb9\xe4\x7a\xdd\xc7\x19\x0d\xae\x46\xe1\xe2\xcb\xd7\x77\x7f\x3e\x7c\xa4\x55\x42\xf3\xc5\x05\xe6\x54\x36\xba\x1e\x7c\x4e\xae\xe8\x7a\xef\x5e\xe4\x20\xff\x36\xf8\x91\x84\xcc\xa4\xfe\xb0\x7f\x59\x59\xf8\x71\x3c\xa4\x68\x25\x92\x20\x14\xd4\x7f\x8e\xfa\x1c\x5d\x6e\x76\xfc\x38\x92\x69\xae\x2d\xee\xfa\x31\x07\x49\xf7\x1e\xa7\xe1\x53\xf2\x78\x7b\xa4\x7d\xc4\xe5\x59\x84\xd3\xf4\x38\x3e\x52\x7b\x1e\x4f\x8e\xf4\xfb\x3c\x9e\x1d\x83\x2e\xde\x3a\x5a\xad\x93\x70\xfd\x7f\xa9\x3a\x39\xe2\xaf\x28\x8a\xe6\x0d\x5f\x02\x98\x27\x49\x30\x1a\x0d\xc3\xd7\x7b\x98\x61\x71\x21\x46\x71\x28\x3c\xfe\x9f\x16\x22\x0e\x47\xff\x6e\xa6\xd9\x18\x4f\xfc\xba\xfb\x7e\x37\x5f\x8a\xde\xdf\x00\x00\x00\xff\xff\x00\xd6\x65\x4e\x9a\x03\x00\x00")

func runtimeSyntaxGoMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxGoMicro,
		"runtime/syntax/go.micro",
	)
}

func runtimeSyntaxGoMicro() (*asset, error) {
	bytes, err := runtimeSyntaxGoMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/go.micro", size: 922, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxGroffMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x91\xbf\x8e\xdb\x30\x0c\xc6\xf7\x3c\x05\x21\x67\xb0\x5d\x44\x68\xc7\x06\x08\x3a\x64\x68\x96\x76\x68\x6f\x33\x1d\x40\x27\xd3\x8e\x01\x5b\xce\x49\x0a\x92\x00\x7e\xf8\xd3\x9f\x24\x88\x7d\x77\x5e\x4c\x90\xe2\xc7\x1f\x3f\x26\x09\xec\x48\x13\xb4\x06\x84\x02\xba\x88\xfe\xd8\x11\xd4\x83\x86\x46\x0f\x75\xcd\x17\x49\xb2\x30\x57\x65\xc5\x05\xd8\x6f\x9f\x61\xc0\x90\xf7\x05\xf5\xa6\x5c\x86\xd8\x25\xc3\xdf\xf6\x42\xfa\xcc\xde\x07\x9c\xb9\x46\x78\x39\x10\x08\xdd\x9c\x7a\x52\x16\x86\x1a\x78\x65\xc0\x29\x73\xa5\x17\x72\xe8\x5c\x24\xaf\x6e\x28\xdb\x23\x4f\x2b\x33\x2a\x9d\x41\xb1\x2f\x8a\xb5\x39\x0a\x49\xeb\xb2\x2c\xf3\xa0\xf2\xbf\x55\x8d\x63\x92\x07\xa1\x85\xb4\xa4\x81\x8c\x14\x47\x32\x37\x8d\x57\xdd\x36\x07\x37\xb3\x71\x43\x84\x03\xc1\x38\x7b\xe7\xb2\x9d\xaf\x80\x9d\x51\x60\xed\x21\xd0\x40\xab\x42\xcd\x88\xde\xa9\x7b\xad\xaf\x14\x6b\xce\xc2\x0f\x53\x1e\x23\x93\xe2\xb7\x11\x57\xd9\xaf\xe2\xfb\xea\x67\x19\xe6\xfd\xa5\x73\xd7\xaa\x07\x55\xdc\x2c\x45\x1c\xd1\x7d\x99\x4a\xf9\xe8\xbb\x33\xf6\x5c\x37\x56\x68\xbb\x79\x7a\x85\x05\x03\x52\xd5\x86\x45\xcd\x7f\xf4\x76\x22\x63\xa7\x9b\x36\x9a\x28\x9a\xf6\x64\x55\xfe\x99\x71\xdb\xa1\xf7\x3b\xdf\xdb\xaf\xd4\x75\xc3\x39\x74\x22\x32\x9e\x2f\xa3\xbb\x56\x3b\x7f\xef\x6f\x6e\xe2\x0f\x22\xcc\xe7\xe0\xf1\xc5\x9c\x1c\xf3\x19\xfa\xf6\x7e\xad\x29\xbc\xa6\xca\xfb\x17\x8c\xfc\x50\xb8\x89\xba\xf2\x54\xeb\x8f\x90\x7a\x78\x9c\x70\x2a\x18\x7d\xf6\x0c\xb8\x2c\x7e\x84\x63\xbc\x07\x00\x00\xff\xff\x3f\xd0\x55\xe7\xd3\x02\x00\x00")

func runtimeSyntaxGroffMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxGroffMicro,
		"runtime/syntax/groff.micro",
	)
}

func runtimeSyntaxGroffMicro() (*asset, error) {
	bytes, err := runtimeSyntaxGroffMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/groff.micro", size: 723, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxHamlMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x92\xcd\x6e\xb2\x50\x10\x86\xf7\x5e\xc5\x38\xe0\x07\x07\x83\xf9\xb6\x6d\x2a\xb5\x69\x17\xdd\x76\xd3\x26\x3d\x67\xa6\x41\x43\x90\x84\x9f\x88\x1a\x6b\xc5\x7b\xef\x80\x0a\x3d\x3b\x7d\xde\x37\x33\x0f\x0c\xdb\x63\xb9\x8b\xbf\x01\x5f\xe3\x22\x47\x40\x33\x5b\xcb\x0f\x17\x47\xa3\x55\x95\x57\x35\xac\x8e\x71\x09\x00\x18\x36\x73\xbc\xa2\xc3\x3a\xdb\x25\x42\xa2\x66\x1e\x09\x6b\x0b\x7e\xa6\x00\x7d\x0d\x40\x0d\xab\x89\xfe\x1f\xde\x3d\x85\x9f\x5f\x34\x35\x52\x28\xe2\x34\x91\x15\x97\xce\xbd\x9d\x1d\x93\x3c\xaf\x0e\x97\xc8\xcc\xf4\x10\x38\x0e\xbc\x54\xfb\x65\x9e\xc0\x66\x5f\xc9\xb6\x7f\xb0\xcd\xca\xf4\xf6\xf7\x2a\x92\xd6\x49\x52\x02\xca\x62\x46\x6a\x7c\x63\x50\xa9\x00\xe5\x21\x26\xfa\xed\x83\x1e\xcd\x49\xf3\x99\x02\x73\x1e\x88\x34\x95\x10\xd5\x93\x07\xcd\x11\x05\xd1\xd0\x70\x35\xbb\xd2\x70\x07\xc2\x9a\x59\x08\xf7\x64\xac\x79\x4c\xc1\x18\x6d\x0b\x4f\x66\x7b\x9d\x85\x27\x16\x5e\xd7\xde\x1c\xc8\x96\x68\x81\xe5\x20\xe0\xaf\x42\x9b\x6b\xcd\x24\x39\xf5\xc0\x52\x6a\x81\x65\x24\xa0\x17\x92\xb7\xf6\x1e\xd7\xdb\xab\xd8\xb2\xce\xd2\xf5\xee\xa2\x07\xe8\x0c\x26\x56\xbe\xcc\xf7\x72\x4c\x7f\xd1\x2c\x16\xea\x76\x9c\x38\xfc\xa1\x69\x37\xee\xb9\x2a\x0a\xb9\x9e\x3d\xb2\x3b\x39\x3a\x9a\x4f\x34\x0b\x5a\x2d\xa7\xfd\x5e\x7e\x03\x00\x00\xff\xff\x3a\xb2\x22\xa7\x49\x02\x00\x00")

func runtimeSyntaxHamlMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxHamlMicro,
		"runtime/syntax/haml.micro",
	)
}

func runtimeSyntaxHamlMicro() (*asset, error) {
	bytes, err := runtimeSyntaxHamlMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/haml.micro", size: 585, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxHaskellMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x93\x5f\x4f\xdc\x38\x14\xc5\xdf\xe7\x53\x64\x8d\x85\x18\xb4\xc3\xbe\xef\x12\xb4\x6a\xcb\xf4\x3f\xb4\x30\xea\x0b\x26\x95\x89\x9d\x89\x55\xc7\x06\xc7\xe9\x30\xe2\xd0\xcf\xde\xeb\xfc\xa1\xb4\xf4\xa1\x1a\xc9\xd7\x76\xee\x9c\x7b\xf3\xbb\x27\xed\xd6\x45\x79\x9b\xb1\x57\xb2\xfd\xa2\xad\x65\x19\x13\x07\x75\xcb\xd9\x6c\xb6\xb3\x93\xbd\xd5\xdb\x8d\x0f\xaa\x9d\x95\xde\xfa\x90\x05\xad\x32\x76\x91\x5d\xee\xc9\x16\xa5\x6c\x35\x7c\x85\xd2\xca\xb6\x85\x92\x51\x42\xe9\x4a\x76\x36\x52\x0c\xe6\xab\x71\x6b\x28\x8f\xca\x07\x69\x6d\x0a\xda\xac\x1d\x6a\xa3\xd2\x03\x53\x21\xd6\xda\x41\x5b\x12\x31\xcd\xb5\x0f\x11\xc6\x55\xe6\x76\x58\xed\x10\x02\x85\x36\x4a\x57\x6a\x58\x9d\x12\xd0\x90\x62\xe3\x55\x67\x35\x9c\xde\xc4\xed\xb5\xc6\x4d\x27\xad\xa9\x8c\x56\xe8\x8f\x9b\x5a\x07\x3d\xa7\x1e\xd9\xe3\x9e\xf7\x8a\xbe\xc1\x62\x6a\xa3\x18\x6b\x16\x43\xd1\x62\xac\x5a\x8c\x65\x8b\x87\xba\xc5\x58\xad\x98\xca\x15\x69\x7d\xa2\x3f\x30\xe1\x3d\x14\x4e\x54\xf8\x80\x85\xf7\x5c\xf8\x04\x86\x3f\x90\xa1\x9d\xe7\x23\x1b\x3e\xc1\xe1\x23\x1d\x4e\x78\x78\xcf\x87\xf7\x80\xf8\x48\x88\x0f\x54\xc6\x60\xc7\x18\xf8\x03\x25\x9e\x30\xa5\x23\x4f\xa0\xf8\x48\x8a\x4f\xa8\xf8\x0f\x56\x1c\xc3\x45\x4f\x8b\xcf\x87\x61\x7f\x92\xc1\xf8\xae\xcd\xda\x6d\x73\xe5\xed\x34\xf3\x72\x2b\x1d\x01\x14\xc0\xff\xf8\x0b\xff\xe2\x33\xbe\x21\x87\x10\xf8\x0f\x62\x4f\xcc\xf1\x37\xc4\x05\xc4\x25\xc4\x1d\xc4\xfd\xa8\x74\x7a\xad\x83\x8c\x3e\x4c\x1a\x8d\x5c\x6b\x72\x19\xc9\xe4\x39\xfe\xc9\xb1\xbb\x0b\x41\x3f\x1c\xe2\x08\x87\x39\x8e\xf2\x3f\xe9\x60\x41\xb9\x8b\x39\xfb\x55\x52\x1c\x40\x8c\x6e\x7d\x41\xb0\xb3\xd2\x13\x8d\xd0\x95\xbf\x2d\xbf\x0a\x9d\xc6\x52\x26\xd7\x9d\xf8\x58\x27\x2b\xbe\xe9\xda\x88\x77\xba\x8a\x38\x33\xeb\x9a\xb6\x2b\x1c\x7f\xc4\xcb\xd5\xfc\xb1\x66\x1a\xa6\x7e\x22\x97\xa6\x7e\xa6\xa5\xc2\x79\xed\x37\x38\x76\x5d\x83\xe3\x1b\x9c\x06\x85\xf4\x2f\x3c\xf3\x9d\x53\xe4\xcb\x15\xa1\x96\x57\x64\xa2\x13\x4a\xa0\x7c\x8b\x65\x90\x65\x34\xde\xd1\xf6\xb5\x8b\x7a\x4d\x36\xe8\x1f\xa4\x7b\x2c\xad\x97\x31\x75\xd6\xdf\xa4\x03\xde\x53\xaa\x1a\xd6\x0f\xb6\x6b\xb1\xec\x5c\x7a\xbf\xb1\xc5\xf3\x18\x28\x7d\xea\x6e\x4b\x1f\xb1\xdf\x64\x8c\x5d\x14\x82\x5d\xee\xb3\x21\xe7\xb9\x6f\x1a\x6a\x7a\x4a\x5a\x07\xad\x89\xe9\x62\x71\xb0\xcf\x7e\xba\x22\x23\x85\x98\x33\x71\xb7\x60\x99\x76\x2a\x67\x0b\x71\x4f\x0a\x43\xca\x55\x48\x84\x7a\xc3\xa7\x37\xab\x8c\xd3\x8a\xcd\xbe\x07\x00\x00\xff\xff\x15\x80\x9c\x6e\x41\x04\x00\x00")

func runtimeSyntaxHaskellMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxHaskellMicro,
		"runtime/syntax/haskell.micro",
	)
}

func runtimeSyntaxHaskellMicro() (*asset, error) {
	bytes, err := runtimeSyntaxHaskellMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/haskell.micro", size: 1089, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxHtmlMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\x8f\x41\x4e\xc3\x40\x0c\x45\xf7\x39\x85\xe5\x20\x04\x5d\xf4\x00\x2d\x85\x6d\x17\xb0\x63\x97\xa6\xd2\x74\xe2\x24\x23\x9c\x99\x74\xec\x96\x16\xf9\xf0\x4c\x91\xca\xea\x49\x5f\xcf\xd6\xff\x75\x0d\x5b\xca\x04\x41\xc0\x81\x8c\x29\x2b\x84\x69\xce\xe9\x4c\x1d\xd0\xc5\x4d\x33\x13\xf4\x29\xc3\xf6\xf3\xe3\x7d\x59\xd5\x75\x25\xd7\xa8\xee\x02\x78\x0b\x10\x70\xb7\x1c\x75\x6a\xb8\x7d\x7b\xc0\xca\x27\x2e\x66\xe8\x28\x6a\xe8\x03\x65\x10\x75\x59\x37\xf8\x82\x40\xb1\xdb\xe0\xeb\x5d\x91\x99\x7c\x70\x0c\xf8\xd8\xec\xd7\x4d\xb3\x92\xd9\x79\x5a\xb5\x6d\xbb\x58\xdf\x15\x9f\x62\xb9\x8e\x0a\x88\xcd\x1e\xdb\x05\xda\xf1\xb8\xb3\xe5\x62\x67\xff\x4f\xd4\x29\x4d\x74\x53\x9e\x1c\xab\x1d\x86\xbf\xdc\x46\x0a\xc3\xa8\x36\x66\xea\x8d\xdd\x81\xd8\x38\xc5\xa1\x23\xf1\x16\xdd\x44\x96\xa2\xe7\xe0\xbf\x0a\xfb\xe4\x4f\x52\xc8\xc9\x75\x05\x53\x3a\x09\x95\xe1\xd9\x24\xfc\x90\x95\x52\xd1\x24\x7b\x13\xbd\x32\x59\x99\x32\x90\x9a\x5e\x67\xb2\xb3\xe3\x13\xd9\x77\xe8\x74\x7c\xde\x60\xf5\x1b\x00\x00\xff\xff\xdb\xde\x89\xe6\x44\x01\x00\x00")

func runtimeSyntaxHtmlMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxHtmlMicro,
		"runtime/syntax/html.micro",
	)
}

func runtimeSyntaxHtmlMicro() (*asset, error) {
	bytes, err := runtimeSyntaxHtmlMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/html.micro", size: 324, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxIniMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x90\xc1\x6e\xea\x30\x10\x45\xd7\xf0\x15\xd6\x3c\x24\x92\xf8\xe1\xee\x69\x69\xd5\x25\x9b\x7e\x40\x6d\x47\x32\xce\x24\x58\x98\x38\xb2\x4d\x29\xad\x3f\xbe\x56\xa0\x2d\x74\x39\x73\x8f\x7c\xae\x27\x9c\xfa\xa8\xde\x09\xac\x5f\xd6\x40\x40\xb0\xc2\xf4\x26\x35\x18\x76\xd1\x0d\xc9\xb6\x36\xb9\x37\xf4\xde\x34\x58\xce\x72\x5e\xec\xcd\x1e\xd5\x30\x04\xc1\xac\x09\x31\x0d\xa6\x6f\x9d\xd7\x29\x60\x3c\x0c\x82\xe9\xb6\x1b\xb1\x23\xa2\xde\xaa\x78\xc7\x68\xde\xb9\xbe\x9d\xc1\x74\x8b\xaa\x41\x4f\xa0\x16\x9c\x3f\x2f\x5e\xd5\xe2\x43\x52\x21\x73\x30\xd5\xce\x3a\x4f\x36\xde\x74\xdb\xa8\x4f\xaa\xcf\x2d\x1e\x8a\xe8\x0f\x98\x5a\x65\x03\x96\xe2\x11\x2e\xcc\x39\xad\x39\x5f\x86\x41\x69\x5c\x4a\x59\xf1\x7a\x25\xab\x15\xdc\x3c\xb2\x57\x1d\xe6\x4f\xfd\x21\x05\x67\xd5\x28\x3c\xa3\x1e\x1b\x02\x7c\x75\x2f\xbf\x17\x27\xb4\xd6\x1d\x09\x40\x21\x04\x4b\xbc\x06\x59\x56\x90\xe6\x97\x69\x9e\xa7\xf9\xad\x66\x63\x95\xde\xe5\x93\xd4\xe9\x4a\x53\xfe\x2b\x78\xfd\x29\x59\x55\x3e\xfd\xa8\xfe\x77\x1e\x31\x17\xbf\xc2\xe8\x6f\x38\x16\x99\x50\x42\x13\xa1\x13\x0a\xd3\xaf\x00\x00\x00\xff\xff\x07\xd4\x0f\xf1\x91\x01\x00\x00")

func runtimeSyntaxIniMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxIniMicro,
		"runtime/syntax/ini.micro",
	)
}

func runtimeSyntaxIniMicro() (*asset, error) {
	bytes, err := runtimeSyntaxIniMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/ini.micro", size: 401, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxInputrcMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8f\x51\x6e\x83\x30\x0c\x86\x9f\xcb\x29\x2c\x0f\x89\xa4\x99\x38\x40\x35\xad\xcf\x3b\x43\x12\xa4\x34\x75\x19\x5a\x96\x54\x21\x68\x43\xcb\xe1\x07\x03\xc4\xd4\x37\xff\xfe\x3f\xdb\xbf\xfb\xd1\x27\xf3\x0d\xf8\xe6\xef\x43\x8a\x16\x01\xbb\xa5\x2a\xb1\x28\x6c\x70\x21\x42\xa4\x2b\x00\xa0\x7a\x61\xe1\x76\xcb\x3e\x78\xe2\xea\x15\x57\xb3\x8d\x44\x7e\x36\x83\xdf\x9b\x97\xd8\xb5\xef\xe9\xe2\x06\x5a\x06\x7b\x4a\x59\x95\x9d\xb7\x6e\xb8\xd2\x8e\x8d\xe4\x5c\xf8\x02\x44\xa6\x54\x9d\x65\x83\x9a\x1f\x31\x57\xab\xaa\x26\x55\x6d\xe8\xa7\x69\x69\x0a\x0a\xf0\xb7\x50\xd5\xe7\xc7\x53\xc6\x7e\x00\xb2\x26\x4b\x79\xea\xef\xc6\xd2\x49\x6b\xfe\xc4\x64\xf3\xa3\xeb\x23\x3f\x97\x1b\xfe\xbc\xe6\xfd\x87\x89\xdd\x9c\x3f\xc5\x83\x00\x91\x41\x1c\x04\x16\xbf\x01\x00\x00\xff\xff\x55\x62\xe2\xa6\x1d\x01\x00\x00")

func runtimeSyntaxInputrcMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxInputrcMicro,
		"runtime/syntax/inputrc.micro",
	)
}

func runtimeSyntaxInputrcMicro() (*asset, error) {
	bytes, err := runtimeSyntaxInputrcMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/inputrc.micro", size: 285, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxJavaMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\x41\xae\xd4\x30\x0c\x86\xf7\x73\x8a\x28\xc3\x02\xba\x98\x9e\xe0\xed\x11\x57\xa0\x20\xb9\xa9\xf3\x6a\x5e\xc6\xa9\x12\xb7\x9d\x22\x1f\x1e\x67\x46\x20\x06\xf4\x56\x8e\x6c\xe7\xf7\xff\x7f\xe7\xb3\xfb\x8c\x05\x1d\x55\x07\xec\xf0\x06\xd7\x25\xa1\x8b\xb9\xb8\x2f\xb0\xc1\xe5\x74\x3e\x9f\xea\xc1\x02\x37\xe7\x5b\xc3\x3b\x3f\x5c\x7e\xd8\xe3\x83\x3f\x85\x9c\x6c\x4d\x8e\x05\xad\x39\x7e\x1c\x73\x4e\x08\xac\xe3\x21\xa8\x61\x86\xa2\x53\x5e\xc7\x84\x1a\x53\x06\x51\x62\xd1\x94\xf9\x55\x19\x77\xad\x73\x2e\xa2\x32\x53\x55\x29\xc0\x95\xd0\xa6\x5b\xa6\xe9\xd3\x30\xfe\x16\xae\x02\x82\x57\x1b\x3c\xd4\x0b\xc2\x9b\x06\xa8\xa6\x0d\x12\x66\x0d\x99\x85\x78\x45\x9d\x30\xc2\x9a\xc4\xae\x29\x26\x1b\x47\x62\x48\xe9\x50\xcb\xa0\x14\xb5\xa0\xac\x85\xb5\xee\xd4\x7e\xc9\x5c\xf2\x6e\x37\x0f\xdd\x67\x4a\xf8\xd7\xb9\x3f\x39\x60\xac\xe6\x29\x88\x86\x04\xb5\x2a\xde\x04\x79\xaa\x0f\x59\xa5\x86\xa7\x99\xaa\xed\xd9\x42\x10\x9b\x51\x0e\x98\x63\x8b\x88\x25\x42\x40\x65\x10\xda\x50\x17\x08\x6f\xf0\x6a\xb5\xd0\x66\x61\xac\x66\xc1\x20\x38\xe9\x62\x64\x28\x68\xcb\x78\x2f\x85\x82\xc4\x45\xeb\xba\x60\x51\x03\x1e\xcc\x27\xd3\x4f\xdb\xbc\x3b\xae\x06\x27\xd9\xea\x93\x63\x23\xd0\x4e\x1b\x1f\xff\xf5\xbb\xff\xd6\xf9\xff\x07\x16\x47\x8a\x31\x8a\xd0\xc8\xf0\x9a\xd2\xd3\xff\xeb\x03\x6f\xdf\x5f\xba\x7f\x9b\x26\x50\xe4\xc5\xf7\x43\xe7\x9d\xe5\x7f\xf1\x43\xd7\xbf\xbf\xf3\xbc\xf5\x2b\x00\x00\xff\xff\x5a\xbf\x89\xe5\x54\x02\x00\x00")

func runtimeSyntaxJavaMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxJavaMicro,
		"runtime/syntax/java.micro",
	)
}

func runtimeSyntaxJavaMicro() (*asset, error) {
	bytes, err := runtimeSyntaxJavaMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/java.micro", size: 596, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxJavascriptMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x93\x4d\x8f\xd3\x3c\x10\x80\xef\xfb\x2b\xf2\x5a\x2f\x34\x49\x95\x66\x39\x21\x2a\x20\x2a\xda\xf6\x80\xa0\x45\x2c\x5c\xb0\xdd\x95\x93\x3a\xad\x17\xd7\xae\x1c\xa7\x1f\x68\xc4\x6f\x67\xd2\x66\xd9\x76\xdb\x45\x8a\x66\x32\xf6\xcc\x33\x1f\xb6\xab\x9d\xf1\x62\x1b\x90\x8f\x62\x2d\x6e\x0b\xa7\x56\x9e\x04\x84\xf5\xee\xab\xff\xc9\xd5\x55\x61\xb5\x75\x41\xae\x6b\x19\x04\xb8\x9a\xd3\xa4\xcb\xb3\x90\xbe\x4a\xde\x70\x7a\x8d\x22\x86\x6b\xd4\xaf\x1b\xbd\x6d\x16\x44\x52\x0e\x92\x11\xef\x46\x21\xad\xbf\x73\xaa\x3f\xf1\x0c\x1a\xd9\x58\x59\x94\xb1\x9c\x3c\x87\x6c\x68\x5d\xd6\x6b\xa9\x07\xd5\x9a\x0d\x6d\x28\xbf\xac\x38\xed\x26\x3c\x6b\x97\x32\x5a\x8e\x1a\xfc\xbf\x81\xe7\x71\x4f\xc3\x9c\x9a\x2f\xfc\x3e\x98\xd0\x41\xf2\x43\x24\xbf\xee\x78\xfb\x83\x01\x77\x3c\xa6\xb4\x5f\xad\x44\x21\xfb\x1c\xff\x43\xfe\x10\x58\x79\xe1\xe5\x52\x1a\xbf\xcf\x19\xe6\x4e\x8a\x9f\x50\x88\x4a\xa2\xf0\xc5\x02\x0a\x6b\xbc\x32\xb5\x84\x99\x2c\x45\xad\x3d\x6a\x2d\x3d\x9a\x16\xa4\x46\xaf\x52\x19\xa1\xf5\x2e\x7a\x1c\xc9\x13\x62\x69\x1d\x94\xb5\x29\xbc\xb2\x06\xe6\xd2\x83\x2a\x41\x19\xfc\xd0\xcf\x14\xd2\x96\x60\xe4\x06\x9c\xf4\xb5\x33\x50\xe1\x7e\xb5\x51\x98\xf8\x79\xe0\x61\x1f\xfc\x42\x55\x28\x9c\xdd\x80\x77\x3b\xf0\xbb\x55\xc3\x5a\x0b\x07\x6b\xab\x66\xb0\x59\x28\x2d\x01\x5d\x8f\x49\xd8\x4c\x93\xb5\x05\x99\x5a\x6b\xa8\x0d\x36\xa6\x8c\x9c\xc1\x58\x8c\x2f\xb9\x36\x9e\xde\xe1\x00\x4a\x81\xfd\x1e\x79\x34\x19\x83\xe0\x70\x56\xe1\xc0\x39\xb1\x83\x0f\xd6\x6a\x29\x0c\xdc\x60\xc1\x30\x34\xf5\x52\x3a\xe1\xb1\xff\xa1\x73\x28\x47\x0f\x53\xf8\x2c\x4e\xaa\x3a\x01\x8d\xeb\x65\x2e\x1d\x4c\xf2\x7b\x59\x78\xf8\x2a\xe7\xc3\xed\x0a\x6e\xbd\x53\x66\x7e\x71\x24\x04\xaf\x49\x1a\xbf\x7b\xfb\xfe\xbf\xdf\x2f\xb2\xfe\x4b\xe0\xe7\xbd\x06\x24\xa5\xd3\x98\x87\x74\x9a\x72\x08\x19\x4b\xa3\x28\xa6\x53\xc6\x78\x4a\xe7\x6a\xc9\xe3\x4b\x11\x8c\xed\xdf\xc3\x5e\x64\x07\x09\x8c\x9d\xbc\x0d\xb4\x69\x5e\x1a\xe7\x3b\x84\x65\x48\x7b\xc4\x2c\x0f\x95\x85\x53\x38\xba\x74\x51\x9a\xf6\xe2\x33\x9f\x94\xc5\xbd\x2e\x8b\xd3\xbf\xb3\xb0\x33\x1b\x90\x6f\x93\x9b\x49\x3f\x3b\x3f\x0a\x82\xd5\xf7\x80\x4e\x09\x8f\x62\x02\x9d\xd6\xea\xa0\xd5\x21\x57\x7f\x02\x00\x00\xff\xff\x05\xbb\x90\xb7\x01\x04\x00\x00")

func runtimeSyntaxJavascriptMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxJavascriptMicro,
		"runtime/syntax/javascript.micro",
	)
}

func runtimeSyntaxJavascriptMicro() (*asset, error) {
	bytes, err := runtimeSyntaxJavascriptMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/javascript.micro", size: 1025, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxJsonMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x90\x4f\x4f\x83\x40\x10\xc5\xcf\xe5\x53\x6c\x26\x4d\xf8\xb3\x82\x35\xf1\x22\x31\x36\x1e\xf4\xe0\x41\x0f\x1e\x77\xb6\xc9\x42\x07\xaa\x59\xc1\x2c\x10\x25\xc5\xef\xee\x2e\x81\xd2\x5e\x36\x79\xf3\xde\xfb\x65\x67\x9a\xbe\x6a\xd5\x2f\x83\x97\xf7\xb7\x57\x60\x80\xc9\x67\x53\x57\x6b\xf0\x0e\xa4\xf6\x64\x18\xec\xf0\x68\x95\x97\xd7\xba\x36\x2c\xd3\x1d\x31\x66\x53\xf7\x22\x96\x5b\x71\x13\xdf\x49\xb1\xb1\x4f\x14\x88\x27\x92\x82\xbb\xa1\xd3\x3c\xdc\xe2\x03\x2c\xc1\x8d\x0c\x30\x39\x73\x26\x5c\xde\xab\x6a\x0c\x55\x9d\xd6\xcb\x38\x33\x1f\xe5\xa1\x1d\x4d\xeb\x05\xad\xe9\x68\x28\x94\x6e\x28\x5c\x32\x3d\x69\x5d\xff\x30\x80\x00\x31\x19\xc4\x0e\x64\x18\xc1\xe0\x4f\xca\xb7\xca\xbf\xc4\xcd\x05\x74\x0d\x98\x1a\x08\x42\xa4\xcd\xb7\xca\x29\x95\x32\x4a\xdd\x8f\x2d\xc2\x9f\x09\x97\xe6\x84\xfb\x52\x25\xd9\x93\x8d\x67\xc0\xce\x2d\xa5\xe2\xe2\x31\x7e\x96\xc7\xdb\xbf\x01\x51\x64\x45\x65\x5a\x1f\xae\x11\xe5\x5c\xb9\x2a\x0d\x91\x5d\xe6\x8c\xc7\xd7\x27\xd3\xd0\x9e\xc1\x8a\x33\x3e\x30\xbe\xe2\xe0\xfd\x07\x00\x00\xff\xff\x64\x76\xdd\xc1\x92\x01\x00\x00")

func runtimeSyntaxJsonMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxJsonMicro,
		"runtime/syntax/json.micro",
	)
}

func runtimeSyntaxJsonMicro() (*asset, error) {
	bytes, err := runtimeSyntaxJsonMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/json.micro", size: 402, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxKeymapMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8d\xdb\x6a\x83\x40\x10\x86\xaf\xe3\x53\x4c\x87\x80\x9a\x6d\xa5\xb7\x0d\x3d\x3c\x40\x5f\xa0\xa0\x06\x36\xeb\xd4\x88\xab\x23\xbb\xdb\xc3\xc2\x3c\x7c\x55\x9a\xa6\x90\xab\x7f\x3e\xfe\xc3\xf8\x38\x06\xfd\x0d\xf8\x4a\x71\xd0\x13\x02\x56\x45\xd6\x4b\x4f\x31\x7f\x99\x79\x2b\x6f\x03\x37\xcb\x81\x49\x62\xd8\xb2\x03\x13\xf5\x08\x73\xec\x31\xd3\x4d\x23\xc6\x92\x76\x62\x78\x98\xd8\xd3\x52\x33\xdc\xac\x3a\x77\xfc\xa2\x3e\x0e\xe2\x68\xe0\x4f\x12\x1f\x5c\x37\xb6\x79\xf5\x8c\x57\x53\x86\xc7\xe0\xd8\x8a\xb6\x41\xfc\xa9\x7b\x0f\xff\x52\x47\xfb\x41\xb0\xc6\xca\xfb\xbb\x87\x5a\x5d\x1c\x47\x0d\xe0\xd3\x99\x22\x59\xcb\x5f\x80\x98\x55\x55\x21\xe5\x01\xeb\x7c\x87\x92\xfe\x52\x3a\x53\xfa\x37\xe9\xba\xf6\x14\x8e\x56\x9b\x7e\x1e\x3e\xdc\x14\xbb\xed\xd9\xba\x6d\x1d\xd1\x08\x58\x96\x7b\x3f\x69\x43\xfb\xba\x56\x17\x73\xfd\xb8\x51\xa0\x04\xd4\x46\x61\xf2\x13\x00\x00\xff\xff\xcd\x26\x99\xab\x3e\x01\x00\x00")

func runtimeSyntaxKeymapMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxKeymapMicro,
		"runtime/syntax/keymap.micro",
	)
}

func runtimeSyntaxKeymapMicro() (*asset, error) {
	bytes, err := runtimeSyntaxKeymapMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/keymap.micro", size: 318, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxKickstartMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x51\xc1\x6e\xdb\x30\x0c\x3d\xb7\x5f\x21\xb8\x19\x60\xc7\x73\xb1\xeb\x0a\xac\xeb\xce\xbb\x0c\xd8\x6d\x8e\x03\x30\x32\xeb\x08\x91\x45\x83\x92\x9b\xa4\xe3\xc7\x8f\x4a\xba\xb5\x0d\xe6\x83\x64\x3c\x3e\xbe\x27\x3e\xc6\x63\x48\x70\x30\xc5\x77\x67\x77\x3f\x13\x70\x2a\x4c\xb1\xba\xdd\xc5\xc5\xf9\x56\x34\x66\x74\x51\x5c\x5f\x5b\xf2\xc4\x66\xc3\x6e\xd8\xa6\x11\x06\xd4\x46\x63\x8a\x0f\x2d\x34\xcf\x5d\x5d\xbc\x94\xed\x11\x82\xa2\xeb\xb6\xbd\x8b\x13\x58\xbc\xeb\xba\x65\xe9\x82\x8a\x78\x2f\xb6\x67\x1a\x25\xe1\x21\xc9\xc0\x30\x6d\x9d\x05\x2f\x4f\xe4\x07\xa6\x79\x12\x4f\x83\xfe\x0b\xe3\x86\x28\x49\x72\x23\x3e\x53\x40\xf1\x10\x06\xd9\xe1\x71\x43\xc0\xbd\xc0\x9c\xb6\x96\xc2\xa3\x1b\xe4\xd1\x71\x4c\x27\x2e\xeb\x31\xed\x65\x8e\xc8\x19\xc5\x7d\x36\x8b\xe8\x5d\x98\x0f\xaa\x37\x91\x4c\x3a\xc3\xe9\x70\xc9\x51\x10\xeb\x11\xf8\x84\xe5\x7e\x4f\xd0\x23\x57\x17\x23\x34\x4d\x19\x60\x44\x19\x1d\x33\xb1\x77\x51\xc9\x10\x71\x66\x2f\x73\xb2\x55\xf9\x45\x56\xf7\xff\x7a\xce\xa9\x1c\xd1\x7b\xda\x6b\x70\x8b\x92\x51\x2d\x22\x3e\xe9\x8b\x72\x17\xb0\xdd\x56\xab\x7b\x4d\xf1\xc6\xfc\x00\xbb\xd3\xf8\xa2\x81\xd0\x9b\xd3\xe8\xf1\x9d\xca\xc6\x2b\x41\x23\x7c\x68\xbf\x35\xbf\x72\xb8\x2f\x77\xd3\x2d\xdf\xdb\x31\xf6\x26\x67\xdd\x3c\xe4\x1d\x28\xe9\x53\xf3\x79\xd9\xbc\xee\xe2\x5c\x3f\x7f\xca\xba\x24\xfd\xcf\xb4\x5c\xcb\x9b\xcd\x55\x37\x65\xbb\xfe\xdd\xdd\x2e\xab\xaf\x8b\xbf\xa2\x1f\x07\x46\x0c\xa6\x78\x43\xab\x5f\x8b\xd9\xb2\xb8\xaa\x4d\x2d\xa6\xbe\x52\x8f\x3f\x01\x00\x00\xff\xff\x59\xb2\x0a\xf7\x5f\x02\x00\x00")

func runtimeSyntaxKickstartMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxKickstartMicro,
		"runtime/syntax/kickstart.micro",
	)
}

func runtimeSyntaxKickstartMicro() (*asset, error) {
	bytes, err := runtimeSyntaxKickstartMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/kickstart.micro", size: 607, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxLedgerMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x8f\xc1\x4e\xc4\x20\x14\x45\xf7\xf3\x15\x6f\x5e\x5c\x40\x0d\x33\xc6\xb8\xb1\x66\xd2\xb8\xf7\x0b\xa4\xd4\x50\xfa\x52\x8d\x48\x0d\xd3\x89\x56\x71\xbe\xdd\x16\x63\xa4\xdd\x98\xcc\x8e\xc3\xcd\x3d\x17\xf6\x83\xeb\xf5\x3b\xe0\x1d\x35\x2d\x79\x04\x64\x55\x28\x37\x61\xcb\x6d\xbc\x08\xb6\x69\x7d\xa8\x49\x3b\xd3\x1d\x5c\x1f\x6a\x67\xfa\x33\x5c\xad\x4c\x67\x3b\x0f\xb5\x7f\x6a\x1f\xfb\x17\xdd\xd2\x28\x01\xc0\x8a\xc9\x0b\x71\xad\x3e\xaf\xbe\xd8\x36\x08\xfe\x03\x97\x73\x08\x72\x77\x54\x1c\x36\x19\xfe\x4a\xec\x81\x60\x2a\xff\xdf\xc5\xd9\xee\x40\xd6\x76\x6f\x63\xf1\x98\xda\x62\x14\x9d\x58\xed\x92\xc0\x0c\xda\xc5\x15\x99\xef\x5f\xb5\xa1\x5c\xa9\x73\xb6\x4e\x89\x17\x25\x2b\xe4\xad\xb8\xd7\xe2\x03\xc6\x30\xff\x3b\xf3\xac\xe4\xc5\x69\xa6\x07\x91\xa8\x26\x98\xb9\x3c\x35\x80\x32\x5b\xab\xe5\xfb\xb5\x79\x5e\x6c\x64\x37\xd3\x67\xbe\x03\x00\x00\xff\xff\xf4\x73\x22\x9a\xb0\x01\x00\x00")

func runtimeSyntaxLedgerMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxLedgerMicro,
		"runtime/syntax/ledger.micro",
	)
}

func runtimeSyntaxLedgerMicro() (*asset, error) {
	bytes, err := runtimeSyntaxLedgerMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/ledger.micro", size: 432, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxLispMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x90\xcb\x4e\xc3\x30\x10\x45\xd7\xed\x57\x58\x56\xa5\x3a\x35\x09\x6c\x29\x69\x2a\xf6\x2c\x59\xe1\xb8\xc8\x35\xa3\x60\xe1\x3c\x14\x07\x41\xaa\xf9\x78\x26\x56\x03\x11\xab\x28\xf7\x9c\x79\x39\x8c\xcd\x60\xbe\x19\x7f\x72\xa1\xe3\x8c\x0b\xa8\x8d\x0d\x78\x71\x1e\x92\x0d\xfd\x97\x99\x00\x8f\xde\x1d\x43\x87\xc1\xd6\x18\x02\xc5\xeb\xb5\x6d\x7d\xdb\xb3\x73\xef\xaa\xf7\xe1\xec\x3f\x81\x44\xa1\x4c\x7a\x49\xb5\xe4\x57\xd8\xc3\xdb\x94\x0a\x95\xca\xdd\x6d\x5e\x68\xcc\x0f\x58\x1c\x12\xdc\xce\x42\xac\x63\xe4\xe4\xea\x2e\xbd\xd7\xb2\x2c\x88\x8c\xa6\x61\xc2\x25\x53\xda\x38\x1f\xa3\xc5\xa8\x88\x63\xc5\xf0\xac\xff\xe0\x08\xde\xb7\x5f\xb1\x17\x17\x65\x99\xa1\x3a\x71\x9d\xec\x4a\x3e\x0b\xb5\xa9\x80\xce\x9c\x8c\xad\x7a\x4c\x5f\x68\x53\x7d\xfd\xd2\xe8\xd7\xc5\xd6\x0b\x93\x1a\x1d\xf9\xbf\x4b\x8d\xfd\x20\x22\x4e\xa8\xd4\x3e\x74\xc6\xc2\x5e\xeb\xe4\x21\xdb\xcd\xde\x4d\xd5\x03\x34\x8c\x2f\xb0\xdc\xfc\xc2\xf8\x24\x2b\xc9\x24\x32\xb9\xa2\x91\x3f\x01\x00\x00\xff\xff\xf7\x49\x95\xeb\x7c\x01\x00\x00")

func runtimeSyntaxLispMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxLispMicro,
		"runtime/syntax/lisp.micro",
	)
}

func runtimeSyntaxLispMicro() (*asset, error) {
	bytes, err := runtimeSyntaxLispMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/lisp.micro", size: 380, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxLuaMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xdf\x73\xd4\x36\x10\x7e\xcf\x5f\x21\x0e\x32\xc9\x05\x72\x0d\xe9\x4c\x69\x33\x84\x19\xa6\x03\x4c\x29\x84\x16\x66\xe8\x43\x74\x30\xb2\x2d\xdb\x2a\xb2\x64\x24\x39\x77\xd7\x6e\xfb\xb7\xf7\x5b\xf9\x2e\x1c\x90\xeb\x13\xc9\x59\xbf\x2c\x7d\xbb\xfb\xed\x6a\xd7\xb7\xbf\xe9\xdf\x1e\xfe\xc5\x8b\x41\x89\xb8\x72\x49\x2d\x45\x6b\x9a\xd6\xe2\x49\xc6\x35\xa2\xf6\x41\x5c\x28\xe7\x67\x79\xd7\xe3\x21\xb5\x3e\x9c\x09\xf1\x52\xa5\xd4\xea\x85\xf8\xc3\xd8\x4a\x3c\xec\x16\xe8\xee\x8b\x43\x95\xa6\xa2\xe9\x94\xb1\xb3\xd2\x77\x8f\x18\xd5\x94\xda\x45\x7d\x26\x9e\xfd\xf6\x42\x9c\x0a\x01\x30\xab\x92\x0e\x19\xec\xad\x0e\xd1\x78\x77\x26\x4e\x4f\x4e\x1e\x1c\x9f\xfc\x80\x5f\x5e\xbf\xf0\x49\xc7\x33\xf1\x2a\x98\xc6\x38\x65\xed\x4a\x14\x2a\xea\x4a\x78\x27\x5e\x0f\xc5\x6a\xa3\x66\x28\x05\x26\xcf\x7d\xd4\xb5\x38\x78\x3e\xf4\xfd\x81\x78\x53\xb6\x43\x93\xf6\xbe\x31\x3d\x7b\xa3\xe1\xbe\x53\xc9\x94\x59\x9f\x21\xea\x4c\xcc\xc1\xcc\x0e\xea\x40\xd4\xc6\xea\xb8\xb7\x56\x6b\x02\x26\x27\x62\x32\x3b\x92\xfc\xf2\xce\x84\x4f\xbf\xea\x75\x50\xc9\x87\xb8\x57\x7a\x8b\x73\x31\x81\x84\x4e\xbb\x24\x26\x67\x24\x8f\xe4\x11\x1a\xfa\x8e\xf6\x49\xde\xa5\x63\x92\xef\xe8\x11\x3d\x3a\xa7\x87\xf4\xf0\x9c\xfe\x3d\xa7\x73\x92\x33\x39\x23\x59\x1c\x3a\x9f\x48\xb9\x8a\x7c\x98\xca\x22\x23\xbf\xd9\x20\xdd\x00\x8d\x03\x95\x27\x8d\xfd\x8b\x16\x1a\x52\xd0\xbd\x56\x89\x06\x97\x8c\x25\x53\x93\xb6\x51\xa3\x83\x1f\x5d\x1e\x13\x4c\x22\xe3\xa8\x1e\x5c\x99\xe0\x18\xb2\x1e\xe6\xe2\x58\x1a\x82\xdb\x08\xfc\x55\xaf\x16\x3e\x54\x3b\xc4\xe9\x62\x68\x28\xa6\x80\xc8\x21\xd0\xd5\x52\x52\x05\x24\x1b\x4f\xa5\x0f\x7e\x40\x44\x69\xf2\x91\x86\x54\xff\x48\x85\x49\xdf\x9f\x02\x56\xce\x26\x37\x82\xbd\x7f\x72\xf1\x96\xde\x3f\xa3\xf7\x6f\x9f\xbc\x7e\xf3\xcb\xab\x0b\x52\x31\xea\x90\x80\x64\xad\x2e\x53\xa3\x42\xa1\x1a\x4d\x95\x67\xfa\x49\x87\x00\xed\x1b\x9d\x6a\xed\xae\xb8\xef\x34\xd0\x46\xe9\xbd\x32\x21\xc2\x1a\x55\xe5\x26\xef\xef\x7c\x35\xa0\x73\x7a\x99\x68\x7c\xdf\xb3\x6f\xa9\x87\xee\x89\x82\x5a\xe8\x8f\x03\x1b\xaf\x16\xc0\xe2\xce\x82\x25\x74\x91\x67\x78\x67\x82\xa6\xa8\x59\x11\x74\xa3\xd0\xb8\x2d\x34\x79\x37\x74\x85\x0e\x18\xac\xf9\x48\xab\x5e\x83\xfc\x5e\x95\x1f\x68\x99\x85\x4d\x65\x3c\x92\x87\x1b\x3f\xba\x4a\x85\x4a\x58\x53\x04\x15\x56\x6b\x46\x4c\x05\x36\x4c\x6d\x74\x10\x13\xe3\x11\x06\xc5\x61\x69\x3d\xbb\xca\x0e\xb1\x85\xb3\xfa\x21\x91\x05\xab\x91\x7c\x0f\x05\x41\x31\xaf\xf4\x79\x12\x34\x0c\x4e\x5d\x9f\xed\xcd\xd2\x17\xc1\x24\x9d\x3d\xf9\x35\x3c\xbb\x2b\x0b\x50\x45\x24\x55\xc2\x4b\x2a\x22\x18\x60\x8e\x3b\xcd\x2d\x95\x1a\x71\x83\x17\x2d\x37\x54\xe9\x86\xf4\xb2\x87\x26\x1e\xc4\xd7\xe0\x93\xea\xc0\x0b\xb8\x82\x9a\x6c\xc5\x43\xeb\x9b\xfb\x27\xdc\x22\x18\x96\xfc\x80\x5b\xdd\x80\x94\x0e\xc8\x78\xae\xa7\xbe\xaa\xa9\x37\xd0\x7b\x01\x8e\x2b\x3c\xae\xf2\xdd\xba\x8b\x5a\x57\x04\x55\x5a\x8a\x1f\xe1\x7e\xd6\x24\xf9\xcd\xc9\x91\x54\x9b\x76\x18\xe5\xe3\x86\x33\x90\x5e\x21\xba\xa8\x32\x75\x9d\x4c\x87\x80\x59\xea\x72\x48\xdc\x9b\xc4\xf1\xc2\x1e\x0c\xba\xf3\x57\x7c\x51\x9c\xea\xd8\xbd\x29\xdf\x00\x90\xc7\x07\xc0\x24\x2f\xef\x90\xc4\x6e\x45\x38\x8e\xe2\xbc\xab\x4d\x43\x65\xcf\x37\x80\x23\x4e\x8f\x81\x07\xdf\x52\x5e\xeb\x83\xce\xd1\x08\xd3\x38\xe6\xa2\x56\xa1\x6c\x91\x0d\xd7\x23\xde\xb3\x43\xcc\x18\x4b\x59\x4a\xb1\x82\xf6\x65\xab\x02\x55\x43\x07\x3f\x18\x5c\x74\xdc\x60\xf8\x91\x90\x83\x53\xd9\x52\x13\x87\x82\x38\x6e\xad\x5f\x30\xcb\x79\x31\xc7\x1f\x37\xd1\xfc\x95\x73\x02\x9e\x2b\xc8\x86\xbd\xd8\xbd\x8e\x4f\x64\x53\x1d\x76\xa8\x90\xe3\x7b\x63\x67\x09\x69\xc6\xe5\x7b\x09\xf7\xc2\xa9\xcc\x5f\x86\x58\x73\x19\x7d\x48\x6b\xd4\x1d\x78\x9c\x0c\x46\x38\xb6\x85\x1b\xd8\x8f\x1a\x81\x80\xf3\x15\x02\x9b\xdb\x9e\x1d\x9e\x4d\xf1\x75\x0d\xbf\xec\x80\xba\x4e\x32\x23\x1e\x2e\x00\x28\x32\x71\x65\xb4\xad\xf2\xad\x0c\x3a\x0e\x70\x65\x18\x9c\xe3\x2b\xc9\x09\x67\x88\xb8\x16\xaa\xa7\xbc\x69\x07\x6e\xce\x6b\x19\x73\xcc\x70\x5b\x69\xa6\xf5\xfe\x03\xf7\xc6\xd5\x9e\xfb\x31\x67\x7e\x96\x7f\x30\x09\xba\x31\x70\xdd\x8a\xc7\x43\x7f\xa5\xec\x90\x97\x51\x47\xc2\x38\xd9\xca\x21\x19\x71\x13\x7b\x9f\x27\x95\xf8\xe9\x74\xdc\x3e\x9d\x82\x2a\x75\x31\x3a\x2e\xaf\x98\x6a\x33\xfa\x13\xcc\xed\xb0\x2a\x27\xe0\xf1\xca\x87\xd8\x9a\x3a\x51\xc1\xc5\xa5\xe0\x2a\x53\xe0\x4e\x17\x28\xc3\x18\x2d\x31\x44\x96\x84\x08\xce\x7c\xbd\x85\x28\xb2\xc1\x73\xae\x26\x3b\x9e\x0b\xeb\xe9\x08\xb3\x29\x15\x4f\x91\x77\x44\x0b\x48\x74\x1d\xdb\x75\x5d\x35\xb6\xb5\x90\x67\x5f\x24\xb5\x31\x9d\xe5\xe4\x85\xfb\x91\xa9\xb8\x2a\x86\x7a\x2b\x79\x01\xbb\x56\x28\x58\xf7\x84\x33\xf6\x9e\x48\x61\xd0\x6b\x60\x44\x24\x7c\xba\x2e\x20\x79\x0f\x61\x0b\xf1\x8e\xcd\xc9\x27\x4b\x8e\x2d\x65\xd7\x55\xfb\xab\xca\x73\x98\xcb\x66\x3d\x16\xcc\x31\xcf\x1b\x57\xda\xa1\xd2\x53\xda\xff\x48\xfb\xb7\x68\xff\x77\xda\x0f\xb4\xbf\xdc\x20\x5e\xe4\x44\x1f\x6f\x52\xe1\xf2\xe4\xf8\xa7\xf9\xdd\xeb\x62\xbd\xea\x0a\x6f\x6f\x94\x79\x48\x72\x4a\xf2\x92\xe4\x9c\xe4\xdf\x24\xff\x99\xae\xab\x02\xdf\xf6\x1b\x90\x71\x02\x5f\x04\x97\xef\xa4\x94\x93\xf9\xf4\x48\x4e\xe8\xe0\x7a\xe5\x00\x0b\x07\xf9\xf8\x4b\x24\x46\xc3\x74\x8a\x78\x33\x10\xda\x90\xce\x27\x5c\x86\x2e\xe5\xe5\x44\xe0\x5b\x01\xb3\xb9\x9c\x8f\x4c\xc5\x52\xf5\x9f\x28\xea\x75\x69\x40\xdb\x44\x4a\x58\xf5\x60\xfe\xa9\x21\x29\x97\x6c\xa8\x3a\xae\x1f\x1f\x3f\x9d\x6f\x0d\xf1\xe6\x52\x15\xba\x76\x21\xce\x09\x0a\x96\x58\xf8\x19\x1f\x38\xf2\xe5\xd8\xf0\x6c\x3a\x1b\x4d\x6d\x11\xc0\xae\xb9\xd6\xb0\x1b\x99\x79\x77\xfb\xd6\xec\x68\xdc\x60\xba\x1e\x81\x54\x04\xfe\x32\x2d\x2c\x27\xb0\x2f\x37\xcb\x63\x79\x3c\x3b\xba\xf3\x85\xed\xff\x73\x62\xcb\x7e\x1c\xbd\x91\x86\xff\x02\x00\x00\xff\xff\x04\x80\x5b\x10\x6b\x0b\x00\x00")

func runtimeSyntaxLuaMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxLuaMicro,
		"runtime/syntax/lua.micro",
	)
}

func runtimeSyntaxLuaMicro() (*asset, error) {
	bytes, err := runtimeSyntaxLuaMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/lua.micro", size: 2923, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxMakefileMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\x41\x4f\xe3\x3c\x10\x3d\xc3\xaf\xf0\xe7\x06\x48\x1a\xe8\x77\xaf\xe8\x86\xc3\x6a\x6f\x9c\xf6\x68\x3b\x92\x1b\x4f\x1a\x2f\xae\xdd\xb5\xdd\x16\xc4\xf0\xdf\x77\x52\x0a\x0b\x2b\x90\x48\x24\x67\xc6\x9a\xf7\xf2\xde\x8b\x93\x1e\x7c\xd6\xf7\x8c\xdf\xea\x3b\xe8\xad\x03\xce\x78\x29\x6e\xd7\xea\xd8\xa2\x9c\xad\x75\x73\x57\x15\xfc\x74\x00\x6d\x20\x32\xde\x4e\xfe\x9b\x4d\xff\x2f\xc1\xef\x58\x5d\x35\x62\xb9\x52\xcd\x9a\xa6\x4b\x86\x45\xc5\x4f\x4f\xbb\xe0\x42\x64\xdd\x83\xf6\x8c\x71\x79\x5d\xda\x1e\x7e\xa3\xed\x0d\xf4\xb4\xfa\x43\xed\xc7\x06\x5c\x02\x04\x6f\x6c\x5f\xc9\x6f\xfc\x3d\xac\x2d\xe1\x7e\x13\x62\x46\xeb\x3b\xb7\x35\x80\x61\x07\x31\x5a\x03\x6f\x46\x97\xd1\xae\x86\xbc\xd6\x2b\x20\x03\x23\x46\xb4\xf3\xc5\x89\xaa\xe7\x2f\x03\x11\x0c\xe3\x62\x71\x79\xa6\xc8\x93\xac\x17\x28\x9b\x05\xce\x17\x78\x7e\x8e\x92\xee\xf7\x3c\x4b\xb7\x05\x9a\x2a\x64\x59\xea\x65\xda\xe8\x3c\xa0\x36\x66\x13\x29\x84\xfb\xb1\x4a\xdb\xfe\x50\x79\x83\x4b\x9d\xc0\xeb\x35\x60\xa7\x9d\x43\x63\x63\x25\xc4\x9c\x20\x1d\xcc\x95\xfa\x94\x95\xf4\x87\x88\xb0\xd3\x0e\x29\xd7\x0c\xf1\xf8\xb8\x0a\xdb\x4c\xa5\x37\x29\x47\xeb\x57\x54\xc6\x94\xf7\x21\x9a\x2f\xb1\xf6\x4e\xef\x88\xb6\x0f\x11\x74\x37\x50\xb4\x94\x58\x1f\xf0\x57\xb0\x1e\x9d\x7e\x26\x42\x1f\x32\xa9\xc4\xf0\x35\xa1\x81\x36\x08\x4d\x11\xa4\xed\x32\x65\x24\x66\x77\xc8\x23\x0d\x40\x7e\xd3\xf8\x59\x46\xad\x1b\x7c\xce\xe4\x4b\xa4\x64\x7b\x0b\xb8\xd7\xd1\x8f\x1e\xf7\xd6\x99\x4e\x93\xb2\x83\xbc\x71\x71\x96\xde\x34\x16\xe9\x43\x3a\xa7\xbb\x3b\x46\x17\x17\x65\x55\xbc\x6e\x3f\x90\x9e\xb0\x67\x9c\x97\x52\xce\x50\xb4\x5c\x55\x53\x8e\x17\xc7\xee\x82\xba\x8b\xf7\x82\x5e\x00\xb2\xa8\x4b\xf9\x28\xda\x27\xa6\x6a\xf9\x84\xb2\x14\x6d\x35\x96\x55\xf5\xd9\xbc\xb8\x69\xaf\xa7\xcd\x19\xd6\x0a\x47\x3f\xc7\xb6\xbe\x52\xe2\xfb\x0f\x25\x5f\x61\xaf\xa7\xf1\x60\xbb\x40\x52\xd2\xfc\x9b\xc9\x68\x85\x97\x2d\xbe\xf1\x59\x4d\x48\xc1\xa3\x9a\x4d\xab\xa6\xf8\x68\x9c\x0e\xf7\xc9\xcd\x64\x36\xa5\xbf\x6b\xc2\x7e\x0e\x24\x29\x47\x6d\x1d\x45\xc9\xf6\x83\xcd\x70\xe0\x39\xe2\x2e\x57\x11\xc0\x53\x52\x7f\xe9\x6b\x22\xfd\x13\x00\x00\xff\xff\x65\xba\xe3\x3c\xe7\x03\x00\x00")

func runtimeSyntaxMakefileMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxMakefileMicro,
		"runtime/syntax/makefile.micro",
	)
}

func runtimeSyntaxMakefileMicro() (*asset, error) {
	bytes, err := runtimeSyntaxMakefileMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/makefile.micro", size: 999, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxManMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\xcc\x3f\xcb\x83\x30\x10\xc7\xf1\xdd\x57\x71\x24\xcf\xf0\x58\xa8\xd0\xb1\x93\x20\x16\x74\x28\x04\x75\x53\x87\xd8\x9e\x7f\x20\x46\x89\x16\x15\xf2\xe2\x1b\x85\x16\xb4\x70\xdb\xf7\x73\x3f\x4a\x21\x40\x85\xd0\x0c\xc0\x25\xe0\xcc\xdb\x5e\x20\x94\x9d\x82\x96\xcb\x9e\x57\x38\x38\x16\xa5\xd6\xb0\xc8\x91\xcf\x40\xee\x5c\x12\x20\x99\x93\x5e\xce\xd7\x7c\x76\xff\x88\xf5\xe8\x84\xc1\x95\x42\x94\x6b\xf8\x8f\x75\x62\x07\xce\xe9\x5b\x0a\xd5\x54\xf5\x78\xe8\xdb\x46\xc2\xf6\x46\xe1\x73\x13\x5e\xe4\xea\x30\x65\x51\xee\xda\x3f\x3b\x85\x78\xe1\x01\x69\xc6\xec\x3d\x9a\xea\x66\x5c\x55\x56\xa6\x5e\x68\xc8\xa7\x2e\x28\x44\x37\x6d\xef\x85\xd2\x7e\xac\x23\x73\x37\xcd\x7c\xf3\xff\x0e\x00\x00\xff\xff\x4f\x40\xda\x5d\x08\x01\x00\x00")

func runtimeSyntaxManMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxManMicro,
		"runtime/syntax/man.micro",
	)
}

func runtimeSyntaxManMicro() (*asset, error) {
	bytes, err := runtimeSyntaxManMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/man.micro", size: 264, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxMarkdownMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\xc1\x6f\xd3\x30\x14\xc6\xef\xfd\x2b\x1e\xde\x0e\x89\x43\x3a\x10\x08\x89\x4a\xdd\x0e\x08\x71\xda\x05\x76\xb3\x9d\x34\x4d\x4c\x63\x35\xb1\x83\xed\x88\x8d\xba\xfd\xdb\x71\x9c\xb4\xac\x74\x42\x1c\x1c\x29\xcf\xdf\xf7\xcb\xcb\xf7\x9e\x79\x92\xb6\x78\x04\x74\x5f\xe8\x6d\xa5\x7e\x4a\x04\x88\xce\xa3\xb6\x72\xed\x36\x1c\xe9\xda\xe9\x26\xbe\x46\xb3\xd9\x15\x3c\x14\xeb\x86\x1b\x88\xbe\x08\x5b\xf7\x6b\xe0\x8f\x96\x4b\x23\x94\x8c\x67\xa5\x6a\x94\x06\xfb\xd4\x71\x40\x73\x4c\x60\xc1\xa8\x1b\x9e\x73\x1c\x8c\x3f\x7a\x65\xb9\x99\x54\xc6\x16\x96\xb7\x5c\x5a\x00\x94\xdd\x4e\x8a\xcf\x6d\x57\x17\x46\x98\x33\x52\x94\x39\x42\x16\xa6\x2b\x4a\xbe\x60\x2c\x8e\x72\x92\x01\x23\x59\xce\x70\xee\x28\x1e\x5f\x30\xc3\x14\xc7\x81\xf1\xcd\x6a\x25\x37\xc0\xff\x0b\xf5\x8c\x35\xc0\xce\x70\x47\xa0\xb1\x5a\x6c\x79\x6a\x6b\xad\xfa\x4d\xfd\x2f\xde\xe1\x30\xda\x0f\x0c\x1f\x0e\xc1\x5b\x2b\x2d\x7e\x29\x1f\x70\x03\xba\x6f\xfe\xfc\x7c\xc7\x4b\xe1\x6b\x28\x8b\xd2\x34\x4d\xdc\x72\xb9\x4c\x5c\x9e\xe7\x49\xe8\x81\xe2\x24\xa6\x06\x8f\x69\xd7\xbc\xa8\x1a\x21\x2f\xac\xde\x7b\xb5\x7b\xfb\xfa\xc3\x7e\x8a\xae\x11\xc6\x1e\x35\xa2\xf2\xb9\x8a\xef\x82\x6b\x18\x74\xcf\x5a\xc4\xc4\xc3\x53\x06\xee\xbc\xf8\x26\xfd\xc8\x12\x3a\x87\x40\x6a\x85\x29\x27\x50\xa7\x79\xa7\x55\x39\x50\x68\x14\x91\x4f\xe5\x57\xcd\x1c\x79\xb0\x8c\xdc\xb7\x2c\xa6\x71\xd8\x95\xdd\xbb\x3d\xba\x88\x82\xa6\x34\x8d\xae\xcf\x4a\x53\x9b\x72\x7b\x6c\xb3\x54\xd2\x6f\x81\xdf\x00\x44\x09\xc9\x98\xef\x80\xa1\x17\xae\x22\x7f\x47\x98\x1b\x35\x98\xb2\xd8\x1f\xea\x8b\xb1\x37\x8c\x50\xd1\x16\x9b\x53\x40\xbd\xac\xb8\x1e\x12\xab\x00\xbd\x0a\x26\x32\xb8\xa2\x93\xc5\x9d\xbe\x36\xba\x7b\xdd\xbc\xe4\xad\xad\xed\xcc\xdd\xe2\xe6\xc6\xcf\x34\xbe\x65\x49\xd0\x96\xaa\xe2\x7f\x0f\x02\xd0\x6a\x8e\xef\x56\x2e\x83\xdd\xfb\x3d\xc9\xd2\x04\x87\x85\x1f\xc5\xb0\x6e\x54\xb9\xbd\x9c\xfb\x6a\xb5\x1a\xe6\xfb\x3b\x00\x00\xff\xff\x76\xef\x58\xfa\x7d\x03\x00\x00")

func runtimeSyntaxMarkdownMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxMarkdownMicro,
		"runtime/syntax/markdown.micro",
	)
}

func runtimeSyntaxMarkdownMicro() (*asset, error) {
	bytes, err := runtimeSyntaxMarkdownMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/markdown.micro", size: 893, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxMpdconfMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8f\xcf\x6a\xe3\x30\x10\x87\xcf\xc9\x53\x88\xd9\x40\xe4\x78\xc9\x03\x84\x65\xf7\xb2\xd7\x42\xef\x96\x6d\x64\x69\xe2\x88\xc8\x92\xd0\x1f\x5a\x93\xe9\xbb\x57\x85\x86\xa6\xbd\x08\xfd\x98\x6f\xbe\x99\x49\xab\xcb\xf2\x95\xc1\xd3\xf3\x7f\x60\xb0\x04\x2d\x8e\xca\xbb\xf3\x0e\xb6\x5b\xe5\xad\x8f\x4c\xad\xd2\x31\x10\x7f\x78\x49\x18\x69\x8e\xbe\x04\x9a\x8c\xd3\x63\xf6\xa3\xd4\x3a\x62\x4a\x74\xf1\x29\x53\xf0\xb1\x3e\xb6\xcc\xc6\x91\x93\x0b\x52\x5e\x03\x36\xe2\x2f\xfc\x14\xf1\xa5\x24\xa3\x2a\x2a\x57\x6b\x52\x6e\x46\x6d\x22\xaa\xec\xe3\x4a\x5c\x4f\x64\xfd\x4c\x29\xcb\x8c\x14\x8c\xae\x3f\xa3\xae\x18\x9b\xf1\x6c\xec\xa3\x6d\x8a\x66\xbe\xe4\x45\xce\x58\xf7\x67\x30\x70\xe3\x42\xc9\x24\x8b\x36\x7e\xf4\x25\x7f\x04\x8d\xca\xeb\xda\xdb\x75\xa7\x14\xa4\xc2\x53\xdf\x1f\xc4\x8d\xc4\xdb\x5d\xb2\xa2\xb5\xfe\x85\x01\x70\x21\x8e\xd4\x0d\xd0\x37\x07\xa0\xfd\x67\xda\xd7\xb4\xff\x3e\x6f\xb2\x52\x5d\x19\xf0\x81\x1e\x9c\xcd\x2f\xde\x0d\xb7\xfe\x78\x68\xfe\xed\xee\xf8\xef\x39\x22\xd6\x73\x1f\xb0\xf6\xab\x18\x51\x33\xd8\xb4\xac\x25\xd6\x6e\x5a\xd8\xbe\x07\x00\x00\xff\xff\x34\xd5\x49\xc9\x85\x01\x00\x00")

func runtimeSyntaxMpdconfMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxMpdconfMicro,
		"runtime/syntax/mpdconf.micro",
	)
}

func runtimeSyntaxMpdconfMicro() (*asset, error) {
	bytes, err := runtimeSyntaxMpdconfMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/mpdconf.micro", size: 389, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxNanorcMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x53\xc1\x8e\xdb\x38\x0c\xbd\xfb\x2b\x04\x67\x0f\xf6\xec\x22\x1f\x30\xd8\xdd\x1c\x7a\x29\x50\xa0\x28\xd0\xe3\x64\x06\x90\x65\x26\x16\x22\x4b\x1a\x92\x1a\x27\x05\x3f\xbe\xb4\x9d\x29\xa6\x45\x8a\xb6\x17\x8b\x16\xc5\xc7\x27\xbe\xa7\xcd\xc6\xbc\x07\x04\xe3\xc9\xd8\x68\xe0\x6c\xc7\x1c\xc0\x1c\x12\x9a\x68\x63\x42\x67\x0e\x3e\x00\x6d\xab\xcd\xa6\xa2\x4b\x64\x7b\x36\xf5\xc7\x25\x51\x9b\x7a\xbf\xdd\xad\x87\xfe\xaa\x35\x6f\x3e\x25\x22\xdf\x69\x35\x20\x26\x9c\xf1\x7a\x93\x2d\xda\x11\x18\x90\xaa\x0e\xfd\x71\xe0\x69\xf0\x0c\xa6\xf1\xad\xa9\x9f\x1e\x1e\xee\x29\x5b\x07\xf7\x8f\x8f\x77\x4d\x53\x62\xbb\x23\x60\xf1\xd1\x85\xd2\x83\xac\xed\xc4\xef\x5c\x0a\x09\xdb\xed\xdd\xda\xe5\x03\x5c\xa6\x84\xfd\x2b\xde\x11\x01\xe2\x2d\xbc\x19\xaa\x44\xfd\xb6\x6f\xb6\xff\x6e\x6c\xe1\xe4\x63\x0f\x91\xa5\xb3\xee\x54\xf2\x75\xe9\x3d\x2e\xd1\x64\x15\x5b\xba\x14\x7a\x86\xb3\x9e\x41\xdd\x03\x26\x71\x96\x80\x20\x92\x67\xff\x02\xe2\x52\x24\x16\x57\x58\x74\x3c\x41\x06\x4f\x9c\xf0\x12\xd2\x51\x46\xcb\x6e\xf8\x56\x35\x26\x84\xa5\xb7\x46\x85\xf4\x5b\x02\xfb\xae\x1c\x0e\x80\x12\x93\xa2\xbc\x00\xb2\x46\x87\x14\x42\x9a\x34\x18\x20\x64\x5d\x22\x4c\xc1\x47\x20\x0d\x27\xb4\x59\x52\x06\xb4\xec\xe3\x71\xa6\x99\x15\x13\x50\x59\xe4\x12\x1d\xb7\xfb\xff\xeb\xdf\xbc\xfb\x73\xf1\xee\xd4\x05\x1b\x4f\xf2\x5c\x12\x03\x31\x0a\x42\xa7\xe3\xe8\x21\xa8\x48\xd7\x9f\x13\x5c\xb2\xed\xf5\xe7\x08\xe7\x2c\x34\x5a\xe4\x21\x8d\x2a\xc8\x98\x12\x0f\x42\x19\x42\x50\xfe\x54\x34\x8a\xbd\xb0\xed\xc8\x7f\x81\x65\xe5\xb4\x74\x23\x61\x18\xf3\xec\x1c\xa5\xd1\x27\x79\xf1\x30\xc9\xa2\xfc\x3a\x8c\x59\xc0\x2e\x69\x8a\x66\xf6\xd5\xaf\x35\xfc\xd1\x14\x03\xd8\x1e\x70\x29\x56\x4b\xbc\x9b\x0d\x42\xd5\x05\xe6\x21\xde\xc0\xb9\x5a\xe8\x3b\xe8\xd5\x3d\xed\xae\x59\x68\x89\x4e\xc5\x9d\xf4\xca\xbd\x46\x05\x64\x61\x24\x2b\xa0\x4a\x7a\x54\xbb\x58\x71\x17\xab\x16\x6d\xfe\xf9\xd3\x92\x76\x37\xf3\xbc\x6e\xfd\x9c\xde\xa2\xe3\xfe\xdf\x86\x58\x07\x2e\x3a\xd9\xf6\xbf\xe5\x76\x9f\x19\x55\x78\xaa\xde\xbc\x9c\xba\xd9\xef\xb7\xf2\xf0\x54\x3f\xb6\x77\xf5\x75\x04\xe3\xa8\xf0\xaf\xaf\x62\x66\x74\xa3\xd3\x66\x79\x44\x33\xa9\x5b\xc9\x35\x5b\x7d\x0d\x00\x00\xff\xff\x1e\xe4\x15\x4d\x12\x04\x00\x00")

func runtimeSyntaxNanorcMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxNanorcMicro,
		"runtime/syntax/nanorc.micro",
	)
}

func runtimeSyntaxNanorcMicro() (*asset, error) {
	bytes, err := runtimeSyntaxNanorcMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/nanorc.micro", size: 1042, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxNginxMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x58\x5d\x72\xe3\xb8\x11\x7e\xde\x39\x85\x4a\x71\xd5\xd8\x9e\xcc\x54\xaa\x92\x97\xec\x6e\x92\xca\x05\x72\x80\xd8\x1e\x14\x44\x82\x12\x56\x24\xc0\x01\x40\x59\xf2\xe0\xf0\xfb\x75\x83\x20\x01\xda\x0f\x92\xba\x3f\x80\xcd\x46\xff\x43\xfe\x66\x82\xbc\xee\xf6\xff\x3b\x6a\x73\xdd\xef\xf6\x86\x7e\xbf\x3d\x3e\x7f\x6b\xac\xe9\xee\x00\x3c\x7f\x63\xe8\x6e\xff\xe9\xa4\x64\xab\xdc\x6e\xff\xfd\xde\x2b\x77\x51\x2e\x4e\xa3\x0f\x4e\xc9\xe1\xe1\x49\x7e\x7d\xdb\xbd\x3c\x3e\xff\xc4\xae\x4f\x8d\xed\xad\xdb\x1d\x9c\x3e\x9e\xc2\x20\x8f\x0a\xf2\x77\x10\xf3\xfb\xbd\xba\x80\xf6\x71\x7e\xf8\x14\xc2\x18\x7b\xdb\xc8\xa0\xad\x29\x44\x3d\xfd\xea\x47\xd9\xa8\x5f\x5f\x48\xde\x7e\x96\xd6\xdc\xa4\x81\x90\xfb\xef\x71\x5d\xff\xf9\xdb\xcb\xc3\xbd\x6c\x1a\xe5\xbd\xe8\xed\x31\xca\xb6\x15\xb2\x0b\xca\x89\x83\x6d\x6f\xcc\x1e\x54\x67\x9d\x5a\xf9\x74\x02\x22\x35\xbd\x55\x84\xdb\xa8\x7c\x94\xda\x46\xd9\x6b\x09\xaa\xef\xed\x6b\x94\xa6\xd1\xd0\x54\x1c\x9c\x7d\xf5\xb4\xbd\xe6\xc5\x45\xf6\x93\x8a\x72\x0a\x27\x71\x90\x5e\x37\x05\x29\x26\xda\xd0\xe9\x9e\xd7\xad\x36\xad\xba\xae\x94\x50\x57\xd9\x04\xe1\xf5\x5b\xb1\x2c\xc8\x06\x7d\xd0\x83\x8a\x07\x58\xe0\x1c\x9b\x93\x74\x5e\x85\xfc\x2b\x06\x39\x2e\x74\x52\xb8\x39\x4d\xe6\xac\x5a\x11\x9c\x34\xbe\xc3\x0b\x95\x69\x6c\xab\xcd\x31\x36\x7d\xd2\x14\x07\x16\x87\xa9\xa3\x35\x7e\x5b\x89\x6b\xc3\x0a\x0a\x6b\xfa\xdb\x76\xc1\x43\x08\x96\xd2\xa3\xd5\x62\x50\xc3\x28\x46\x19\x4e\x35\x0a\xb5\xed\x14\x32\x96\xec\xfb\xd1\x9b\xe7\x95\xcd\xfe\x41\x5e\x93\x9c\xb4\xd5\x1a\xa3\x1a\x76\xcc\x68\x6d\x3f\x83\xb0\x49\x50\xa2\x9b\xfa\x5e\x8c\x53\x48\x2a\xb4\x52\x0d\x08\x9a\x56\x5e\x44\x0a\x00\x26\x07\x15\x4e\xb6\x05\xad\x3a\x39\xf5\xc9\x58\x60\xcc\x2d\xb6\xda\xb1\xe0\x85\x10\xf0\xf7\xd1\x0c\xd0\x01\x90\x97\x07\x9c\xd9\xdf\x86\x5e\x9b\xb3\x8f\x38\x68\xb8\x89\xa3\xee\xa2\x32\x97\xa8\x9c\xb3\x8e\xe3\x2b\x51\x23\x22\x3a\xaa\xeb\x08\x41\x3e\x76\xd2\x87\xe6\xa8\xab\x03\xd7\x58\xb9\xc7\x67\x9f\xf8\x7a\x67\x23\x9b\xd3\x86\x13\x87\xdb\x28\xbd\xdf\x80\x67\x75\xdb\x20\x88\x9d\xf3\x07\xd0\x62\xe7\x7a\x69\x80\x87\x11\xa0\x5b\xb1\x6c\xd2\x1a\xc2\x2e\xe1\x83\xec\xb7\x6a\x21\xf4\x75\xbb\x62\xc9\x61\xef\xde\x76\xd2\xad\xca\xb9\x96\x31\x98\x9b\x52\x71\x76\xbc\x3c\x58\x17\xb6\x6b\xe9\x89\x55\xbb\x94\x3d\x2b\x87\xd4\x6e\xd4\x18\x04\x3b\x62\xdd\x76\x56\x6a\x64\x55\x16\x84\xc2\x8a\xe3\x95\xe3\xbc\xb2\xb5\x51\xd7\x20\x72\xb1\x59\x51\xbb\x71\xc2\x28\x5d\xb1\x5c\xb9\x82\x98\xed\xe1\x20\xac\x7d\x67\x05\xaf\xcc\x07\xe0\xd8\xeb\x14\xc4\x38\x50\x67\x57\x3c\xc0\x02\x35\x97\x43\x3b\x83\xeb\x89\x5e\x9d\x0e\x9b\x73\xad\xe9\xd9\xf5\x97\x78\x54\x96\x3e\x1a\x76\xd1\xe1\x96\x49\x3b\x99\xe0\xc0\xbd\xe9\x91\xbf\x96\x10\x65\xa6\xb1\x90\xd0\xa3\x46\xf7\x89\x9f\xf3\x22\x31\x54\xac\x05\xaa\xb6\xa7\x5a\xcd\x08\xc5\x52\xaf\xcc\x11\x6f\x64\x7e\x74\xf6\xaa\x55\x9b\x18\x84\x4e\x40\x5d\x64\x3a\x95\x2c\x26\x2f\x12\xaf\x47\x5e\xe9\x4e\x0c\xa8\x57\x1d\xf6\x53\xc5\x69\x54\x9c\x23\x40\x1b\x0e\xb0\x25\x12\x34\xf5\x0f\x3a\x33\x5c\x5f\x31\xb9\x42\x55\xd8\x1f\xa3\x3a\x8a\x1f\x13\x24\xe0\xcc\xd5\x8a\x47\xf9\x1c\x95\xa9\x41\xae\x9e\x70\x34\x8a\x27\xb6\x9b\xa6\x9f\x5a\x28\xc2\x31\xc7\xb1\x66\x64\x1f\xe9\xe8\xd2\x9f\x22\xc5\x18\xe4\x5e\xd4\x4a\x2d\x06\x5a\x11\xa7\x7e\x4c\xca\xa3\xc5\xad\x50\xf6\x7f\x2f\xdd\x71\x89\xfe\xaa\x4c\xfa\xd8\xeb\x01\x31\xc1\x11\xbc\x92\x54\x72\x66\x77\x14\xe0\x9b\x35\x6a\xe6\xd5\x95\x92\x61\x66\x1c\x6a\x64\x41\xa6\x3e\x98\x01\xf5\x63\xa5\xde\x89\x25\xac\x90\x3a\x93\xe6\xa8\x1c\xbe\xa0\xb0\xf5\x25\xcf\x6d\xaa\x66\xf9\x74\xda\x07\x98\x77\xe9\xe6\xf4\x12\x74\xde\x41\x06\x26\x8d\x0d\x60\x27\xd3\x32\xe7\xa7\xc3\x6c\xa8\x48\xad\x0d\x1f\xb6\x31\xcc\xd1\x9c\xd5\xdc\x1d\x17\x90\x52\x79\x46\x3c\x39\x0d\x61\xc6\x49\x41\x38\xfc\x77\x44\x68\x0d\x6a\xe0\xe4\x6d\xab\x32\xbc\xa2\xdb\x2a\xb5\xae\xd4\xc5\x60\xc5\x39\xdf\x57\xb6\xca\xee\x15\xae\xf2\x7b\x50\xe4\x5f\xdf\x43\x67\x52\x09\xc9\xd1\xaa\x5e\xc1\x13\x2d\x9c\x74\x8a\x08\x77\x04\xd4\x32\x51\xd4\xec\x3c\x50\x0c\xe3\x3f\xe8\x53\x9f\x02\x3c\x37\xc9\x12\xf3\x9a\x6a\x76\xcb\x0d\x9f\x19\xa7\x3a\x74\xa3\x53\xb4\x88\xf1\x54\x21\x52\x35\xdb\xf0\xb9\x70\x6e\xe1\xa5\x2d\x6c\x17\x52\xb5\x67\x94\x3d\x5a\x4a\xc6\xc1\xa1\x8c\x48\xc3\x9c\x30\x72\xa0\xe7\x41\x3a\xaa\xfd\x79\x84\x19\xd1\xbd\xc5\x1f\x1a\x84\x72\x3d\x7f\x51\xe2\x4f\x3d\xf6\x32\x43\x71\x80\x46\x9a\x18\x7e\x00\xef\x1b\xd1\x1a\x68\x16\x71\x2a\x75\x6b\x00\x3e\x8c\x88\x4b\x01\x43\x63\x04\x88\x54\x6a\xea\xf1\xa6\x44\xc8\x2a\x25\xef\x17\x6e\xdb\x7f\x13\x9e\x0e\x54\xd0\xb9\xf7\x96\x10\x75\xde\x92\xe7\xbe\xbb\x05\x96\x60\x28\x17\x16\xe3\x96\x20\x17\xea\x12\x58\xfb\x6d\x89\x26\xfb\xcf\xc8\x26\x8a\x33\x6a\xcf\x08\x80\xd6\x0e\x52\x9b\x1a\x2b\xde\x51\xf6\xe3\x19\x29\xeb\x79\x82\x3e\x6a\xd0\xd5\x4a\x2e\xca\x33\xb8\x6d\xc7\x09\xfe\xa0\xf5\xa6\x85\x3a\xd7\x66\xcc\x56\xd6\x2f\xac\x5e\x36\xd9\x84\x54\x49\x98\xa1\x1c\x20\xcc\x56\xf9\x98\xa1\x50\x4b\xf1\x9e\xe2\xcc\xd3\xb1\xf1\x38\xac\x9e\x71\x6e\xbf\x05\x9d\x9b\x6f\x82\x3e\x6c\xbd\xc5\x12\xdb\x1a\xe5\x08\x7e\x98\xa7\x16\x56\x57\xd2\xbb\x89\xec\x05\x35\x92\xa4\x08\x34\x9e\x60\xf7\xcb\x9c\x8e\x3c\x50\xfa\x38\x57\xc4\x62\xf0\x45\x46\xab\xe4\xee\x16\x07\x12\xeb\x70\x4c\x2b\xb6\xbf\xb0\xa8\x44\x2c\xa7\x76\x2a\x4c\x8e\x36\xb0\x9a\xd1\x59\x1b\xa2\x47\x49\xf6\xdd\x2d\xff\x0a\x89\x79\xd8\x93\x0e\x08\x5a\xcc\xbb\x30\x07\x92\x14\xdb\xc8\x7a\xb8\xfd\xc8\x99\xcc\x22\x89\xe1\xfb\x4c\x26\xd8\xc5\x7c\x03\xc9\x37\xb9\xea\x87\x4b\x41\x49\x57\xa9\x5c\x96\x8b\xf7\x55\xff\xfd\xea\x52\xfe\xe7\xa5\x60\xcf\xca\xd0\x15\x92\x44\x51\xf3\x4a\xa6\xed\x9c\x1d\xa2\xb7\x13\x02\x72\xa9\x3d\x69\xd2\x4a\xe1\x8c\x27\xbc\xa6\x0f\x84\xf5\x14\xde\x73\xcc\x12\x92\xe6\x13\x04\x06\x7d\x44\xa3\x5c\xc0\x60\xd2\x50\x3f\xdd\xf0\x5c\x04\x18\xd3\xe3\x49\xf1\xd3\x7d\x4e\x97\x77\x8f\xb9\x24\xae\x3d\xa5\x49\x92\x68\x45\xf7\xe8\xb4\x3c\xa2\x62\x53\xed\x4a\x87\x2a\xe5\x21\xa8\x82\xc5\x9d\x37\x71\x39\x54\x53\x96\x94\xc8\xe2\x1e\x60\x90\xa1\xe1\xd8\xa4\x4a\x89\xa4\xde\x83\x7e\x9b\x47\xa8\x95\xc4\xed\x0f\x63\x57\xc1\x27\x33\x84\x66\x44\x56\xa2\x75\xc9\xdb\x4c\x8f\x13\x1a\x0b\xbd\xcd\x09\x0e\xb7\x89\x43\x10\x73\x24\xe7\x03\x9e\x48\xcf\xd1\xf7\x7b\x87\x16\xf0\xe2\x49\x8c\x01\x38\x6c\x83\x1c\xf3\x14\x1a\xb9\xaa\x4c\x46\x1b\x5c\xca\x51\xf1\xde\xd0\x5b\x31\x29\x6a\xbe\x95\xbd\x4a\xb7\xfe\x39\x10\xe9\x76\xcd\x5f\x28\x8b\xe9\x27\x97\xbe\x99\xcb\x17\xb3\x99\xe5\x58\x9c\xe9\xf1\xef\xe3\x42\x52\xba\xce\x34\xf9\x40\xc3\x14\x69\xf0\x64\xbf\x90\x3a\x59\x81\x0f\x0e\xb5\x59\x5a\x0e\xf6\x6a\xdd\x99\x27\x14\x6d\x1d\x4d\xa0\x0b\xcf\x13\x0b\x94\x9a\x01\x97\xe7\x39\xa7\x36\x90\xb1\x9c\x69\x04\xd2\x74\x95\x72\xc6\x62\x66\xbe\x0e\x14\x3e\x01\xf6\x81\x98\xab\xc7\xdd\xd6\x87\x1b\x34\x38\x29\x04\x3a\xf3\x6c\xe9\x87\xfb\xe2\xdf\x93\x78\xf7\xb0\xaf\xfe\x8b\x99\xff\x43\x79\xfe\xfd\x1e\x0e\xb4\x5d\xf7\xf0\xfc\xef\x7a\xc3\x4d\xd1\xdf\x1f\xd8\x71\xf7\xf4\xdf\xaf\xff\x97\x5f\xdf\x5e\xe6\xdf\xbf\x7d\xfd\xa7\x78\x79\xcc\x9b\x91\xcc\xbb\xfd\xd3\xe3\x4b\xe6\xf3\x63\xfb\xfb\xe7\xe7\x6f\xf1\xe9\xfb\xfe\xe5\xe1\x71\x1f\x3f\xcf\xdc\x67\x70\x9f\x37\x5b\x77\x3b\xf4\x3a\x17\xfe\xb5\xff\x7c\xb7\xdf\xa1\xac\x80\xf8\xed\xae\xd6\xe5\xd0\xcb\xe6\xbc\xf9\xc3\xe7\xe5\xe1\x2f\xf7\x4f\xdf\x7f\xbe\x7c\x7b\x7c\xf8\xcf\xb2\xfd\xaf\x47\xa7\x94\x81\x42\xeb\xb6\x2f\xeb\x22\xeb\xfa\xcb\x97\xdd\x97\xb8\xfb\xf2\xcb\x97\xfd\xa7\x3f\x03\x00\x00\xff\xff\x8f\x18\x6c\x51\xee\x12\x00\x00")

func runtimeSyntaxNginxMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxNginxMicro,
		"runtime/syntax/nginx.micro",
	)
}

func runtimeSyntaxNginxMicro() (*asset, error) {
	bytes, err := runtimeSyntaxNginxMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/nginx.micro", size: 4846, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxOcamlMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x52\xdb\xce\xd3\x30\x0c\xbe\xdf\x53\x44\xf9\xb9\xd8\x26\x06\x88\x3b\x24\x0e\x42\x3c\x00\xf7\xac\x03\xb9\xa9\xdb\x1a\x72\xa8\x52\x77\x5d\x87\x79\x77\xdc\x96\x22\x7e\x01\xd2\xa6\x38\xaa\xfd\xf9\x3b\xa4\x9f\x22\xc3\xcd\xd8\x8f\x1f\x20\x78\x6b\x6c\xf1\x2c\x78\x7a\xf7\xc4\xee\x1e\x06\xaa\x76\x2e\xf9\x94\x4d\xc6\x4a\x3f\xbc\x3e\xbf\x3f\x7d\xba\x9c\x5f\x9c\x5e\xc1\xe9\xfe\xe5\xf2\xfd\xe5\xd3\x1f\xc5\x5b\xed\xab\xd0\x79\xc8\xc0\x94\x62\xff\x6b\xa0\xc9\x88\x71\x1e\xd9\x7b\x64\xb9\x82\x97\x80\xdc\xa6\x4a\x28\x0a\xc4\x4a\x32\x3a\xe9\x32\x5d\x81\x51\xae\x94\x79\xd0\x0e\xa7\xe3\x9c\x81\x22\x1f\x16\x58\xbd\x0c\x8e\x87\x8c\x86\x18\x43\xff\x98\xca\x9e\xa7\x0e\x25\x75\x18\x45\x97\xf7\xbd\x84\x54\x0d\x1e\x05\x6f\x0e\xbb\x99\x89\x56\x8c\x39\x82\x5f\xc1\x3a\xe0\xf9\xba\xa1\x94\x7e\xc0\x05\xa6\x1e\xa2\xe8\xdf\x2d\x23\x4b\x91\xb2\x04\x60\xd7\x0a\xe7\x49\x46\xe2\xf6\x31\xc0\x49\x17\x51\x4d\x98\x37\xa8\x09\xbd\x4f\xe3\x02\x06\xbd\x8c\xad\x32\x4a\xf5\x3c\x63\x76\x0f\x2a\xa9\xa2\x3f\x7d\x71\x13\xac\xb6\x50\x2d\x3c\xb7\xa2\xef\x71\x5d\x50\xfa\xe4\xb6\xb6\x00\x0d\x6a\x2a\x4b\x67\x89\x8d\x9a\x86\x6a\x5a\x2a\xbf\xa2\x63\x59\x7d\x91\x9e\x1a\xa9\x95\xec\xd8\x92\xea\xae\x92\xfe\x22\x0a\xcf\xe7\x18\x39\xad\xa0\x8b\xa7\x10\x19\xff\x0e\x46\x51\x50\x6a\xf8\xbd\x7f\x35\xb0\x7f\xbe\xd8\xf9\x8f\x7e\x8a\xce\x0f\x15\x6a\x82\x2d\x66\x62\x3d\x55\x19\x78\xba\x63\x5e\x01\xf0\xd6\x29\xf3\xff\xbb\x13\x71\xd4\xdc\x6b\x09\x03\x43\xa9\x94\x3d\xdc\x27\x99\x77\x65\x16\x8d\x7d\xe3\xe1\x52\x08\x2a\x7e\x03\x50\x79\x8c\x46\x45\x64\x7e\x63\x8b\x7d\x71\xb4\x46\xbd\xd0\xf2\x58\x1c\xd6\x47\x42\xb1\xe9\xcd\x3e\x26\x13\x06\xcf\xe4\x29\xa2\x69\xf5\x8d\x69\xd1\xe8\x7a\x3e\x6c\x91\x67\x6a\x5a\x2e\x3d\xb8\x6f\xc6\xda\xf3\xe7\xc2\x5e\x8e\xd6\xee\x7e\x06\x00\x00\xff\xff\x54\x0b\xc2\xbc\xff\x02\x00\x00")

func runtimeSyntaxOcamlMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxOcamlMicro,
		"runtime/syntax/ocaml.micro",
	)
}

func runtimeSyntaxOcamlMicro() (*asset, error) {
	bytes, err := runtimeSyntaxOcamlMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/ocaml.micro", size: 767, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxPatchMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\xce\xcd\x0a\x83\x30\x0c\xc0\xf1\xbb\x4f\x11\xda\x1d\xf6\x81\x3e\x83\xc7\x1d\xf7\x00\x32\xa8\x9a\xd6\x42\x6c\xa5\xed\x98\xc2\x1e\x7e\xe9\x3e\x28\x48\x6e\xbf\x7f\x02\x91\x12\xae\x18\x10\x6c\x04\xe5\x00\x57\x35\x2f\x84\xa0\x7d\x80\x45\xa5\x61\x02\x6d\x09\x63\x53\x49\x59\xc5\xcd\x25\xb5\x82\xb8\x65\x17\x20\xba\xe6\xf8\x59\x79\x8d\x56\xeb\xd3\x41\x54\x83\x27\x3e\xeb\x83\x35\x53\x32\x01\xd1\x81\xb8\x77\x97\xe6\xfc\x2f\xc5\xf2\x14\xff\x5e\xf4\xf4\x40\x8e\xb0\xf7\x80\x23\x73\x5d\xf8\x07\x75\xbd\xdf\xdc\x90\xc8\x3f\xb9\xb5\x6d\x49\xb3\x32\xc8\x7f\xb3\xe6\x37\xb3\xbf\x03\x00\x00\xff\xff\xb4\x6c\xce\xcb\xf2\x00\x00\x00")

func runtimeSyntaxPatchMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxPatchMicro,
		"runtime/syntax/patch.micro",
	)
}

func runtimeSyntaxPatchMicro() (*asset, error) {
	bytes, err := runtimeSyntaxPatchMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/patch.micro", size: 242, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxPegMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x50\xcd\x4e\xc2\x40\x10\x3e\xc3\x53\x8c\x13\x14\xe8\x76\xaa\x57\x1b\xa4\x31\xd1\x78\xc4\x83\x27\xf7\xc7\x2c\x75\x53\x88\x2b\x25\xa5\x06\x6b\xf6\xe1\x1d\x9b\x96\x94\xc4\xd3\x66\xe6\xfb\xdb\x6f\x0e\xcd\xae\xb6\xdf\x80\xcf\x8f\x4f\x08\xa8\x12\x9f\xed\x5d\x31\xc1\xf1\x38\x2f\x7d\x59\x41\xde\xd8\x1d\x00\x1a\x29\xd3\xc3\xde\xe6\x2e\xd5\x3a\x92\xf7\xf4\x6a\xe9\x47\x77\xef\x0d\xdd\xbe\xf1\x72\x40\x58\x10\x76\xf2\xb5\xff\x72\xc0\x7a\x65\xa4\x20\x9d\x49\xe6\x6a\xd1\x83\x95\x7b\x07\x94\x24\xa2\xcc\x5c\x5f\x5c\xe9\x40\xcb\xb0\xa0\x70\xb7\x3c\x89\xab\x6d\xb1\xa9\x1b\xe7\x7d\x79\x84\x3f\x97\xcb\x7f\x93\x7b\xfa\xa7\x2d\x1c\x77\x69\xe3\xa4\x34\xfc\x0f\xa5\x7b\xac\x33\x41\x9c\x29\x95\x04\x69\x50\xcf\x23\x0c\xd3\x6e\x9a\xf2\x34\x3d\x4f\x5d\x7b\x9b\x7f\xb0\xd3\xcc\x84\x41\xb3\xb9\x22\x45\x49\x34\x39\xe7\x1e\x37\xdb\xda\xc5\xed\xa5\xf0\x65\xf5\xb0\x4a\xb3\x1e\x8f\x8b\xca\x39\xde\x0e\x2c\xc4\x49\x1c\xb7\xfd\x47\x02\x44\x00\x31\xe2\xab\xfc\x06\x00\x00\xff\xff\x4a\xf7\x69\x50\x8b\x01\x00\x00")

func runtimeSyntaxPegMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxPegMicro,
		"runtime/syntax/peg.micro",
	)
}

func runtimeSyntaxPegMicro() (*asset, error) {
	bytes, err := runtimeSyntaxPegMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/peg.micro", size: 395, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxPerlMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x54\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\xa8\x72\x8a\xa5\x52\x24\x5b\xf4\x56\x34\x69\xda\x5b\x6f\x5d\xa0\x3d\xd5\x71\x0a\x9a\x1a\x4b\xac\xf9\x65\x92\xb2\x2c\x60\x7e\x7c\x1f\xe9\x0f\x60\x81\x05\x12\x99\x18\xce\xc7\x9b\xf7\x66\xb8\x5e\x37\x7f\x50\xa4\x46\xa7\x46\xba\x86\xce\xd2\x06\x43\xcd\xde\xc7\xe6\x0b\x45\xf3\xbc\x5a\xaf\x57\x69\x71\x59\x9e\x9b\xb6\x18\xda\xa6\x7d\x7f\x0e\x1b\x63\xb7\x0f\xed\x6a\x24\xd9\x53\x6c\xda\x8f\xf5\x77\xcf\x8f\x9f\x05\xb9\x53\xf3\x43\xf7\x16\xe0\x26\x1a\x7e\xe8\xda\xd5\x4a\x79\x83\x4c\x91\x7a\x84\xbd\x08\xa9\x14\x85\xcc\xd2\xc8\x68\x59\x66\xe9\x7e\xe2\x9d\x76\xa2\x67\xeb\x7b\xea\x58\x09\x69\x0c\x45\x1e\x45\xaf\x63\xb1\xb1\x0f\xec\x67\xc7\xd1\xfb\xdc\xb1\xf1\x89\xca\x4d\xf7\xc6\xde\x39\x52\x99\x7d\xe2\xb8\x04\x5c\xf5\x62\x67\x85\x2a\x0e\x08\x21\xd7\x31\xed\xb5\xa3\x9e\xc9\x50\x26\xd6\xb0\xf2\x64\x03\xcc\x80\x30\xb2\xdf\xf3\x49\x1a\x3e\x0b\x52\xac\x53\x4e\xac\x33\x87\xae\xe3\xbd\x50\x2e\x1b\xd6\x86\x9c\x47\x35\x75\x60\x1f\x0f\x5d\xf7\xfe\x6b\x5b\xd1\x0f\x94\x85\x82\x7d\xd0\x8e\x03\x51\x74\xd2\x12\x87\x21\x06\x0e\x41\xf7\x1c\xa2\xf6\x51\xe7\x85\xc3\x8c\x1b\x16\xa3\x4f\x99\x1d\x21\x75\xf4\xd9\x73\xa2\x78\xea\x76\xcb\x25\x68\x9e\x10\x30\xc4\x01\xdf\xbb\x1f\x2e\x65\xdf\xc7\x8b\x3b\x1c\x27\xbb\x03\x17\x25\x6c\xb7\x04\x1f\xd1\xa5\xd8\x0c\x69\x8b\x84\xe4\xfa\x4e\x84\x19\x09\xf8\x5b\x45\xc8\x65\x06\xd6\x84\x06\x44\x2d\xe7\x0b\x45\x83\xcd\x1a\xe7\xa1\xb8\x0d\x91\x02\x8f\x74\x66\xed\xfa\xfa\xcd\xac\xbd\x42\xeb\xff\x79\xed\xee\xfd\x1e\x68\x49\x7c\xd0\xc6\xb0\x91\xa8\x02\x56\x86\x3c\xb2\xd1\xee\x80\x4f\xca\xe4\x0a\x47\xd2\x88\x92\x17\x9a\x80\x18\x36\x29\xcb\xcc\x96\xed\xa1\x2a\x98\x06\x51\xb2\x02\x0c\x27\xd7\x73\x54\xa7\x0e\x60\xcf\x10\xae\x88\x07\xa1\x6e\x72\x46\xd0\x27\xc1\x77\xd0\x01\xec\x40\x75\x90\xe9\xf2\xfe\x8d\xc3\x94\x46\x3e\xf2\x11\x7f\x67\x8e\xb2\x24\x81\x86\x7d\x1d\x90\x82\x04\xc1\xea\xc4\xbd\xe7\xda\xe8\x71\xd2\x91\x40\x42\xe6\x3c\x45\xc7\x27\x8a\x18\x88\x19\x4d\x96\x32\x1c\x2f\xdd\x46\x5b\x82\x13\x27\x55\xe6\x10\xde\x74\xb8\xc0\xb8\x37\x8e\x31\x33\x65\xbc\x6c\x01\x6f\x0b\x7a\x0b\x48\xa8\x9d\xab\xda\xf9\xae\x74\xe5\xb8\xb2\x9b\x46\xbd\x47\x93\xa3\xbd\x37\x1c\xb1\x1b\x3c\xc3\x8d\xca\xed\x94\xfb\x32\xc8\x09\xa3\x93\x0c\x81\xfd\x12\x89\x79\x0a\xb2\x12\x90\xa0\x2f\xa7\x60\xb4\x50\xc4\x25\xdd\xa5\x7f\x4e\xc7\x62\xaf\x7d\x57\x66\x53\x9e\xfa\x85\xd3\xb4\x4b\x19\xc8\x17\x5b\xc5\x48\x4b\x12\xe8\xc5\x5c\x4a\x66\xb2\xb7\xb2\x99\x8c\xb9\x32\x5c\xb5\xcf\x51\x2c\xe5\x1c\x27\xa7\x24\xf6\x62\xb2\x32\x1d\xee\x5d\x4f\x50\x83\xf6\x17\x7d\xab\x18\xb5\xa7\x8e\xa7\x1a\x8b\x85\x99\x28\x81\x52\xc5\xb3\xd4\x00\xae\x7b\xa4\x9a\x25\x5e\x86\x18\xe5\x82\x13\x08\xbf\xd4\x45\xc2\xeb\xde\x5b\x39\x60\x18\x65\x4d\xaf\xbc\xcb\xda\x4d\x84\x9d\x4c\xf5\xa3\xf7\x45\x37\x3c\x34\xe5\x9f\xca\x5e\xc2\x32\x39\x43\x29\xe1\x27\x6b\xc3\xf3\x88\x55\x64\x3a\x62\x66\xd8\x60\xa6\xcb\x0c\x82\x5b\x56\x36\xf0\x99\x6d\x25\x82\x27\x64\x2b\x70\x65\xb9\x90\x0e\x0b\x2d\x2f\x08\x16\x3c\x67\x42\x77\x0d\x88\x8b\xf9\xb5\xdd\x3c\xfc\xf6\xfd\xb6\x6d\xb0\x3b\xaf\x2d\x5e\xa7\xcd\xc7\x8f\x4f\x3f\xff\xfe\xf4\xcf\xbf\x5b\x7e\xea\x6e\x78\x17\x10\xe6\xe7\xa6\x6d\x9f\x1f\x5b\xcc\xdc\x3b\x3f\x3f\xbe\xf3\xed\x12\x68\x32\x35\xed\x26\xd9\xed\x67\xbc\x76\x5f\x9b\xaf\x45\xc4\x47\x81\xd3\xbc\x36\x8e\xe6\xee\x5a\xec\x97\x9b\x27\xb6\x8e\x5c\xd3\xae\x91\xfc\xeb\x7a\xd7\xe0\x97\x97\xe6\xd3\x5f\x7f\xff\xf9\xe5\xd3\x35\xb0\x9c\xdb\xd5\xff\x01\x00\x00\xff\xff\x57\xe1\x0d\x2c\xa0\x05\x00\x00")

func runtimeSyntaxPerlMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxPerlMicro,
		"runtime/syntax/perl.micro",
	)
}

func runtimeSyntaxPerlMicro() (*asset, error) {
	bytes, err := runtimeSyntaxPerlMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/perl.micro", size: 1440, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxPerl6Micro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x54\x6d\x8b\x1b\x37\x17\xfd\xee\x5f\x21\xbc\x79\x60\x26\x10\x4f\x78\xa0\x0b\x6d\x77\x9b\xbe\xa5\x69\x20\xa4\x29\xa5\xf4\xc3\x7a\x0b\xb2\xe6\x7a\x46\xb5\xde\x56\xd2\x78\x3c\x70\x7f\x7c\x8f\x64\xef\xc2\x92\x14\x6c\x59\x96\xee\xcb\xb9\xe7\x9e\xab\xab\x2b\xf1\x2b\x45\x12\x3a\x09\xe9\x04\x9d\xa4\x0d\x86\xc4\xde\x47\x11\x28\x9a\x55\xb9\x5e\x76\x51\xf7\xf5\xef\x57\xa2\xab\xbf\xd7\x22\x2d\x2e\xcb\x93\x18\xf5\x30\x1a\x7c\xb3\x76\x03\x6c\xaf\xc4\x2f\x7e\x72\xbd\xd0\x4e\xfc\xf4\xe9\x87\x8f\xe2\x95\x18\x73\x0e\xdf\x74\x9d\x0a\xd2\x25\x92\x51\x8d\x9b\xe2\xbf\xf1\x71\xe8\x52\x54\xdd\xc7\xf7\xef\xde\x76\xef\xbc\x7f\xf5\x7a\xf3\xfa\xeb\xce\xe8\x5d\xb7\x19\xbc\x4f\x07\x32\x9d\x93\xce\x47\xb5\x5a\x5d\x32\xad\x3f\x95\xbc\x6b\xb1\xde\x6e\xc2\xf5\x8b\xf5\x4a\x79\x03\x8c\x40\x86\xe4\x3b\x33\x11\x2e\x6e\x1a\xa9\x14\x85\xcc\xd2\xc8\x68\x59\x66\xe9\xfe\xcf\x3b\xed\x9a\x9e\xad\xef\xa9\x65\xd5\x48\x63\x28\xf2\xd8\xf4\x3a\x96\x33\xf6\x81\xfd\xec\x38\x7a\x9f\x5b\x36\x3e\x51\xb9\x69\xdf\xb0\x77\x8e\x54\x66\x9f\x38\x2e\x01\x57\x7d\xb3\xb3\x8d\x2a\x06\x70\x21\xd7\x32\xed\xb5\xa3\x9e\xc9\x50\x26\xd6\x38\xe5\xc9\x06\x1c\x03\xc2\xc8\x7e\xcf\x47\x69\xf8\xd4\x90\x62\x9d\x72\x62\x9d\x39\xb4\x2d\xef\x1b\xe5\xb2\x61\x6d\xc8\x79\x64\x53\x07\xf6\xf1\xd0\xf2\x40\xb9\x51\xf8\x3f\x68\xc7\x81\x28\x3a\x69\x89\xc3\x10\x03\x87\xa0\x7b\x0e\x51\xfb\xa8\xf3\xc2\x61\xc6\x0d\x37\xa3\x4f\x99\x1d\x21\x64\xf4\xd9\x73\xa2\x78\x6c\x77\xcb\xd9\x69\x9e\xe0\x30\xc4\x01\xeb\x93\x1d\x2e\x65\xdf\xc7\xb3\x39\x0c\x27\xbb\x03\x07\xc5\x6d\xb7\x04\x1f\x51\x5d\x73\x37\xa4\x7b\x04\x24\xd7\xb7\x4d\x98\x11\x80\xbf\x94\x84\x5c\x2e\x58\x13\x80\x37\x35\x9d\x2f\xd4\x0c\x36\x6b\xec\x87\x62\x36\x44\x0a\x3c\xd2\x89\xb5\xeb\xeb\x9a\x59\x7b\x85\x92\xff\xf1\xa8\xed\x40\x4b\xe2\x83\x36\x86\x8d\x44\x74\xb0\x30\xe4\x91\x8d\x76\x07\x2c\x29\x93\x2b\x9c\x48\xd3\x94\x78\xe8\x01\x08\x61\x93\xb2\xcc\x6c\xd9\x1e\x6a\xc7\xd2\xd0\x94\x68\x00\xc1\xc9\xf5\x1c\xd5\xb1\x05\xc8\x13\x1a\x55\x9a\x85\xc6\x3c\xb6\x2f\x82\x36\x09\x7e\x83\x0e\x60\x05\x5d\x06\x89\x2e\xef\xdf\x70\x98\xd2\xc8\x0f\xfc\x80\xcf\x89\xa3\x2c\x41\xd0\xb3\xbe\x0a\xa2\x20\x81\xb3\x3a\x72\xef\xb9\x16\xf8\x30\xe9\x48\x28\x3e\x73\x9e\xa2\xe3\x23\x45\x08\x60\x46\x71\x25\x0d\xc7\x73\x95\xd1\x16\xe7\xc4\x49\x15\xdd\xc1\x9a\x0e\x75\xa9\xa7\xd4\x98\x22\x24\x5b\x60\xdb\x82\xdb\x02\x0c\xb2\xe6\xda\xdf\xfc\xd4\xdb\xca\x6a\xe5\x33\x8d\x7a\x8f\xf2\x46\xfb\x54\x6a\x24\xd9\xf3\x0c\x33\x2a\xb7\x53\xee\x8b\x64\x13\x08\x4d\x86\xc0\x77\xf1\x84\x82\x82\xac\xa5\x27\x74\x94\x53\x30\xba\x51\xc4\x25\xdc\xb9\x72\x4e\x0f\xe5\xbc\x56\x5c\x39\x4d\x79\xea\x17\x4e\xd3\x2e\x65\xc0\x5c\x6c\x6d\x43\x5a\x52\x83\x2a\xcc\x39\x65\x26\xfb\x98\x36\x93\x31\x17\x6e\x6b\xb7\xe1\x03\xcc\x71\x72\x4a\x42\xff\x93\x95\xe9\xc0\x13\xd8\xa7\xfd\xb9\x9f\x95\xfc\x5a\x49\xcb\x53\xf5\xc0\x40\x4c\x94\x40\xa1\xe2\x59\x6a\xc0\xd5\x3d\x82\xcd\x12\xc3\x1d\xa3\x5c\xb0\x03\xc1\xe7\x6c\xdb\xef\xfe\x63\xbc\x95\x77\x78\x68\x26\xc2\xd8\xa5\xba\xe8\x7d\x69\x15\x1e\xab\xf2\xa5\x32\x7a\x38\x99\x9c\xa1\x94\xf0\x93\xb5\xe1\x79\xc4\xb4\x31\x3d\x40\x26\x6c\x20\xdf\x22\x3b\x90\xca\xca\x06\x3e\xb1\xad\x0c\xf0\x84\x68\x05\xb1\x2c\x17\xd2\x61\x66\x65\x05\xb1\xba\x12\xe5\xd5\x11\xd7\x62\x86\xa2\xd2\x33\x50\x6a\xc1\x73\x59\x40\x8d\x12\xf3\x9d\x58\x41\xd3\x78\x2d\x7c\x09\xaf\x8f\xd0\xf2\x3c\x62\xf9\xf1\xcf\xf7\x1f\x7e\x66\x3b\x99\xac\xc1\x69\x11\x51\x62\x4b\x79\xc4\xd3\x83\xc4\x8f\x3b\x33\x41\x0b\x49\x56\x30\x9f\x55\x6f\x81\x0a\x24\x09\x74\x2d\xe6\xdb\xf5\xdd\x8b\xef\xff\x77\xbf\x16\x18\xd5\xdb\x75\x23\x78\xbb\xfd\x8b\x5f\xb5\xcf\x3d\x22\xf5\x62\xbd\xde\xbc\x5c\x43\xe6\x5b\xde\xbc\xdc\xf2\xe3\x3d\xd8\xc8\xa0\xf2\x2e\xd9\xfb\x6e\xf3\xb2\xfb\x02\xcd\x97\x2c\xcd\xdf\x85\x13\x71\x2b\x1c\xcd\xed\x25\xdb\xb7\xcf\xcd\x31\xeb\x04\x06\xae\x90\xe7\xb3\xec\x97\x28\x37\x37\x6f\x7f\xfb\xe3\xf7\x0f\x17\xff\xf3\x7e\xf5\x6f\x00\x00\x00\xff\xff\x83\x51\x7e\x7a\x71\x06\x00\x00")

func runtimeSyntaxPerl6MicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxPerl6Micro,
		"runtime/syntax/perl6.micro",
	)
}

func runtimeSyntaxPerl6Micro() (*asset, error) {
	bytes, err := runtimeSyntaxPerl6MicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/perl6.micro", size: 1649, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxPhpMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x54\x6d\x73\xe2\x36\x10\xfe\xce\xaf\xd0\x09\x66\x62\x9b\x03\xae\x6f\x1f\xca\x1d\xd0\xf4\x26\x77\xb9\x19\x1a\x6e\x02\xd7\x0f\xb5\x4d\x46\x18\x01\x9a\x0a\xd9\x95\xe4\x90\x34\x9b\xfe\xf6\xae\xfc\x42\x80\x24\x37\x03\xb6\xa5\x7d\xf6\x79\x76\x57\xda\x6d\x36\xc9\xd7\xcb\xaf\x64\x7a\xaf\x2c\xbb\x23\x97\x62\xbd\x91\xf8\xb7\x42\xad\x1b\xa6\xdc\xa3\x68\xa7\x84\x46\xdd\x6c\x93\x85\x3f\xfe\xf4\xf3\x2f\xe6\xbf\x78\xd4\xa2\x8d\x24\x95\xa9\x26\xbb\x8d\xb0\x9c\x18\xcb\xb4\x1d\xd0\x0f\xd1\xc8\x43\x14\x0c\xfc\x11\x25\x5c\x2d\x07\x34\x1a\x0d\x69\xa3\x49\x3e\xe5\x2a\xb1\x22\x55\xa6\xf2\x5a\x68\x27\xb2\x90\x39\x27\xd4\x0b\x59\xe7\xdf\xf3\xce\x5f\xef\x3a\xbf\xde\x74\xe2\xc0\x8f\x3c\xe7\xf1\x11\xc1\x56\xe7\x89\x7d\xd1\x25\x91\xcc\x18\xe0\x77\x16\x45\x0c\xac\x53\x9b\xfa\xe4\x90\x07\x69\xea\x00\xd7\x9a\x73\x45\x68\x38\x47\x6b\x29\xf1\xf0\xc3\xa3\x77\xcb\x34\x94\x24\xab\x2a\x34\xe0\xc9\x26\x85\x84\x19\x0e\x0b\xcd\xd9\xdf\xb0\xe4\x2b\x96\x4b\x8b\x2a\xc2\x82\xd9\x09\x9b\x6c\x40\xac\x80\x4b\x44\xb8\x87\xfb\x56\x4b\x7c\xae\x52\xc4\xa3\x11\x57\xf5\xe7\x6f\x80\x75\x91\x1c\xb2\x7c\x21\x45\x02\x99\x16\xb7\xcc\xe2\x52\xa7\x96\x27\x96\x2f\x41\x73\x9b\x6b\x05\x98\x21\x87\x15\x73\x94\x2a\x97\x12\x66\xd7\xdf\x2e\xe0\xd3\xf9\x78\x7a\x01\x57\xdf\xc6\x63\x48\x5c\x15\x00\xab\x6b\x91\xa5\x4e\x97\xe1\x4f\x6b\x76\x8f\x24\xff\xe4\x42\x73\x10\x2a\x91\xf9\x92\xd7\xeb\x9b\x54\x25\xfb\xcd\x72\x81\xb9\x08\x85\xaf\xd4\x31\xe2\xe1\xe6\x6e\x0b\xf3\x47\x67\x57\x3c\x17\xa0\xb2\xe8\x02\x8a\x6d\xb9\xc9\x18\xba\xe4\x86\xfb\xc7\x45\xa3\x2f\x9c\xc4\x53\xcd\xe3\x76\xdf\x9d\xdb\x9f\x4c\x0b\xb6\x90\xdc\x1c\xdd\x0f\x1a\xb5\x2a\xe4\x0d\x42\x5b\x71\x00\xe1\xe0\xcd\x87\x61\x4c\x4f\x50\x9d\xe1\x2b\xb0\x26\x99\x66\x3c\x11\x4c\x92\x8f\x1b\xa6\x19\xd6\x50\xd7\x0a\xf7\x5c\xca\x74\x87\xa1\x74\xdf\x3e\x3c\x7a\xfe\xfb\x3d\x69\x6d\x88\xc2\x67\x3b\xcf\x30\xe1\x20\x0e\xe7\xa5\xd0\x55\xbe\x5d\x3c\xb1\x6f\xd9\x9a\x63\x1b\x20\xa2\x8d\x97\xd3\x0b\x5d\xa6\x51\xd7\x0f\x8a\x8f\xb6\x17\xf2\x8b\xd8\x59\x46\x27\x16\x3f\xa0\xa7\x04\xef\xee\x9c\xa5\x4c\x2f\x0e\x0e\x53\x3a\xad\xd9\xd1\x55\x8f\x5a\x76\x23\x0c\x64\x78\x56\xca\xf6\xfb\x60\xb8\x5c\xe1\xab\xdc\xee\x0c\x7d\x47\xf4\xbb\xb0\x3b\x61\x38\x99\x64\x5c\xb3\xc3\x3e\xdb\x8b\x7b\xd1\x7b\x88\x00\xa2\xb9\x5f\x1c\x64\x93\x9c\xab\x65\x6f\xa2\x7b\xd3\xeb\x49\x8f\xdb\xe4\xb8\x57\x10\x5c\xc0\xd1\x01\x95\x06\x43\xa8\x64\x26\x4a\xe2\x2d\xc2\xd6\xdc\x6e\x91\xf5\x38\xda\xba\x90\x5e\xb3\x1b\x40\xaf\xd7\x0d\xfc\x56\x91\xe2\xec\xfa\xcb\xd5\xe7\xe9\x9b\x0a\xab\xf9\x12\x21\x67\xe1\xfc\x2c\x0e\xce\x7c\xf0\x22\xec\xcb\x88\xc6\x41\x44\x0b\x81\x2f\xa5\xc0\x6b\x77\xe8\x01\x6f\xd1\xfc\x11\xd1\x45\x06\x6e\x6c\xcd\xd8\xda\x1c\x51\x57\x13\xc8\x1f\x01\x4e\x9e\x82\xf3\x33\x57\x58\x14\x49\x2e\x67\x7f\x8c\x0f\xa0\xd5\xc4\x72\xf3\xa9\x9c\x54\x87\xb3\x0b\xdd\xac\x66\x02\x83\x59\x97\xe2\x45\x4b\x54\xde\x6f\xf7\x13\x25\xec\x17\xfb\xfd\xd8\x75\x47\xf8\xb4\x6a\x17\xa9\x6f\x71\x78\x88\x4e\x91\x50\xf2\x9d\x8a\x55\x81\xf4\xa2\xa0\x1e\x99\x41\x8f\x36\xfe\x0f\x00\x00\xff\xff\x99\x88\x5c\x41\x97\x05\x00\x00")

func runtimeSyntaxPhpMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxPhpMicro,
		"runtime/syntax/php.micro",
	)
}

func runtimeSyntaxPhpMicro() (*asset, error) {
	bytes, err := runtimeSyntaxPhpMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/php.micro", size: 1431, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxPkgConfigMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8e\x4d\x4f\xc3\x30\x0c\x86\xcf\xeb\xaf\xb0\xac\x1e\x56\x42\x11\x57\x2a\x21\x84\xca\x71\x42\x68\x12\x1c\x68\xc3\x94\x05\xaf\x44\x0a\x49\xb1\xc3\x47\x21\xfc\x77\x06\x62\x3b\xec\xf6\x58\xf6\xe3\xf7\x95\x29\x24\xf3\x01\x78\xd3\x22\x60\x7f\x32\xda\x12\x8b\xc2\x46\x1f\x19\xec\x64\x02\x00\x3e\xcc\xaf\xcd\x33\xe5\x2b\x12\xcb\x6e\x4c\x2e\x86\x7c\xbb\x5c\xe4\x3b\x62\xf9\xe5\x36\x86\x8d\x77\x36\x49\x6e\x37\xde\x0c\x52\x35\x78\xe8\x2f\xe9\xe5\xd5\x31\x49\x5e\xb8\xb5\x54\xf3\x6d\x0a\xbb\x37\x93\xa8\xba\xd8\xdf\x32\x3d\x02\x9e\xef\xa6\x35\xbb\xe1\x29\x4d\xe4\x7d\x7c\xdf\xb6\x2a\xfb\xaf\xee\xb2\xbe\x37\xf5\xe7\x4a\xff\xc3\x69\x7d\xb6\xd2\x47\xfd\xf7\xce\x38\x1e\x98\x28\x00\x76\x5d\x23\xa3\xb1\xd4\x68\xad\xca\xfd\xf2\xef\xfb\x4c\x81\xca\xa0\x66\x0a\x8b\x9f\x00\x00\x00\xff\xff\x0d\xed\x35\x4c\xf5\x00\x00\x00")

func runtimeSyntaxPkgConfigMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxPkgConfigMicro,
		"runtime/syntax/pkg-config.micro",
	)
}

func runtimeSyntaxPkgConfigMicro() (*asset, error) {
	bytes, err := runtimeSyntaxPkgConfigMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/pkg-config.micro", size: 245, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxPkgbuildMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x54\xdf\x6b\xdb\x30\x10\x7e\xcf\x5f\x21\xec\xc0\xec\x30\x0c\xed\x96\xb1\x87\x65\xb0\x91\x6e\x84\xed\xa1\x74\x1b\xec\x41\x6c\xc8\xf2\xd9\x11\x91\x25\x23\xc9\x5d\x42\xd5\xff\x7d\x3a\xb7\x2a\x4d\x7f\x25\x24\x0f\xbe\xfb\xec\x3b\x7d\xbe\xef\x74\x52\x9a\x92\x4f\x86\x2f\xc9\xf9\xb7\xaf\x9f\x7f\x2d\xbe\xcf\x49\x2d\x24\xd8\x51\x9a\x8e\xec\x46\x39\xb6\x26\x49\x8c\x24\x24\xf9\x53\x4c\xe2\xdb\x38\x19\x71\x2d\xb5\x21\x8d\x01\x50\xc4\x3a\x66\xdc\x2c\x24\x24\x04\x54\x35\x4b\xee\xc2\x7c\xc3\xd4\xb0\x30\xeb\x56\x4d\xc9\x2c\xf8\xe0\x15\x6b\x07\x7f\x09\x06\x9d\x01\x89\xae\x02\xcb\x3d\x0b\xc5\xf8\xde\x48\x2f\x05\x07\x65\x21\x2f\x26\xb3\x62\x72\x47\x57\x1a\xd1\x2c\xdd\x0d\x29\xfd\x70\x28\x27\xfd\xf8\x14\x5f\x46\xc7\x9e\x8e\xe9\x15\x9a\x2c\x3f\x94\x3b\xa3\xd7\x9e\xe6\xf9\x63\xfd\x15\x74\xa1\x35\xd6\xb7\x6c\x05\x11\xeb\xce\x45\xc8\xb5\xaa\x03\x87\xb3\xbe\x33\xfa\x52\x04\x72\x6f\xa0\x93\x8c\x83\x7d\xb9\x07\x47\xf0\xee\xd5\x87\x23\xf8\x9f\xed\x45\x63\x74\xdf\x59\x5f\x32\xbe\xea\x3b\xaf\x34\xac\x9d\x61\xdc\x21\xaf\xd0\x6a\x87\xe0\x5d\x8b\xf7\x52\xb5\x8b\xe4\xd9\xd2\x85\x0a\xb3\x2e\xa5\xb7\xba\x37\x1c\x7c\x5b\x4d\x6d\xdf\x5a\x6f\x97\xec\x24\x82\xd3\xe9\xbb\x08\xdf\xbc\x7f\x1b\xe1\xf4\xe4\x14\xe1\xcb\xda\x8e\x66\xdf\x4b\xfc\xd1\x7f\x79\xd0\x9d\x07\x22\x86\xcb\xa0\x12\xc6\x5b\xc3\xd1\xe1\x59\x11\xe6\x5e\x69\xb7\x99\xc5\x6d\x1d\xdb\x34\xff\x96\xc2\x01\x49\x66\xe1\xbe\x79\x15\x1e\x9a\xa1\xc9\xd1\x24\xc1\xa4\xd8\xbb\x80\x5f\xa3\xb9\x42\x73\xbd\xbd\xdc\x40\x45\x92\xb2\x17\xb2\xa2\x19\xcd\x9f\x88\x75\x61\xcb\x59\x03\x7f\x8b\xc9\xa3\x6d\x18\xe2\x41\x00\xce\xb4\x68\x7a\x03\xc3\xd0\x7b\x3e\x58\xcb\xb7\x87\x2b\x26\xcf\xcf\x7e\xfc\x9c\x2f\x2e\xfc\xf9\xc5\xd9\x97\xc5\xef\x70\x0a\xa0\x16\x6b\x6f\x37\x98\x5f\xa3\xfc\x8a\x39\x86\x5e\x8a\x12\x9d\x50\x5c\xf6\x15\x20\x6c\x99\xba\xf9\x52\xeb\xd8\xa0\xff\x01\x00\x00\xff\xff\xce\xa8\xa3\x20\x90\x05\x00\x00")

func runtimeSyntaxPkgbuildMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxPkgbuildMicro,
		"runtime/syntax/pkgbuild.micro",
	)
}

func runtimeSyntaxPkgbuildMicro() (*asset, error) {
	bytes, err := runtimeSyntaxPkgbuildMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/pkgbuild.micro", size: 1424, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxPoMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8e\x51\x6a\xc5\x20\x10\x45\xbf\x5f\x56\x31\x4c\x0b\xd1\x67\x71\x01\xa1\x34\x4b\x68\xff\xd5\x80\x31\x62\x43\x4d\x0c\x2a\xb4\xa1\x2e\xbe\x86\x26\xb4\x3f\x03\xf7\xcc\x61\xe6\xa6\x7d\xcd\xfa\x0b\xf0\xed\x15\x01\x25\xdf\x42\xee\x1f\xb1\x69\x4c\xf0\x21\x82\xd9\xf5\x0a\x15\x3f\x93\x25\xb9\x79\x2a\x75\xa6\x1c\xa9\x7c\xc1\x53\xd8\xad\xf7\xe1\x13\x10\x89\x94\xbc\x88\x01\x15\xbd\x63\x69\xcf\xd4\xd6\xd4\x5e\xea\xa2\x9d\xad\xaf\xe0\xb8\x27\x79\x7f\xe1\x31\xce\xee\x3d\x8f\x5e\x9b\x0f\x40\x32\x14\x21\xba\xb4\x69\x63\x3b\xa5\xe8\x03\x11\xc3\xb7\xe2\x77\x7a\x54\xfa\xd5\x9f\x5c\xb4\x76\x05\xfc\xa7\xb1\xbf\x65\xb4\x13\xe0\x8d\x01\x2b\xc0\x6e\x0c\x9b\x9f\x00\x00\x00\xff\xff\xa8\x71\xda\xbb\xdd\x00\x00\x00")

func runtimeSyntaxPoMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxPoMicro,
		"runtime/syntax/po.micro",
	)
}

func runtimeSyntaxPoMicro() (*asset, error) {
	bytes, err := runtimeSyntaxPoMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/po.micro", size: 221, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxPovMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x92\xc1\x8e\xd3\x30\x10\x86\xef\x7d\x0a\xe3\xac\x50\x5a\x89\xf6\xbe\x6c\x57\x42\x5c\xb8\x81\xf6\x80\x84\xea\x52\x26\xce\x34\x31\x38\xb6\x35\x76\xa0\x11\xc3\xbb\x33\x09\x97\x5d\xaa\xdd\x53\x66\x26\xff\x7c\xf3\x7b\xec\xaa\x52\x1f\x90\x50\xb9\xac\x20\x28\xbc\xc0\x90\x3c\xaa\x73\x24\xf5\xe9\xe3\xe7\x37\x0f\x30\x6d\x57\x55\xb5\xca\x53\x28\x70\x51\x5a\x6a\x5a\x69\xb3\xad\x53\xfc\xc9\x92\xb0\x7c\x09\xa6\x39\x7c\x78\xf7\x65\x7d\xa3\x57\x36\x7a\xe9\x6d\xc8\x75\x7d\xb1\x93\x20\xf5\xd7\xc3\xe1\x36\x27\xb0\x78\x7b\x3c\x6e\xaa\xc7\x49\xdd\xa2\xf5\x40\xb8\x7e\xda\x36\xa1\xf7\xf1\x97\x8c\xb9\xab\x73\xea\xc5\x1c\xdb\xc9\xbb\xd0\x22\x71\x21\x08\xd9\x43\x41\x1e\xa0\x90\xbb\x30\xc5\x32\x67\xd9\x82\xc7\xb5\xb9\x7f\x16\x14\xa9\xf4\xb1\x23\x48\xbd\xb3\xec\xa3\x85\xe2\x62\xe0\x31\xf1\x22\xe4\xd6\x11\xda\xa5\x64\xbd\x4b\x09\xdb\x53\x33\xbd\x84\x3b\xc7\xee\x54\xa6\x84\x3c\x07\xf1\x7c\xce\x58\x96\x10\x7c\x61\xea\x1a\xe1\xe5\x02\xc1\xe2\x3f\xc3\xb2\xcd\xe1\x8a\x46\xd8\xca\x6e\x84\x55\xf0\x52\x46\xba\x76\xbf\x08\xe4\xbf\x9f\x93\x53\x8e\x23\x09\xaf\x01\xfb\xa3\xa3\x38\x86\xf6\x59\xbd\xf8\xe0\xd8\x7c\x97\xf3\xb0\x85\x01\x09\x1e\x29\x3b\x42\x94\x2b\xa9\xcd\x6f\x36\x7f\xd8\xd4\x6c\xd6\x6c\xde\xb2\x39\xb2\x39\xf0\x37\x36\x86\xcd\x0d\xdf\xf1\x3d\xbf\xe2\x3d\xbf\x66\xc3\xff\x5d\xcd\x00\x1d\xca\x4b\x58\xe6\x8c\x61\xde\xd7\x6c\x26\x71\x1e\x9b\x25\x58\x46\xc9\x93\x7a\x1f\x87\x41\x84\xaa\x97\xa6\xc5\xbf\x0b\xdd\x13\x50\xe3\x47\x54\x7a\xb7\xdb\x6e\xf4\x75\x5d\x76\x47\x65\xaf\x77\x66\xa3\x15\x86\x76\xaf\xcd\x66\xa7\x57\x7f\x03\x00\x00\xff\xff\x4d\x2c\x90\x3b\xaa\x02\x00\x00")

func runtimeSyntaxPovMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxPovMicro,
		"runtime/syntax/pov.micro",
	)
}

func runtimeSyntaxPovMicro() (*asset, error) {
	bytes, err := runtimeSyntaxPovMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/pov.micro", size: 682, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxPrivoxyActionMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x54\x4d\x8e\xe2\x3c\x10\x5d\x37\xa7\x88\xfc\xb1\x80\x2f\x53\x1c\xa0\x37\x7d\x85\xd9\x03\x2d\x19\xbb\xe2\x58\x24\xae\xc8\x2e\xfe\x84\xe7\xee\x53\x01\x0c\x43\x8b\xd9\xce\xaa\xb3\x8a\x5e\xfd\xbe\x57\x4f\x4e\xa7\xc0\xfa\x58\xa9\x9f\xd1\xef\xe9\x78\x02\x6d\xd8\x53\x50\x95\x5a\x2d\xae\xbf\x53\x35\x99\x18\xea\x28\x56\x9b\xe8\x5d\xcb\x11\x6d\x55\x55\x6a\x79\x5e\xbe\xa7\x41\x1b\x7c\x5f\xaf\x57\xb0\xe9\xc8\x6c\x67\xcb\x3b\x74\xfe\xb5\xce\xd3\xb9\x7a\x2a\x74\x11\x31\x7c\x29\xac\xff\x56\xf8\x6a\x24\xcc\xb4\xb5\xd0\xa2\xb6\x18\xb3\x69\x75\x70\x08\x47\x68\x28\x1e\x74\xb4\x68\xc7\xbf\x6c\x3a\x8f\x81\x6f\x49\xd0\xf8\x8e\xf1\x2b\xc8\xda\xb9\x11\xa4\xc0\x23\xca\xa7\x01\x81\xf6\x18\x0f\xd1\x33\x66\x13\x77\xc1\xb4\xf0\x54\x52\x40\xdf\x40\xa0\x80\xd0\x6b\x36\xed\x1d\x0c\x86\x7a\x1f\x1c\x18\xa2\xad\xc7\x54\x70\xda\xb1\xa3\x17\x78\xc2\x28\xc3\x4a\x67\x8b\x3a\x78\xe9\x87\xe0\x7c\x93\xb2\xa5\x43\x70\x51\x22\xd0\x32\x0f\x20\x89\x49\x4e\x90\x1b\x9d\x18\x44\x05\x1f\xd1\x70\xca\x37\x5a\xc2\xd7\x20\x30\x1e\x19\x7a\xb2\x98\x6f\x4a\x5c\xc8\x44\x2f\x80\x48\x64\x3b\x04\x9d\x00\xfb\x81\x4f\x60\xc9\xec\x7a\xa1\xf5\x47\x40\x66\x3b\x49\x94\x6c\xb9\xbc\xc1\x81\xa1\x13\x5d\x77\x77\xb0\xa8\x64\x7d\x1a\x28\xf9\xd1\x10\xd7\x40\x13\xa9\x2f\x24\x2e\x80\x88\x23\x5b\xf8\xc6\xcb\x25\x92\x88\x72\x6b\x10\xb1\x91\x6d\x4a\xd2\x4e\xd8\x83\x34\x97\x1d\x3a\xdf\x7b\x1e\xfb\x07\xe1\x94\xef\x07\x90\xf9\x89\xef\x9d\xf2\x10\x71\x3f\xce\x17\x8d\xe5\x37\x5d\xd4\x28\x42\xe4\x27\x29\xcb\xb1\x9f\xc1\xdb\xb1\xd3\xb5\xb4\xdc\x02\x28\x74\x27\x01\xf9\xca\xff\x6a\x5f\x8c\xaf\x0d\xbb\xaa\xbf\x7d\xf7\xed\xbb\x7f\xe2\xbb\xfe\xb2\xa2\xae\x1e\x9f\x5a\xad\x16\x1f\xcf\xb6\xdc\x74\xda\x6c\x2b\x35\xfb\xcc\x8f\x67\x73\x3d\xff\x6f\xb6\xfc\x3c\xaf\x17\xff\xcf\x3f\xa6\x25\xfd\x47\x79\x71\x1f\x69\xf5\x23\x38\x3e\xaa\xea\xad\xae\xea\x5c\xd5\x6f\xb5\x9a\xfc\x0e\x00\x00\xff\xff\x0c\x31\xb0\xba\x09\x06\x00\x00")

func runtimeSyntaxPrivoxyActionMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxPrivoxyActionMicro,
		"runtime/syntax/privoxy-action.micro",
	)
}

func runtimeSyntaxPrivoxyActionMicro() (*asset, error) {
	bytes, err := runtimeSyntaxPrivoxyActionMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/privoxy-action.micro", size: 1545, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxPrivoxyConfigMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x52\xcd\x72\xdb\x3c\x0c\x3c\xc7\x4f\xa1\xd1\x97\x43\xfc\xb9\x68\x2f\xed\x25\x97\xbe\x42\xef\x1e\x67\x06\xa2\x20\x89\x63\x8a\x64\x41\xd0\xb1\xa7\x7c\xf8\x82\x8a\x65\x3b\xbd\x88\xe2\xe2\x6f\x77\x89\x74\xf1\x82\xe7\xa6\xfd\xc5\xf6\x14\xce\x17\x30\xc1\x0f\x76\x6c\x9b\x36\x7e\x00\xdf\x3e\x80\xe7\x76\xb3\x31\xc1\x05\x6e\xcc\x05\x7d\xd3\xbe\xa0\x31\x14\x05\xac\x17\xe2\xfa\x47\x3d\x30\xfd\xce\x94\x24\x15\x34\x62\x83\x4f\x83\x75\x54\xb0\x9f\xad\x07\xec\x7b\xa6\xa4\x11\xe7\xc2\x3b\x98\xd1\xae\xc9\x60\x38\x7b\x33\x59\x3f\x96\x2e\x0f\x03\x31\x38\x3b\x5b\x29\x26\xcc\xb1\x56\x68\x1f\x70\x74\x22\x57\x2a\x8f\xde\x72\x3d\x3d\x2d\x03\x20\x4d\xc8\xb5\xb2\xa7\x2e\xd7\xef\x80\xd9\x09\x24\xe2\x93\xf6\x11\x3b\x53\xc8\xa2\xb0\xbf\x40\x65\xab\xe3\xc9\x63\xe7\x08\x1e\x9a\xaf\x10\xf5\x56\xe0\xca\x7b\xc5\x98\xe6\x20\x04\x93\x48\x04\x09\xe3\xa8\x6a\x3e\x47\x6e\xe0\x10\xd4\x03\xe8\x5c\x30\xc7\x54\x54\xb6\x7a\xb2\x88\x57\xfc\x1d\xb9\x5f\x4f\xf5\xe8\xca\x5e\x3b\x08\x5b\x4a\x6b\x04\x52\x2d\xfd\xfe\xcf\x15\x3f\xdf\x7f\x94\x09\x7d\xaf\xe3\x31\x01\xcd\x51\x2e\xd0\x07\x53\x3b\x65\xf6\x09\xc2\xb1\x4c\x21\x89\xc7\x99\xca\x91\x28\x02\x3a\x7b\xa2\x9b\x0d\xce\x26\xa1\xfb\x43\xb8\x30\x56\x33\xf5\x58\x88\xce\x78\x06\xe3\x2c\x79\x81\xbb\xbf\xa9\x44\xe2\x79\xf1\x65\x71\x2f\x72\x5d\x10\xab\x6a\x21\xb3\x2b\x49\xad\x57\x32\x32\x31\xa1\x4a\x2b\x95\x23\xc9\x6d\x60\x8a\x4e\x4b\x1d\xf2\x48\xa0\x32\xe6\x54\x44\x49\xbb\x3a\xf5\xea\x9b\x04\x47\x8c\xea\x63\xb4\x91\x9c\xf5\xf5\x29\x85\x73\x92\x85\xd2\xf2\x77\x9f\x96\xf5\x59\x61\x46\x9f\xd1\x6d\xf7\xfb\xd7\x14\xd1\xd0\xeb\xe1\xd0\x5e\xb7\xb2\x63\x3b\x4e\xd2\x39\x34\x47\x5d\xce\xb7\xf2\x90\xb2\xfd\xef\x65\xff\xf6\xe7\xf0\xf5\xff\xed\xcf\xe7\x35\xfd\xcb\xc8\x44\xba\xc6\x0f\x69\xbb\x7b\x90\xa9\x6f\xda\xa7\x5d\xb3\x2b\xcd\xee\x69\xd7\x6e\xfe\x06\x00\x00\xff\xff\xc7\x01\x8c\x99\x24\x03\x00\x00")

func runtimeSyntaxPrivoxyConfigMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxPrivoxyConfigMicro,
		"runtime/syntax/privoxy-config.micro",
	)
}

func runtimeSyntaxPrivoxyConfigMicro() (*asset, error) {
	bytes, err := runtimeSyntaxPrivoxyConfigMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/privoxy-config.micro", size: 804, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxPrivoxyFilterMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x90\x51\x4b\x86\x30\x14\x86\xaf\xbf\xef\x57\x1c\x4e\x5e\x68\x6b\xfe\x00\x6f\x44\x6a\x99\x20\x11\x26\xdd\xcc\x09\x73\x2d\x93\x4c\x63\x5a\x68\xf9\xe3\x1b\x98\x94\xd1\x6d\x77\xdb\x7b\x1e\x78\xce\x7b\x86\xb9\x1b\xe5\x04\x78\x63\x9a\xb7\x7e\x9a\xe9\x43\xd3\x8e\xda\x20\x60\xe1\xaf\x4f\x07\x8f\x47\xd5\xb7\xbd\x01\x35\xcb\x0e\x00\x4b\xf7\x32\x49\x73\x96\x2d\xe7\x69\xc2\xae\x73\x7a\xc5\xa2\x0b\x96\xd1\x3f\xc3\x3c\x8a\x63\x1b\xde\xb2\xec\xce\xfe\xf6\xe4\x3e\x5c\x49\x2f\x00\x2e\xe9\x3b\x15\x04\xbf\xa4\x95\x69\xea\xc7\xb1\x6a\x5f\xf5\x7f\x9b\x37\xe3\xb3\xac\xb5\xbd\x09\xd8\xaa\x45\xe1\x87\xbf\x17\x91\xea\x09\xd0\x2d\x17\xce\x83\xe1\x45\x2a\x1d\x08\xe1\x9d\xb8\xbc\xfc\x10\xfe\xa9\x17\x3a\x1b\x7e\x56\x1b\xad\x3b\xc0\x1f\x18\xf9\x1e\x1a\x7d\x0f\x78\x20\x40\x16\x20\x07\xdb\xf5\x33\x00\x00\xff\xff\x1a\x56\x23\xb7\x86\x01\x00\x00")

func runtimeSyntaxPrivoxyFilterMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxPrivoxyFilterMicro,
		"runtime/syntax/privoxy-filter.micro",
	)
}

func runtimeSyntaxPrivoxyFilterMicro() (*asset, error) {
	bytes, err := runtimeSyntaxPrivoxyFilterMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/privoxy-filter.micro", size: 390, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxPuppetMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x55\xef\x6f\xdb\x36\x10\xfd\x9e\xbf\x82\x95\x5d\xc4\x72\x1a\x67\x5f\xf6\x61\x41\x96\x64\xe8\x3a\x60\xc0\xb6\x76\x5b\x80\x05\x93\xa5\x84\x92\x4e\x12\x61\x8a\x54\xf9\x23\xb1\x12\x66\x7f\xfb\x8e\x92\x6c\x4b\x4d\x9b\xc0\xb6\xf4\x78\x7c\xf7\xee\xf1\x48\xce\x66\xe4\x0f\x2a\x24\xd1\xad\x30\x74\x4b\x2a\x56\x56\x1c\x3f\x86\x89\x92\x14\x52\x91\x4f\xb6\x69\xc0\xac\x8e\x66\xb3\xa3\x21\x24\xe8\xa1\x80\x04\xeb\x55\xd3\xcc\x83\xa3\xa3\xd9\x4d\xc5\x34\x29\x25\x68\x52\x30\xa5\xcd\x3b\xa2\x25\x31\x15\x10\x21\x55\x4d\x39\x49\x2d\xe3\x48\xa8\xc9\x23\xe3\x9c\xc8\x07\x50\x8a\xe5\x40\x98\xc0\xb8\x1a\x48\xc6\xa9\xd6\xa0\x31\x05\xf9\x44\x15\xad\x41\x81\xd2\x47\x99\xe4\x98\x3e\x55\x5e\xcc\x63\xc5\x0c\x90\x20\x89\xa2\x73\xdd\xd0\x0c\xce\xe3\x78\x11\xd1\xd3\xa7\xd8\x7f\x7d\x77\xfa\xc3\x5d\x7c\x12\x06\x93\x19\xa5\x02\x10\xa8\x70\xee\x23\xce\xf7\x71\xe7\xf1\x89\xd7\x3b\x23\xbf\x31\x6d\x88\x2c\x7a\x69\x5e\x89\x69\x1b\xd0\xef\x08\xe5\x28\x3d\xa3\x26\xab\xb0\x98\x1c\x0a\x26\x60\x27\xa5\x05\xce\xe5\x23\x72\x5e\x2c\xa8\x2d\x81\x6a\x97\xc9\xba\xb1\x06\x94\xcb\x94\x14\x0e\xb6\x90\xb9\x82\x71\xe8\xbe\x52\x9b\x6d\xc0\xb8\x52\x49\xdb\xb8\x4a\x6a\xe3\x98\xc0\xd0\x02\xd5\xbb\xcd\xf7\x5c\x96\x4c\xb8\x9a\x66\xd4\x9a\x4a\x2a\xf6\x44\x0d\x93\x1e\x60\x9c\x72\x86\xd4\xfe\x89\xa3\x46\x57\x67\x5b\x57\x4b\x2b\x8c\x13\xb4\x64\x52\xdf\x61\xd2\x9a\x8a\xfc\xf0\x8a\x8b\x92\x99\x2f\x5e\xfb\xb4\x03\xd6\x65\x1f\x3d\xe7\xd0\x80\xc8\x41\x64\xed\x18\x05\x9d\x51\xde\xcb\x18\xa3\x5b\x5c\xb8\x42\x8e\xa1\x09\xb7\x06\xf5\xc0\xb0\xa4\xe9\xeb\xeb\x0c\xc3\xc0\xeb\x24\xbb\x81\x69\x9e\x01\x9d\xa4\x32\xac\x46\x5a\xc5\x24\xd6\x2e\x0d\x2b\x5a\x87\xad\xb0\xa1\x25\x38\x05\x5a\x5a\x95\x81\x76\x18\xef\xd7\x43\xe3\xf2\xe5\x16\x57\x62\xf7\x90\xdf\x19\xaa\x37\x4e\x03\x4f\xa5\xe4\x40\x85\x7f\xac\x65\x1f\x33\x94\xa0\x75\x75\xb7\x5b\x0e\x9c\xb0\x81\xd6\x43\xdd\x8f\xf1\x59\x0c\xcb\x5b\x67\x31\xda\x3d\x70\x24\x68\x6d\xad\xa0\x91\xee\xa9\xd0\xee\x49\x0a\x70\x4f\x0d\x52\x3b\x2a\x32\x64\x08\xd7\x97\xc1\xeb\xb6\xe9\x1a\xdd\xf5\x5d\xe5\x58\xe1\x80\x6b\x70\x16\x8d\x2a\xb0\x39\x2a\x2c\xcd\xe8\xd1\x44\x05\x39\x09\x16\x3f\xba\x53\xf7\x9f\xbb\x0c\xfb\xb6\x7d\x2f\x05\x8a\x11\x66\xba\x3d\x52\x6e\x71\x77\x2c\xd6\x73\x77\xed\xae\xaf\xc3\xab\xf5\x45\xf4\xd3\xe9\xbf\xf1\x49\x84\x2d\x8f\x0f\x77\x7e\xa7\x2c\x03\x3f\xff\x2f\x9b\xb6\x24\xd0\x6d\x9d\x4a\xae\x77\x89\x6a\xac\x0e\xbb\x06\x19\x22\xd2\xfd\xc5\x2e\x09\xcf\x77\x93\xe3\x13\x2f\xc9\xcf\x85\xd2\x72\xaa\x08\x6c\x1b\x34\x5c\xe3\x1a\x4e\x55\xec\x69\xce\x16\x51\x72\x16\xbb\xc5\x7a\x7d\x16\x86\xcb\xb3\x88\xc9\x7a\x8b\xf9\x49\xf0\x56\xad\x9f\x71\xec\xa5\x1b\x7b\xc1\xb1\xf5\xcb\x6e\xd0\x27\xf8\xbb\x42\xab\xc8\xd0\xdf\x3e\x0d\x15\x3e\x0b\xc1\xb3\x05\x37\xe8\x7d\x8a\xab\x6d\x58\xb6\xd1\xf7\x04\x73\x72\xb6\x01\xf2\x76\xfb\x6c\xf0\xe8\x79\x59\x11\x72\x83\x1b\x16\x08\x55\xe0\x99\x82\x5c\xda\x94\xc3\xe9\x67\x8b\x8d\xa2\xab\x80\x2c\x8c\x24\xd6\x8f\x13\xec\x20\xdc\x57\x75\xb8\xfa\x8a\x83\xf7\x51\x72\x1f\x2f\xef\xbd\xd2\xed\xfa\xd9\x0b\x45\x85\xbd\x34\xa3\xf0\x40\xc4\xf3\x61\x44\x0c\xf9\x40\x31\x9c\x35\x68\x5f\x12\x74\xa5\x05\x58\x5a\xe0\x59\xa2\x3f\xff\x89\xaf\x0e\x4c\x7b\x04\x23\x43\x44\xc2\x3d\x72\x11\x25\x97\xf1\xf2\xf2\x10\x11\x45\x49\x8c\x11\xf1\x01\x99\x47\xc9\x1c\x91\xf9\x01\x49\xa2\x24\x41\x24\xd9\x23\x6f\xa2\xe4\x4d\xbc\x7c\xd3\x29\xfe\xb0\x5f\x25\xa2\x6d\xaa\x0d\x33\xd6\x6f\xbb\xbd\x53\xa5\x44\x53\xb5\x3f\x86\x27\x25\x11\x3d\x54\xda\xd9\xd8\x99\x3c\xef\x3d\x0e\x56\x5f\x3f\x60\xbf\x61\x94\xc6\x9f\x6f\x18\x75\x8c\xe5\x1f\x77\x46\x1d\xa3\x51\xc7\x9d\xfc\xcf\x8f\xf1\xd4\x27\x0f\x4c\x6c\x42\x60\xec\x92\x1f\x9f\x98\xe4\x81\x89\x47\x1e\x98\x58\x84\xc0\xd8\xa1\xf7\xd8\x68\x70\xd8\x4a\x59\x4b\x51\xdb\x2c\x4a\x9e\xe3\xd5\xd2\x33\xcc\xe6\xd3\x2b\x65\x08\x18\x47\xf8\x10\x5f\x74\x77\x8b\x21\x1d\x9a\x5d\x53\xb5\xf9\xf2\xfa\xea\x67\x2e\x6e\x6f\x6f\xdd\xcd\xc7\x9f\x3f\xba\x5f\x7e\xbd\xfd\xfd\x83\x5b\x5f\xf9\xff\xb0\x63\xb8\x51\x78\xde\xfb\x2b\xb7\xbb\xde\xf4\xf8\x04\x18\xdd\x79\x27\xfe\xb2\xfd\x3f\x00\x00\xff\xff\x3a\xeb\x74\x22\xb1\x07\x00\x00")

func runtimeSyntaxPuppetMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxPuppetMicro,
		"runtime/syntax/puppet.micro",
	)
}

func runtimeSyntaxPuppetMicro() (*asset, error) {
	bytes, err := runtimeSyntaxPuppetMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/puppet.micro", size: 1969, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxPythonMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x56\x69\x6f\x1c\x37\x0f\xfe\xee\x5f\x31\x19\xe7\x7d\x7d\xa4\xde\x14\xe8\xa7\x1e\x69\x73\xd9\x68\xd0\x5c\x88\xd3\x03\x59\x3b\x0b\xcd\x0c\x77\x57\xb1\x46\x1a\x48\x9a\x3d\x12\xe5\xbf\xf7\xa1\x0e\x67\x8d\x38\x5d\x60\xc4\x47\x5a\x92\x22\x29\x8a\xd4\xfe\x7e\xf5\x3b\x59\xaa\xa4\xab\x84\xae\x68\x23\xfa\x41\x51\x35\x37\xb6\x7a\xbd\xf5\x4b\xa3\x27\x7b\xfb\xfb\x7b\x6e\xab\xbd\xd8\x54\x75\x5a\xaa\xab\xfa\x62\x32\x6c\xef\xd6\x7b\x4b\x12\x1d\xd9\xaa\x7e\xbf\x7f\x67\x72\x7c\xff\x90\xf4\xaa\xba\x77\xf4\xdb\x10\xb9\x0e\xab\x70\xf7\xa8\xde\x83\x78\xd5\x8c\x52\xf9\x13\xa9\x2b\xd3\x7c\xa0\xd6\xbb\xbd\xd6\x28\x6c\xd0\x1a\xed\xbc\xd0\x1e\xea\x9a\xc3\x97\x46\x53\x70\xa4\xe6\xe1\xad\x1d\x29\x9c\x09\xe5\xe8\xe8\xa2\xa9\x6f\xc8\x0b\xef\xad\x6c\x46\x4f\xb7\xaa\x98\xcd\x22\xa3\xd4\xb3\x59\x98\xcd\x3a\xd9\xfa\x08\x7a\x82\x39\x9d\xcb\xb8\x6f\xc8\x26\xdc\x2a\xe1\x12\x6a\x84\xa3\x84\x64\x3f\x18\x9b\xc4\xb4\xe8\x29\x29\x32\x6d\xa4\x6c\x5c\x5a\xa0\x66\x5c\xcc\x66\x5f\x59\x37\x1f\x75\xeb\x25\x2c\xca\xc6\xc9\x8e\xb4\x97\x73\xc9\x11\x82\x79\xa2\x71\x41\x0c\x03\xe9\x8e\x89\xda\x86\x66\x9c\xcf\xc9\x86\x56\x28\x25\x1a\x45\xa1\x5d\x62\xa2\x48\xf0\x68\x1c\xa5\xb1\x0b\x6d\x3f\x84\xd6\x90\x6d\xb1\x62\xfa\x41\xaa\x44\x15\x6d\x40\xf5\x87\x71\x21\x3c\xaf\x0c\x5b\x0c\xa3\xf6\xa1\x23\xc5\x71\x0a\x9d\xe4\x6f\xd5\x9b\x2e\xd0\x4a\xa8\x40\x1b\x6a\xe7\x2c\x4d\x1b\xcf\x46\x30\xd6\x86\x89\x87\x15\x73\x65\x84\xc7\x38\xba\x65\x58\x90\xe7\x2f\x6a\x59\x28\xd3\xe0\x2c\xc2\x52\xb8\xd9\x15\x6d\x99\xc6\x75\xd0\x65\x58\xc2\x06\xd9\x05\xa9\x3b\x06\x7a\x18\x3d\x46\x47\x96\x49\xfc\xc8\xea\x20\x59\x60\x0b\x22\xe3\x59\xc1\x0d\xe9\xdc\xd8\xc4\xf0\x07\xe9\xa9\x77\x01\x8a\x5d\x80\x35\x41\x49\xe7\x83\x32\x2d\xef\xa8\x8c\x5e\x84\x5e\x0c\xf8\x36\xa1\x97\x3a\xc0\x13\x0a\x7c\x2c\xc1\xb4\x3e\x18\x44\x32\x18\xdb\x85\xc1\x0c\xf8\xd6\xc1\x0a\xbd\x20\x8c\xeb\x59\xb2\xc4\x22\x39\xe3\xa0\x24\x52\xab\x00\x07\xd4\x8d\x2d\x2f\xc0\x63\x66\xe8\xcd\x8a\x67\x83\xc5\xb0\x42\x72\x60\x82\x38\x76\x48\x46\xba\xc2\x90\xc2\xe0\x94\x84\x8c\x33\x73\xef\x06\x11\x11\x9c\x74\xf8\xc3\x93\x52\xc1\x5b\x1c\x3d\x1f\x83\x1f\x71\x2e\xc1\x6f\x07\x0a\xa3\x96\x7c\xa0\x4c\xd8\xee\x71\xe8\x98\x01\x07\x31\xc2\x86\x95\xb0\x2e\xac\x2d\xbc\x4f\x63\xb2\x6c\x93\x5c\xf8\x28\x87\x92\x5b\x6e\xa0\x56\x0a\x55\xa5\x1c\xae\xd8\xf9\x6f\x64\xd7\x6c\x86\xfc\x8a\xe9\x29\xba\x2e\x51\x9d\x28\xe7\x57\x02\xfd\x90\x68\x4c\xa6\x0c\x63\x22\x65\xcc\x3e\x14\xe8\x05\x8e\x2b\xa7\xbb\x2a\x94\x43\x51\x30\x9f\x5c\xc1\x31\x3a\xf9\xd6\xad\x0a\xc5\x71\x45\x18\x33\x2b\xa2\x9c\x53\x05\x5f\x6b\x00\xfe\xa2\x81\x13\x2b\x81\x6c\x97\xd4\xd2\x67\x50\xe8\xaa\x50\xca\x97\x15\xb9\x93\x28\x72\x26\x01\xb7\x94\xf3\x7c\xff\xb3\x1d\xfd\x98\xfc\xd0\x94\x58\xb4\xd1\x1f\xc9\x9a\x88\x4d\xae\x15\x26\x19\x37\x18\x97\xe9\x3a\x52\x5b\x62\x6a\x4b\x50\x6d\x09\xa6\x2d\x1e\xdb\x1d\x97\x91\x4d\x94\x7d\xe6\xc4\x4a\x60\xc7\x24\x7b\xcd\x58\x8c\xb2\x79\x67\x7b\xbd\xa5\xdd\x61\xdf\x85\x63\x93\xc0\x26\x4b\xb8\x9d\xa0\xba\x9d\xa0\xba\xdd\xa0\xba\xc2\x90\xa5\xa3\x70\x49\x32\xda\xb4\x34\x70\xe1\xaa\xe2\x9d\x44\x86\xed\x57\xb9\xbc\x6e\xd1\x13\x38\xbb\x4e\x0b\x4b\x38\xc7\x15\xee\x84\xed\x4e\x2d\x4c\x0e\x8f\x90\xbc\x4b\x24\xa7\x6c\xd3\xfc\xb9\x31\x57\xe3\x90\xf0\xa9\x5e\x49\x6b\x74\x8f\x34\xcd\xcc\x8e\x4b\x03\x94\xe4\x69\x29\xe6\x99\xfd\xd5\x59\x02\x67\x9c\x2f\x52\x2f\x5e\x1b\x59\x24\x9f\xbd\xca\x34\x96\xe7\x8c\xb9\xe8\x24\xf8\x07\x6d\xaf\x41\x63\x60\xdc\x33\xae\x3c\x76\x1c\x7c\x78\x81\xeb\x6d\xf3\xbf\x2f\x71\x7b\x32\x32\xfe\x19\x27\x3e\xdb\x46\xd9\x95\x57\xe7\x99\x22\xa9\x90\xb2\xeb\x34\x7b\x83\x8a\x2a\x8b\xd8\x79\x6c\x83\x05\x3b\x44\xfa\x06\xde\x48\x1f\xde\xe2\xea\xa7\xc5\x3f\x75\xc3\x65\xe4\x39\x17\xb3\xb2\x12\x4b\x41\x9a\xfc\xc5\x85\x20\xc1\xbf\x51\x3f\xcd\xda\xa5\xc9\x3b\xa4\xe4\x53\xb9\x42\xb5\xcc\x71\x2a\xa7\xc4\x45\xa5\xdc\x7d\xc6\xd7\x5d\x93\xb7\x8c\xfb\x46\x00\xd7\x23\x7d\x8e\x9b\x10\x41\x0c\x67\x44\x4f\xd2\x65\x8f\xf8\x1c\xb1\xcf\x0c\xd9\xac\x88\x1f\xc7\x96\x94\x34\x72\x29\x4b\xaa\x50\x94\x23\x78\x8a\x96\x9a\x74\xe6\x4e\x97\xfe\x16\x7d\xd3\x89\xbc\x43\xd6\xf3\x84\x13\x29\x6b\x8f\x61\x78\x11\x0b\x58\xb6\x30\xb5\x81\x38\xd9\x59\x7f\x9c\x9a\xf7\x0d\xdd\x79\x6d\x87\xeb\x85\xe9\xc6\x6c\xd7\x99\xcc\xe0\x9f\x37\x5c\x37\x93\xd5\x16\xd5\xb9\x11\xed\x55\xe2\xb0\x38\xf2\xe4\x2f\x5f\x85\x88\x4e\x95\x92\x83\x93\xd1\xba\x12\xdb\x8e\xe6\x5c\x65\xbe\xd1\xbb\xf1\x6f\x35\x15\x27\x1f\x1f\x9d\xbc\x9b\x7d\x7f\xf2\xe3\xe5\xbd\xba\x62\x21\x34\xad\x35\xfa\x4f\x91\x80\x53\x3e\x26\x54\x6a\xf6\xdc\xe5\xd1\xef\x63\xca\x87\x06\xdd\xe7\x2a\xa4\x8e\xc7\xb5\x55\x6a\x3c\x71\xa0\x96\x7b\x75\x40\x29\x9d\x63\x70\xdc\x98\xf9\x96\xc5\x46\x8d\xb6\xac\x51\xb7\xb7\x01\x2f\xb1\x30\xb7\xa6\xcf\x8d\x38\x80\x37\x3d\x52\xd0\x5e\xd1\x48\x83\x8a\xd1\x8f\x7d\x52\x1b\x74\x45\x1b\x06\xde\x65\xb0\xdc\x81\xad\x90\xdc\xce\xc8\x8f\xe8\xc3\xde\x6e\xc3\x1a\xd7\x35\xac\x97\xfc\x0a\xd8\x4a\x52\x1d\x07\xa0\xda\x4b\x21\x68\x8d\x15\xde\xd8\xe2\x4f\x63\xe5\x62\xe9\x17\x96\x08\x25\xe0\xe1\xe4\x78\x7a\x78\x99\x5e\x73\x68\xbc\x37\x18\x77\x1c\x9f\x4e\x7e\xfa\xf9\xbb\x7b\xc7\xe1\xc1\x9d\x8b\xff\x3d\xbc\xc4\x3b\xf1\x17\x7c\xbf\xe2\xbb\x8f\xef\x04\xdf\xff\x93\x8a\x41\x58\xf0\x2f\xc9\xd1\x6d\x4a\x0e\x8f\x3e\x7d\x66\xe1\x8b\x29\x0f\x79\x57\x3d\xc6\x97\xdb\x2d\xef\xbe\x69\x3c\x13\x3e\xc9\xd8\x31\x63\x62\x7f\xcd\x37\x3d\xb8\x9c\xbe\x3f\xb8\x3c\x9e\xbe\xbf\xb8\xb8\xc4\xa4\x8e\x4b\x9f\x7e\xf8\x3c\xb9\x5e\xc2\xa4\xfe\x5a\xae\x86\x5c\x5d\xe4\xea\x28\x57\xef\xca\xd5\x49\x2e\xbe\x04\x63\xc8\x1a\x85\xf4\xfb\x62\x40\x9f\xbc\xda\x9f\x1c\xdf\xcd\x5c\x78\xdf\x5c\xfd\x17\x2f\x76\xb6\xfe\x41\x8d\xdf\x21\x6f\xcd\xcf\xe8\x0a\x0f\xb6\xb8\x52\xdf\xce\x7b\x70\x70\x70\xc8\xee\x7d\xe1\xc5\x4a\xbd\xf7\x6f\x00\x00\x00\xff\xff\x02\x55\x6f\xbe\xdd\x0b\x00\x00")

func runtimeSyntaxPythonMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxPythonMicro,
		"runtime/syntax/python.micro",
	)
}

func runtimeSyntaxPythonMicro() (*asset, error) {
	bytes, err := runtimeSyntaxPythonMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/python.micro", size: 3037, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxRestMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x90\xcf\x6e\x83\x30\x0c\x87\xef\x3c\x85\x95\xec\x04\x03\xa9\xdd\x76\xa9\xc4\x75\x0f\xb0\xf6\x56\x1a\x08\xc1\xa3\x51\x43\x22\x85\xec\x0f\x9a\xf6\xee\x4b\x20\x48\x2b\xe2\x62\xf9\xfb\x7e\xc4\x36\xa5\xf0\x6a\x2c\x58\x3c\x9e\x92\x71\xd2\x8e\x7f\x03\x79\x3b\x9e\x08\x90\xaa\xb0\x38\xba\x87\xa5\x0a\x45\x42\x41\x3a\xae\xa4\x18\x13\x2a\x8c\xf2\xa9\x81\xf7\xe8\x23\xde\x48\xcf\x2c\xbd\x54\x69\x70\x5a\xa3\xba\x64\xe1\x16\xbb\xc0\x16\x9a\x85\x22\x08\xc2\x74\x08\xad\x32\xe2\x16\xb5\xd6\xca\xfe\xea\x66\xf9\x70\x08\x86\x92\xfa\xe6\xc3\xef\x68\x51\x0b\x5c\x2d\xf5\x81\x40\x9a\x33\x6b\x2e\x59\x53\xff\xec\x1e\xf7\xbf\xeb\xdf\xa2\x31\xa1\x52\xe6\xcb\x3b\x51\x6a\x02\xef\xa4\x45\xe1\xe4\x27\x8e\xe0\x15\x61\x86\xc1\x8f\x3c\xc6\x84\x98\xb8\x06\xc2\xaa\xa2\x2a\xa0\x48\xe7\x15\xb9\x36\x7a\x19\xc0\x71\xdb\xe3\x56\xad\xeb\x55\xbc\xee\x36\xcf\x32\x4a\x69\xe6\xd1\xa6\x1b\xd6\xae\xd2\x6c\xc9\xec\x93\xcd\xe5\x58\x59\x96\x91\x3d\xfd\xbf\x1a\xcb\xf3\x3c\xf6\x9f\x63\xbf\xb7\x88\xf3\xb4\xf3\x17\xe1\xcb\xdd\x75\x18\x21\x24\x80\xbf\x00\x00\x00\xff\xff\xdb\x43\x1b\x17\xd6\x01\x00\x00")

func runtimeSyntaxRestMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxRestMicro,
		"runtime/syntax/reST.micro",
	)
}

func runtimeSyntaxRestMicro() (*asset, error) {
	bytes, err := runtimeSyntaxRestMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/reST.micro", size: 470, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxRpmspecMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x54\x61\x6f\xdb\x36\x10\xfd\xdc\xfc\x0a\x81\x53\x10\xc9\x6e\x0c\x03\x49\xdd\x26\x58\x17\xa4\x4b\x30\x14\xc8\xea\xc0\x69\xf6\x61\x96\x2d\xd0\x34\x2d\x13\xa1\x48\x8e\xa4\xdc\x78\xbd\xfd\xf7\x1d\x25\xc5\x4e\x53\xd7\x0d\x90\xbb\xc7\xe3\xf1\xf1\x9d\xef\x28\xb7\x56\x9e\x3e\x46\x64\x64\x4a\x67\x38\x23\x11\xc9\x7a\x01\xc4\x35\xb2\x4d\x34\x26\x07\x07\x4c\x4b\x6d\x23\xb6\xa6\x2a\xc2\x9d\x5f\x93\x8f\x4c\x2b\xb8\x7e\x64\xb2\x72\x62\xc5\x87\xae\xc1\x73\x44\xe9\x39\xf9\x2e\xfb\x43\x25\xe4\xfc\xd2\xb2\x25\x6c\x90\xf0\x9c\xf9\xca\x72\xb7\x65\xa9\x13\x5a\x9e\x80\x77\x31\xfd\xae\xd5\x42\x0a\xe6\x1d\x0c\x67\x4e\x4b\xee\x91\xe0\xd6\xea\x95\x98\x23\x18\xf1\x7f\x2a\x61\x9f\x81\x2c\xe9\x75\xb2\x14\xae\xd5\x92\x2a\x86\xf1\xbb\xaa\x28\xb8\xc3\xc3\xb5\x8c\x2d\x57\xbd\x7c\x76\x9a\xe9\xb2\xe4\x6a\x1e\xa8\x39\x86\xf1\x9c\x31\x92\x63\xc8\xef\x2c\xef\xda\x68\x54\x7e\xc7\xad\xa0\x12\x3e\x69\xa7\x2b\xcb\x38\x02\x43\xfd\xee\x2a\x2e\x2b\xaf\x03\x6f\xf0\x41\x3d\xb4\x81\x80\x77\x57\x6d\xd6\x56\x14\x4b\x0f\x37\x82\x71\xe5\x38\x2a\x2a\x4b\x6a\xd7\x4f\xbe\x2d\xf4\x4a\x38\x6f\xc5\xac\xf2\x02\xbb\xf3\x17\x56\xa0\x2d\xdc\x52\xf6\x40\x0b\x6e\xe1\x0f\xab\x2b\x03\x77\xb5\xb8\x71\xff\xf8\x6c\xd2\xc1\x3d\x14\xd8\xe2\xe6\x37\xd0\xda\x87\xa2\x17\xe2\x71\x97\x8e\x4f\xb4\xe4\xc8\x6b\x5d\xe0\x1f\x71\xc9\x29\x4a\xb9\xb7\x12\xee\x47\x37\x2f\xf3\x9d\xa7\xd6\xbf\x27\xd3\xa4\xb9\xb1\xb9\x2b\x25\x11\xaa\x7a\x4f\x5e\x72\x27\xe2\xe4\xdd\x00\xc4\x69\x30\x6f\x82\x19\xa0\xa1\x7e\x29\xf1\x1e\x41\x07\xa7\x40\xa5\x59\xd2\xc6\xf2\xd5\x9b\x0d\x18\x34\xc8\x30\xfa\x04\xf9\x6a\x0b\xde\x82\x33\xd4\xb2\xc6\xae\xce\x1a\x3f\x38\xa5\xb6\x5c\x9d\x48\x08\xee\x74\xd6\x38\x59\x82\x30\x0e\x4a\x34\x5c\x82\x31\xac\xfe\x17\x0e\x5b\x8a\x03\x81\xd8\x6c\x21\xaa\x29\x07\xef\x1e\x6a\x53\x0a\xe5\xe1\xae\x10\x60\xdd\xa0\xdf\xef\x83\x38\x79\xdb\x07\x77\x72\xd6\x7f\xac\x2d\x28\x4d\xc3\x20\x7f\x57\xed\x22\x84\x41\x2c\x54\xeb\xb5\x0b\x0b\xed\x36\x99\x6b\x2e\xa5\xfe\x12\x11\x92\x64\x59\x0f\xc6\x53\x32\x49\x3b\x04\x8e\xda\xd5\x11\xae\x8e\x9e\x52\x67\xf5\x64\xb4\x07\xf0\x8f\x1c\x22\x3f\x70\x89\xad\xc1\xdf\x1a\xe1\x1c\xdb\xa9\x38\x14\x52\xcf\x70\x3e\x2b\xd5\xac\xd3\x1f\x9f\xcf\x2f\x92\xf1\xe5\xf1\xdf\x39\x3d\xfe\x37\xc7\xe1\xc8\x27\x9d\x1f\x26\xb7\x5d\x3e\xcc\xbe\xb6\x9d\xcd\xfe\xfb\x79\x6a\x9e\xef\x4f\x26\x59\x9c\x8c\x6e\xff\xcc\x3f\xdc\x7f\xbc\xb9\xca\x47\xc3\xe1\xe7\x34\xfb\xed\xdb\xcc\x12\x47\x1a\x3f\x5d\xa8\x76\x7a\x98\xcc\xc2\xe8\xc6\xc0\xf0\x95\x17\x5c\xea\x02\x11\x67\x0f\x18\xc0\x01\x55\x31\xd6\xef\x98\x15\x26\x3c\x8a\x74\x0f\xcb\x42\x48\x6c\xb0\x50\xa8\x53\xca\x18\x4c\xf3\x6e\xc0\x58\x6e\xe2\x7d\xe7\x30\x21\x24\x55\x2a\x58\x6f\xa9\xc2\x29\xd1\xce\xd7\x26\x04\xd1\xd5\xd1\x7d\x1c\xf8\x6a\x8b\xf0\x46\x5b\x2f\xd4\x13\x6a\x49\xda\x15\xa2\x15\xee\x2e\xd6\x4d\x41\x2f\x18\x67\x12\x25\xe3\x74\x4d\x61\x3c\x3e\xc7\x59\x67\xfc\x7c\x32\x49\x7f\x49\xc6\xd3\xaf\x93\x5e\x27\xbd\x88\x37\xe9\xb2\xe2\xa1\xd1\xd3\xac\xd3\xeb\x6c\xa2\xaf\x0b\xcb\xb9\x8a\xc8\xb3\xc3\xdd\xed\xa6\xe5\xf3\x88\xbc\xea\x46\x5d\x88\xba\xaf\xba\xdf\x5e\xfc\x25\x7c\xcd\x5f\xd7\xc3\x4d\x3e\x0f\xaf\x86\xe7\x17\xe4\xe0\xff\x00\x00\x00\xff\xff\x20\xc8\x4e\x1f\x5a\x06\x00\x00")

func runtimeSyntaxRpmspecMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxRpmspecMicro,
		"runtime/syntax/rpmspec.micro",
	)
}

func runtimeSyntaxRpmspecMicro() (*asset, error) {
	bytes, err := runtimeSyntaxRpmspecMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/rpmspec.micro", size: 1626, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxRubyMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x54\x6b\x6f\x22\x37\x14\xfd\xdc\xfc\x0a\xc7\xc3\x0a\x86\x14\xe8\xd7\x56\xd9\x25\xdb\x2c\xbb\x8d\xb4\x4d\xd4\x34\x6a\xa3\xce\x03\x3c\x33\x17\xb0\xf0\xd8\xc4\x8f\x05\x1a\xe7\xbf\xf7\x7a\x12\x5e\x45\x2b\xc4\xd8\x3e\xd7\x3e\x3e\xf7\xf8\xda\x51\x44\x7e\x03\x0d\x84\x1b\xc2\x24\x81\x35\xab\x97\x02\xc8\x54\x69\x72\xef\x8a\x4d\xff\x2c\x8a\xce\xcc\x46\x5a\xb6\x26\x34\x00\x94\xd0\xb4\xaf\x8b\x16\xb6\x5f\xa0\x9e\x72\x01\xd8\x2b\x95\x9c\xf2\x59\x5f\x3b\xec\xdf\xb3\x05\xbc\xc1\xd7\x6c\xf9\xd6\xfb\x8b\xcd\x34\x93\xb6\x19\x9d\xcd\x81\x55\xa0\x09\xcd\xa3\xf3\x7e\x77\xd0\x01\xf9\x8d\x5c\xc4\x43\x8d\xe4\x1d\xe2\x5b\x31\x3d\xc3\x3d\xc9\x47\x53\x72\x5e\x80\xe5\x25\x13\x44\x70\x63\x89\x9a\x12\x0d\x06\xf4\x37\xa8\xc8\x4a\xe9\xca\x9c\x95\x4a\xa0\x4c\x63\x99\x85\x1a\xa4\x45\x65\x45\xe7\xd7\xd1\x97\x9b\x5b\x3f\xba\xfd\xe4\x99\xe0\xcc\x78\x26\x2b\x5f\xc0\x8c\x4b\x5f\x68\x60\x0b\x5f\x32\x03\xbe\x14\xcc\x18\x5f\xc1\x34\xfc\xb9\x84\x2a\x1d\xfa\x4a\x79\x10\x18\xc3\x0f\x9f\x7a\xc0\x65\x20\x8d\xd3\xe0\xa7\x2c\xc0\x68\x88\x47\x1c\x79\x6a\x55\x39\x01\x5e\xc2\xda\x7a\xc9\x85\x97\xca\x7a\x0c\x6a\x40\x06\x14\x58\x3a\xc0\xc6\xea\x4d\xf8\x3a\x2d\xbd\x01\x31\xf5\xc6\x2d\x41\x7b\x3b\x07\xe9\xad\xc6\x19\x4e\x86\xdd\x9d\x14\x80\x42\x9c\xb4\xc8\xb3\x0a\xc1\xd5\x1c\x2d\xf2\x1b\x0e\xa2\x8a\xd3\x82\x06\x27\xae\x95\xc4\x14\xa5\xdd\xe6\x5b\xbe\x8d\x09\xed\xa4\x2d\x7f\xe5\xaf\xae\xe2\x61\x5a\x24\x1f\x7b\xff\x64\x17\xc9\x4f\xbd\x9f\xb1\x33\x66\xbd\x7f\xb3\x6e\xb3\x3a\x9c\x19\xa1\x66\x53\x17\x4a\x18\xfa\x7f\x8a\x0e\x8f\x91\x26\x21\x3f\x64\x3e\x8f\x7f\xd9\xae\xce\x2e\xde\xb6\xfe\x53\xd5\x40\x9c\xe4\x4f\x0e\x88\x9d\x73\x39\x33\x64\x05\x64\x15\x56\x5a\x15\x8c\x97\x15\x51\xce\x9e\x08\xc3\x73\x18\x8f\x3f\xdf\x7c\x1d\x8d\xc7\x7e\x3c\xfe\x7a\x73\x8b\x9d\x6d\x3a\xf7\x30\x73\x82\x69\xac\xb4\x25\xba\x65\x38\x2e\x3a\x59\x3f\xe8\x24\xf9\x20\xf3\x9d\x34\x1d\xc4\x71\x77\x90\x70\x55\xaf\x31\x1f\x42\xdf\xe9\xf4\x19\x63\x2f\x4d\xec\x05\x63\xe9\xcb\x36\xd8\xe8\x9d\x83\x10\xc8\x53\xd7\x41\x19\xee\xc0\x64\xd8\x20\xd4\x36\x97\x64\x52\xb0\x72\x81\x05\xb5\x30\x13\x82\xdb\x09\xbe\x00\xf2\x6e\xfd\x8c\x89\x99\x97\x3e\x21\x0f\x73\xac\x2e\xc2\x34\x04\x26\x5a\x29\x57\x08\xe8\x3d\x39\x65\xb9\x99\x53\xd2\xc1\x84\x5d\x88\x13\x3c\x48\xac\xc7\x3a\xee\x9f\xc8\x9e\x24\xf9\x24\xeb\x4e\x82\xce\x75\xfa\x1c\x64\xa2\xbe\x57\x61\x56\x07\xf7\x7e\x24\x07\xb4\x50\x9d\x10\xe0\x51\xe4\xb4\xc9\x8d\x62\x6e\x34\x10\x25\x7f\xfc\x9d\x0d\xf7\x64\x3b\x04\x67\xc6\x88\xc4\x3b\xe4\x32\xc9\x3f\x64\xdd\x0f\xfb\x19\x49\x92\x67\x38\x23\xdb\x23\xad\x24\x6f\x21\xd2\xda\x23\x79\x92\xe7\x88\xe4\x3b\xe4\x3c\xc9\xcf\xb3\xee\x79\x23\x7a\xb4\x3b\x21\x62\x5c\x61\x2c\xb7\xce\xe2\x60\x67\xd5\x4c\xa1\xab\x86\x57\x70\x9c\x15\xd6\xc5\x6b\xb2\x8d\x8f\x8d\xcb\xd1\xab\xc9\x74\x6b\x99\x59\x42\xc9\xf1\x5e\xd3\xe8\x3b\x36\x19\x6c\xbe\x6f\x53\x1b\x93\x6f\x37\x36\xb5\xd1\xa6\x76\x23\xfe\x69\x95\x1d\xbb\x14\x80\x23\x93\x10\x38\xf4\x28\xc4\x8f\x2c\x0a\xc0\x91\x43\x01\x38\x32\x08\x81\x43\x7f\xae\xb1\xce\xe0\xf0\x5e\xd6\xaf\xaf\x50\x94\xe4\xcf\x59\xbf\x1b\x48\xa2\x16\x3d\x89\x1e\x86\x43\x3c\xb8\x14\x5e\x60\x8a\x36\x96\x27\x77\x01\xbf\xda\xbe\xa7\x97\x97\xbd\x61\x7b\x38\xba\x7b\x68\x0f\x29\xc1\xc7\xe9\x3d\xcd\x71\xb0\xbf\xa4\x81\x1e\xcf\xa9\x66\x7a\x01\x7a\x4b\x62\x55\xa5\xf0\x7a\x3f\x3e\x3e\xfa\x87\xbb\x4f\x77\xfe\xf3\xcd\xe3\xef\x23\x9f\x0e\xc3\x2f\x3c\xb3\xff\x05\x00\x00\xff\xff\x3e\x50\x3e\x0c\xfb\x05\x00\x00")

func runtimeSyntaxRubyMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxRubyMicro,
		"runtime/syntax/ruby.micro",
	)
}

func runtimeSyntaxRubyMicro() (*asset, error) {
	bytes, err := runtimeSyntaxRubyMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/ruby.micro", size: 1531, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxRustMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x53\xd1\x4f\xdb\x3e\x10\x7e\xef\x5f\x61\xd2\x9f\xf4\x83\xb2\x36\x6c\xd2\x1e\x86\x84\x26\x04\x4c\xda\xc3\x60\x62\x7d\xa8\x46\xd0\xe4\x24\x97\xd6\xc3\xb1\xa3\xf3\xa5\x50\x76\xfb\xdf\x77\x76\x93\x21\x31\x55\x71\x1d\xe7\xbb\xfb\xbe\xfb\x7c\x37\x55\xd7\xda\x79\x55\x79\xd7\x98\x75\x8f\x9a\x8c\x77\xaa\xf1\xa8\x6e\xfb\x40\x93\xa9\xba\xf0\xdd\x0e\xcd\x7a\x43\xea\xdd\xc9\xdb\xf7\x6a\xb9\x81\xf4\x45\x7d\x45\xff\x13\x2a\x52\x97\xb0\x05\xeb\x3b\xc0\xb0\x98\x4c\x05\x7f\x7d\xb3\xbc\x3a\x15\x88\x85\xa0\x34\x82\xd2\x5d\x67\x0d\xd4\xca\x38\xe5\xb1\x06\x3c\x55\x56\x13\xa0\xc2\x84\x40\x98\x57\xde\x7a\x34\xcf\xa0\x5a\x4d\xd5\xc6\xb8\xb5\x22\x78\xa2\xc5\x24\xec\x1c\xe9\x27\x95\x45\xb6\x4c\x65\xc5\x02\x43\x36\x11\x82\xa6\x77\x55\x12\x59\x43\x63\x9c\x89\xdb\x49\xca\xa1\x4c\x0d\x8e\x4c\x63\x24\x7b\xd6\x38\x75\xa7\xe7\xcf\x27\xf3\x0f\x3f\xee\x8f\x53\xdc\x2d\x04\xc0\xad\x28\x79\x14\x1d\x61\x08\x09\x24\x62\x5a\x09\x13\x82\xf2\x50\x97\x81\x50\x57\xc4\xda\x9a\xb5\xf3\x0d\xeb\xc0\x25\x54\xbe\x05\x2e\xfd\x13\x97\x08\xfa\x81\xc5\xa9\x40\x71\x25\xe3\x7a\xe0\x4a\x2c\x03\xae\x3d\x83\x0d\xc0\xe0\xfa\x96\x45\x3e\xa0\xe3\x46\xc7\x13\xd1\xa8\x2d\x37\xf2\xea\x91\x4d\xc3\xa6\xed\x2c\x1b\xc7\x16\x88\xad\xf7\x1d\xb7\xba\x42\xcf\xa9\x78\x6e\x7d\x2d\xcf\x16\xb8\xed\x89\x7d\xd3\x04\x20\x51\x21\x07\x88\x52\x1c\x77\x68\xb6\xdc\xf5\xa5\x3c\x08\x8c\xd0\xc8\x43\xbd\x50\x05\xf1\x4f\x80\xb1\x1a\x53\x71\x00\x1b\xf7\xd8\x4b\x25\xa1\x97\xab\x61\xd9\x83\x2c\xda\x10\xd3\xae\x83\xb4\x08\xbe\x77\x41\x37\x10\xff\x24\xbe\xe6\x5e\xe4\x6e\x0d\x52\x2f\x82\x1f\x37\x20\x14\x8f\x1b\x63\x81\x77\x06\x6c\x7d\x54\x94\xc9\xc6\x24\xf7\xaf\x7d\x1d\x54\x46\x5b\x95\x45\xaf\xc5\xe8\x83\x04\xb9\x88\x0e\x69\x47\x23\xaa\x1a\xde\x05\x76\x3e\xff\x7e\x1f\x97\xf1\x52\x96\x51\x53\xc8\xaf\xc4\xb6\x90\x7f\x4b\x92\x43\xbe\x14\x75\x21\x07\xaa\x16\x43\x82\x28\x77\x0c\x16\xa2\x21\x56\xe0\xd2\x2d\xff\x92\x14\xd9\x62\x56\x64\xd9\xeb\x73\x59\x91\xce\xf6\x5f\x8b\xff\x32\x05\xae\x3e\x1b\x90\x63\xd7\x2e\x37\x26\x28\x13\xdc\xff\xa4\x74\x55\xc5\x61\x00\x55\xf6\xf4\xd2\x99\xd9\xf4\xd7\xc9\x9b\xdf\x69\x3c\x48\x06\x41\x52\x28\xdf\xa4\x6d\x48\x62\x24\x58\x91\xf7\xca\x9a\x12\x50\xdb\x41\xc2\x1a\x01\xdc\xc8\x8f\xd3\x63\xa1\xdc\xb3\x17\xd9\xf4\x78\x70\xac\x8d\x4d\xf8\x52\x4b\xbb\xef\xc9\x3c\x5f\xcc\xb2\x57\x87\x43\x9e\xbc\x98\x8d\x59\x66\x79\x4a\x72\x4e\xa2\x41\xe4\xc2\xeb\xdb\x19\x22\xa6\x07\xc5\xdd\x18\x72\xbf\x77\x50\x3a\x3b\xe5\x95\x69\x6a\x35\x3e\xc8\x10\x8f\x8e\xfb\xda\xab\xec\x70\xb5\x5a\xf1\xf2\xe6\xf2\x86\x3f\x7d\x5e\x7d\xb9\xe2\xe2\x63\xfc\x1d\x65\x93\x3f\x01\x00\x00\xff\xff\xa3\xf2\xec\x2e\x35\x04\x00\x00")

func runtimeSyntaxRustMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxRustMicro,
		"runtime/syntax/rust.micro",
	)
}

func runtimeSyntaxRustMicro() (*asset, error) {
	bytes, err := runtimeSyntaxRustMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/rust.micro", size: 1077, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxScalaMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x52\xcb\x8e\xdb\x30\x0c\xbc\xef\x57\x08\x4a\x0f\x6d\x5a\x24\xf7\x45\xb7\xe7\xde\x7b\x4c\x52\x80\x96\xe9\x98\x5d\x46\x32\x28\x3a\x8e\x17\xfc\xf8\xd2\x4e\xb7\xd8\x3e\x0e\x01\x95\xe1\x90\xa3\x19\x6b\xb3\x09\x5f\x51\x30\x50\x0d\x90\x03\xde\xe0\x32\x30\x86\xae\x48\xf8\x96\x80\x61\xf7\xb0\xd9\x3c\xd4\x39\x2b\xdc\x42\x5c\x91\x18\xe2\x71\x57\x97\xd3\xbb\xf8\x90\x0a\x3b\xf3\x2c\x88\xd9\xe1\xcf\xef\x9b\x52\x18\x21\x5b\x33\x2b\x5a\xea\x41\xac\x2d\x63\xc3\x68\x1d\x17\x50\xa3\xac\xc6\x25\x9f\x2d\xe3\x64\xb5\x2f\xa2\xa6\x3d\x55\x53\x81\x5c\x09\xbd\x7b\x2d\xd4\x7e\x38\x7e\x79\xdd\x2c\xd8\xae\x7b\x2f\xa0\xa9\xb7\x2b\xb0\xff\xc4\x1a\x41\x78\xb6\x04\xd5\x35\xd6\x46\x2a\x59\x29\x8f\x68\x2d\x76\x30\xb2\xba\xaa\x21\x7b\xbb\xa3\x0c\xcc\xb3\xb9\x1f\xa3\xce\x04\x75\x94\x6c\x75\xa2\x65\x4a\x7b\x29\x93\x6b\xcf\x36\xf5\xc4\xf8\x46\x36\xcd\x70\xf7\xe3\xfb\xac\x34\x3f\x30\xe9\x5d\xce\x2f\x4a\x6e\x01\x5e\x66\x23\x0f\x8a\x92\xff\x83\xa6\x3a\xbc\x30\x18\x6a\x35\xbc\x29\xe6\xb6\xde\xa5\x57\x16\x5e\xdc\x59\x5d\x8e\x8b\x61\xca\x55\x21\x27\x2c\xdd\x12\x07\x4a\x07\x09\x2d\x83\xd2\x15\x6d\x80\xf4\x0c\x67\xaf\x42\x57\xd0\xa5\x16\x75\x6d\x6c\x6d\xf0\x14\x29\x99\x8f\xea\x5a\x84\x92\x76\x83\xd5\x71\x40\x31\xff\x3e\xc9\xbd\x64\x7a\x71\xe6\xea\xaa\x7a\x90\xec\x54\x4f\xbe\x22\x30\xfe\x93\x69\x3c\x7c\x8f\xa7\x6d\x7c\xc5\x66\x64\x2e\xd3\x6a\x59\xc5\x73\xec\x60\x49\x2f\x8f\xcc\x6f\x06\x1b\x1e\x31\xc4\xfd\x7e\xb7\xfd\x03\xf1\x3b\x89\x3e\xc5\xfd\x71\x1b\x83\x3b\x7f\x8a\xc7\xed\xfe\x37\x41\xe8\xdc\xeb\x5f\xb4\xff\x11\x3f\xfd\x7a\x43\x87\xc3\x63\xf5\x14\xf0\xf1\x74\xfa\xe8\xef\xeb\x67\x00\x00\x00\xff\xff\x05\xe7\x2d\xe9\x9e\x02\x00\x00")

func runtimeSyntaxScalaMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxScalaMicro,
		"runtime/syntax/scala.micro",
	)
}

func runtimeSyntaxScalaMicro() (*asset, error) {
	bytes, err := runtimeSyntaxScalaMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/scala.micro", size: 670, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxSedMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\xc1\x4e\xc3\x30\x0c\x86\xcf\xeb\x53\x18\x2f\x87\x24\x1e\x81\x2b\xbb\xf4\x02\x4f\xc0\x31\x4d\xa4\xb4\xb5\xba\x89\x90\xa2\x74\x02\xa6\x85\x77\x27\x9a\x98\x2a\x4e\x96\xfc\x7f\xf6\xff\x2d\xe7\x74\x0a\xdf\x80\xaf\x2f\xcf\x08\xd8\x99\x85\x47\x81\xcd\x81\xc3\xc8\x19\xd0\x6f\xef\x8c\xee\x8f\xe9\x41\x72\xfa\x04\x52\x6d\x8d\x25\x14\xa1\xb0\x69\x86\x39\xce\x19\x32\x8f\x80\xb6\x78\x61\x34\x39\xfc\x5b\xf6\xf9\x38\x1d\x4e\x67\x8e\x71\xfe\xaa\x4f\x2f\xf6\xf1\xfe\xc9\xd1\xae\xbd\x4e\xdd\xfd\xdc\xb8\xf7\x30\x71\xad\x07\xa8\x50\x67\xfe\x5f\xf7\x31\x0c\x6f\x80\xd2\x17\x6b\xf7\xcb\x47\x18\x78\xef\x9c\xda\x4a\xeb\x2f\xce\x68\xd5\x8a\x1b\xbe\x9b\x32\x73\xaa\x12\x2b\x46\x6b\x78\xf5\xdb\x10\x50\x01\xda\x10\x36\xbf\x01\x00\x00\xff\xff\x41\xf3\xd4\x93\xf0\x00\x00\x00")

func runtimeSyntaxSedMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxSedMicro,
		"runtime/syntax/sed.micro",
	)
}

func runtimeSyntaxSedMicro() (*asset, error) {
	bytes, err := runtimeSyntaxSedMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/sed.micro", size: 240, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxShMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x92\x4f\x73\x9b\x3c\x10\xc6\xef\xfe\x14\x8a\x60\xde\x80\xfd\xda\xed\xb5\xe9\x1f\xb7\x3d\xe5\xd0\x5b\x6f\x45\x24\x95\xc5\x12\x34\x11\x82\x4a\x22\x71\x9b\x27\xdf\xbd\x9b\xc4\x24\x9e\x69\xa7\x33\xb0\xec\xae\x9e\x5d\x76\x7f\x90\x65\xe2\x9c\x02\x09\x1b\x85\xf6\x82\xf6\xba\x1f\x1d\x89\x76\x08\xe2\xf3\x30\x05\x4f\x22\x76\xe4\x9c\x88\x26\xd8\x31\xc5\xcd\x22\xcb\x16\xf1\xa7\x4f\x7a\x2f\xe4\xd7\x73\x29\xa4\xda\xc4\x2e\x7f\x7c\xee\x74\xec\x9e\x9d\x60\xd8\x7d\x76\x9e\x72\x97\xda\x59\x1d\x29\x1e\x4e\x8e\xc2\xc3\x79\x3b\x79\x93\xec\xe0\x9f\x15\xc7\x89\x83\x66\x0c\x43\x6b\x1d\xcd\x8a\x39\x5c\x74\xa4\x1b\x0a\x42\x5e\x64\x27\x9b\xe5\xab\x82\xfc\x8d\x58\x95\xdb\x62\xa7\xcb\x6d\xec\x0a\x81\xbc\x94\x8b\x85\x19\x1c\x2f\x16\x93\x4e\xd4\x93\x4f\xdc\x74\x57\x18\x9e\x01\xcd\xc0\x97\x27\x90\xb3\x2d\x1b\xce\x50\xd4\x06\xb4\xb7\x09\xad\x05\xe3\xc0\x3c\x0b\x58\x61\x3d\xdc\x60\xb4\x43\xe0\xb7\xb2\x49\x4c\x0a\x91\x1c\x99\x84\xd8\xd9\x36\x21\x75\xe4\x91\x6c\x4f\x98\x7c\xb2\x0e\xb7\x1d\x4f\x59\xaa\x9d\x9c\x67\x18\xc9\x58\xed\x84\x2c\xd4\x1d\xd4\x3d\x54\x01\x55\x42\xbd\x85\xaa\xa1\x2a\x7c\x87\x52\x50\x39\xde\xe1\x03\x4e\xf0\x1e\xff\x41\xa1\xfc\xa3\x76\x5d\x7d\x69\xa8\xbd\x0a\xd3\xed\xbe\x3e\x6a\xfd\xb2\xde\xba\xa0\x1f\xe0\xb5\xae\x12\x5c\xc2\x15\xc1\x11\x22\x3c\x7e\x95\x7f\x95\x3f\xd2\x48\x30\x0d\x4c\xd7\x0f\x0f\x76\xb8\xf5\x30\x23\x88\x3d\x30\x52\x06\x32\x0e\x81\x3b\x05\x1a\x19\x02\x97\x3a\xc7\x3d\xb9\xbb\x47\xaf\xaf\x09\xfd\x75\x63\x03\xfa\x1b\x84\x9e\x79\x34\x7c\x33\x0a\x1d\x90\x86\xc9\x74\x98\x7a\x1d\xaf\x19\x08\x67\x8f\x06\x98\xed\x43\x3b\x9e\xa2\xb0\x25\x7f\x45\x15\x57\xd5\xeb\xf5\x9b\x4f\xeb\x6f\x97\xf5\x8a\x03\x55\xa8\xf2\x5f\x05\x2a\x57\x77\xdb\xb9\xe2\xe4\x63\x96\x2f\xb7\x6b\x2e\xbc\xdf\xbe\x14\x1d\xe4\x92\x91\xab\x0d\xaa\x0b\x59\x97\x4b\xc9\xff\xd1\xe9\x21\x3e\xe5\xf8\xf4\x45\xde\x3f\x31\x29\x2e\x50\x55\x67\x71\xd4\x86\xce\xea\xba\xcc\x36\xcb\x5c\x2e\xb2\x27\xd1\xff\xcc\x81\xbc\x90\x47\x82\x15\x9f\xfe\x0e\x00\x00\xff\xff\x40\xd3\xdd\x07\x53\x03\x00\x00")

func runtimeSyntaxShMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxShMicro,
		"runtime/syntax/sh.micro",
	)
}

func runtimeSyntaxShMicro() (*asset, error) {
	bytes, err := runtimeSyntaxShMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/sh.micro", size: 851, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxSlsMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x51\xd1\xae\x94\x30\x10\x7d\xe7\x2b\x26\xc5\x64\x81\xdc\xdd\xf5\xd5\x8d\x31\x31\x46\x9f\xae\x3e\x78\xf5\x69\x59\x4c\x29\x03\x34\xb7\xb4\xd8\x0e\xe1\x92\xf4\xe3\x6d\xeb\x92\x5c\x7d\x99\x32\xe7\x9c\x99\x73\xc8\xe4\x39\x3c\x71\x45\x4f\xc4\xc5\x33\xf4\x52\xa1\x83\xa2\x3a\x39\xe5\xca\x2c\xcf\xb3\xcc\x6d\x9a\xf8\x0b\xb0\xa8\x61\xc0\xea\xc8\xbc\x61\x59\x96\xc3\x47\xbd\xd1\x28\xf5\x00\xa8\xbb\xf8\x48\x0d\x1c\x84\x51\x46\x43\x71\x29\x1f\x42\x2f\xd4\x92\x98\x24\x73\xe1\xe1\x04\x8e\xb8\x25\x58\x25\x8d\x41\xdd\x71\x37\x42\x71\x2c\xb3\x38\x66\xa1\x55\x0b\x02\x6b\xae\x0d\x1c\x6f\xa7\xea\x12\x6c\x5e\xe3\x01\x61\xc1\xf6\xf3\x8b\xc0\x99\xa0\x0f\xb8\x0b\x99\x2e\xe7\x33\xfc\xfc\xfe\xe8\xee\xd2\x75\x94\x14\xb4\x89\x49\x29\xbf\x2d\x53\x8b\xd6\x3d\x00\x92\xb8\x6b\x2c\x76\xc0\xce\xd5\xf5\xed\xf1\xdd\xed\x5c\xb1\xd7\x68\xfd\xbe\xf8\x61\x17\xf4\x5f\xb8\x72\x58\xd6\x1f\xfe\xfd\xd1\x16\x69\x45\xd4\x40\xab\x01\x17\x00\x85\xf0\x7b\x31\x84\xbb\xf9\x60\x23\xcb\x58\x51\xd7\x27\x7f\x6d\xd8\xad\xac\x98\x3f\xdc\xbb\x43\xe8\x0e\x69\xdf\x57\x4e\x22\xed\x7b\xc6\x6d\x35\xb6\xdb\xc7\x37\x54\xca\xac\x29\xc4\x60\xb9\xd4\x3e\x55\xe7\x85\x99\x66\xb3\xe8\xce\xcf\xc2\xe2\x5f\xf0\x57\xfa\x54\xd2\x91\x9f\xa5\x52\xdc\xee\x59\x3f\x99\x69\x42\x4d\xfb\xca\xd6\xca\x61\xa4\x56\xc5\xdb\xb2\x26\x3f\x55\x49\xf4\x68\x06\x29\xfe\x77\x9f\xf8\x10\x06\x79\xb2\x97\xbd\x47\x95\x8a\x43\x6f\xac\xd7\x86\x3c\x0f\x01\xe2\xa5\xfb\x58\x93\xdd\x9f\x00\x00\x00\xff\xff\xb7\x8f\x1c\x2b\x3a\x02\x00\x00")

func runtimeSyntaxSlsMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxSlsMicro,
		"runtime/syntax/sls.micro",
	)
}

func runtimeSyntaxSlsMicro() (*asset, error) {
	bytes, err := runtimeSyntaxSlsMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/sls.micro", size: 570, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxSqlMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x54\x6d\x6f\xdb\x36\x10\xfe\xdc\xfc\x0a\x41\x2b\x90\xa4\x5e\x82\x7d\x5d\x31\x6c\xa0\x25\xca\xe6\x42\x91\x2e\x5f\xe2\xb8\x71\x96\x28\xb6\x50\x1b\xf3\x5b\x6d\x79\x69\x80\xfb\xf1\x7b\x48\x27\x5b\x5a\x59\x80\x78\x47\xf2\xee\xe1\xdd\x3d\x47\xee\x9e\x57\x4d\xf5\x2d\x49\xed\x27\x99\x26\xe9\xf8\x72\xf7\x75\xf1\x1e\x0a\xc4\xbc\xa9\xb7\x93\xf7\xe9\xc9\xc9\xe4\xb9\x5a\x25\x67\xf3\x73\x6c\xff\x76\xc6\xa4\x24\x66\x33\xfc\xc4\xa4\xe3\x86\x98\xca\x89\xe5\xf8\xbd\xd3\xf7\x42\x65\x86\x97\x5c\xb9\xf3\xf1\xef\xe9\xf7\x8e\x5d\xee\x86\x9c\x2b\xea\x0a\xc5\xcc\x88\xba\xda\xf5\xa9\x1b\xa4\x96\x9c\xa9\xb6\x7d\xd6\x67\xaa\xc7\x29\xeb\xf3\xec\x8a\x32\x2d\x7d\xa9\xec\x8b\xa4\xcc\x68\x8b\x89\xe1\xcc\xf1\xb6\x67\xce\x1c\xeb\x32\xcb\x2d\xbd\x6a\x51\xa1\x9c\x4b\x36\xe2\x39\xa4\xcd\x8c\xe8\xf2\xa8\x50\x2e\xac\x43\xd8\x2e\x6c\x73\x87\x45\xa3\x07\xd0\x0b\xe6\xe5\x91\x2c\xb8\xca\xa4\xb6\x00\x81\x2b\x1b\x04\x79\x03\x7f\x0b\x31\x90\x4c\x1c\x49\xa3\x10\x5c\xe6\x96\xa2\xa0\x42\x7a\xdb\xa7\x42\x9b\xf0\x73\xd1\x53\x54\x78\x1c\x2d\x34\x14\xa3\xcb\xb6\x77\xcf\x68\x3f\xa0\x9e\x61\xca\x51\x9f\x5d\x0b\xd5\x6b\xdb\x00\x06\x60\x24\x54\xce\x6f\x30\x16\x42\x86\x89\xe5\xc6\x41\x28\x30\x24\x94\xd3\x24\x72\xb0\x22\x10\x46\x8e\x39\x09\x4b\xa2\x68\x43\xfd\xa9\xb1\x77\xc5\x47\x96\xae\x04\x78\x86\xd6\xb6\x01\x5b\x39\xe2\x20\x29\xae\x38\x86\x52\x38\x8c\x0a\xc5\x96\x9a\xe5\x18\x32\x26\xc3\x78\x85\x61\x78\x3f\x30\x42\x1b\xe1\x46\x24\x79\x01\x3b\x30\xea\x59\xef\x08\x65\xa5\xce\x45\x31\x22\xc5\x9c\x37\xf0\x57\xda\x91\xf2\x88\x40\xf1\x1b\x77\xcd\x64\xdb\x41\x0f\x1c\x8e\xfe\xcc\x29\x28\x28\xdf\x41\xa0\x39\x47\xa4\x4d\x8e\xa4\xb5\x77\xb1\x12\x3a\xaa\x61\xe1\x08\x39\x03\xa3\x33\x9e\x7b\x54\xef\x55\xc3\xe1\x88\xb9\x44\x87\xb6\xad\xd1\x6e\x39\x19\x5e\x70\x83\x2e\x40\xc2\x86\xf7\x40\x3b\x84\x62\x25\x87\x40\x07\x64\x41\x22\x07\x05\x71\xad\x51\x20\x13\xcb\x64\x44\xaf\x7f\xa4\x99\x6c\x5f\x0f\xc9\xea\xe8\x6e\x1d\x72\xb7\x10\x86\x05\xe3\xfb\x48\x85\x45\x4b\xa2\x33\x2d\x0f\x45\x08\xa2\x8d\x81\x06\x97\x88\x05\x19\x96\xb8\x58\x0e\xf4\x82\xec\x00\x22\x03\x49\xce\xa0\xbf\xb0\x4a\xd1\x0c\x56\xe5\x40\x9b\x70\xfd\x1c\x42\xea\xa1\x2a\x30\xb0\x70\x6a\xe3\x7a\x25\x3e\x79\x4e\x5e\x45\x2e\x3d\xee\x90\xb7\x01\xd1\x0f\xf2\x80\x87\x78\x3c\x8e\xbd\x66\x46\x1c\x02\xb8\x16\x7c\xd8\x46\x19\x0a\xdc\xf2\x21\x3a\x80\xd3\xb0\x8f\xba\xd1\x67\x6e\x74\x11\x7a\xcb\x8d\x06\x9c\x6e\xb4\x39\xf8\xac\x17\xeb\x6d\xf2\x65\x5b\xd7\xab\x24\x7c\xc1\x15\xd0\x78\x02\x10\xa1\x50\x23\x74\x30\x62\xbf\x71\x14\xcf\xb6\x25\x78\x0e\x4b\x25\xcf\x85\x2f\x83\xf6\xf2\xf3\x90\x52\x57\xf4\xc2\xb4\x40\x3f\xc2\x41\xfb\x90\x78\xce\x33\x90\x2a\xa3\x3f\x1a\x07\x95\xc0\x80\x92\x97\x83\xa8\xd1\x88\xe3\x24\xaf\x2c\xee\x12\x2a\xf8\xdf\xb9\x5d\xa9\xbb\x51\x89\x87\xc7\xd9\xe1\xcc\x37\x6a\xdc\x92\x5a\xf5\xe2\x5a\x50\xe2\x0a\x57\xbe\x8c\x8f\xdb\xeb\x83\x87\x7c\x0e\x5a\xcc\xf8\xe4\xa7\x04\x2f\x2e\x9e\xd8\x64\x59\x37\x55\x32\x59\x2f\x97\xd5\x6a\xba\x7b\x5b\xbd\x4b\x14\x61\x5a\x35\xd5\x63\xb5\xab\x77\x34\xdd\x2f\x37\x54\x4f\x66\x6b\xaa\xbf\xcd\x1b\x0c\x9b\x45\x35\x5f\xd1\xac\xae\xa6\xf5\xf6\x6c\x77\xfe\x07\xd4\xc5\xe6\x47\x06\x02\xc6\x7c\xb9\x59\x6f\x1b\x9a\xaf\xa6\xf3\x09\x80\x96\xeb\x69\x4d\xab\xfd\x62\xf1\x4f\xb5\xd8\xd7\xb4\xde\x37\x9b\x7d\x43\x9b\xed\x7a\xb9\x69\xe8\xeb\x1e\xd8\x5b\x60\x1e\x03\xda\x4d\x66\xf5\xb2\xa2\x5d\xbd\xa9\xb6\x55\xb3\xde\xd2\x6e\xb6\x7e\x22\x04\xb8\x00\x6c\x33\x5f\xd6\xc0\xa2\xa7\xf9\xb4\x99\xbd\x21\xf5\x71\x3b\xff\x32\x6b\x22\xd2\xe1\xe2\xe2\xae\x16\x87\xa7\xe7\xd5\x02\x61\xbc\x70\x7e\xfb\xcb\xc5\xaf\x77\x9d\x37\xde\xcf\xf5\x62\xb1\x7e\x4a\xd2\xf4\x6c\x3c\xbe\xa4\xdb\xbf\xd2\xbb\xf3\x0f\x29\x9d\xbe\xcc\x4e\x31\x3b\xfd\xc1\x14\x40\x0f\x2f\xdb\xe3\xf1\x03\x0c\x1e\xbe\x8f\xe4\x71\x51\x4d\xfe\x0e\xa7\x5d\x8c\x2f\x2e\x3f\xbc\x7f\xdd\xfc\xf9\xd0\x7c\xe9\xed\xed\xc7\xdd\xa6\x9a\xd4\x1f\xef\xee\x3a\xff\x6f\x6e\xeb\x69\x92\xbe\xeb\x24\x1d\x4a\x3a\xef\x3a\xe9\xc9\xbf\x01\x00\x00\xff\xff\x75\x35\xdf\x1c\x35\x07\x00\x00")

func runtimeSyntaxSqlMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxSqlMicro,
		"runtime/syntax/sql.micro",
	)
}

func runtimeSyntaxSqlMicro() (*asset, error) {
	bytes, err := runtimeSyntaxSqlMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/sql.micro", size: 1845, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxSwiftMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x52\x6d\x6f\xda\x30\x10\xfe\x9e\x5f\xe1\xb9\xdb\x04\xe9\x0a\x7b\x53\xb5\x37\x56\x75\xab\x26\x55\x93\xda\x0f\x74\x9f\x08\x93\x8c\x73\x01\x6f\xce\x39\xb2\x1d\x42\xa6\xfb\xf1\xbb\xa4\x80\x90\xe0\x63\x11\x27\x9f\x9d\xbb\xe7\x79\xee\xe5\xec\x49\x7f\xc9\x99\x98\x36\xa6\x88\x22\xb4\x18\xd5\x46\xac\xcc\x72\x65\xd9\xa2\xc1\xa5\x28\x9c\x17\x77\x0a\xdd\x28\x79\x62\xd2\x64\xcb\x26\x7b\x6e\x29\x64\x36\x0a\x9d\xf7\x5c\x26\x2c\xe8\xbe\x02\xaf\xa2\xf3\x21\xd1\xce\xb2\x84\x10\x55\x84\x12\x30\x0a\x39\x1b\x7d\xfa\xfc\xea\x3c\xa5\xc9\xb3\xab\xec\xc5\x9c\x13\xbf\xb0\x7d\x65\x1b\xb3\x5d\xb0\xbd\xec\x11\xa6\xbb\x8c\x63\x08\x21\x07\xda\xaa\x10\xc8\x94\x95\xf3\x91\x2c\x44\x5a\x2b\x4f\x21\xfa\x5a\x47\x02\xac\x4b\x2a\x6a\xd4\x64\x0a\x02\x1b\x80\x58\x58\xd4\x2b\xd2\x8a\xfd\x1c\x0a\x55\xdb\x48\xdc\x18\x32\xc8\xff\x08\x1e\x95\x25\xd8\x6c\x9d\x1a\x5d\x83\x90\x53\xe5\xcd\x9a\x19\xa9\xaa\x17\xd6\x68\x8a\x2b\xef\x9a\x30\xcc\x84\x3c\xa5\xa7\xf2\x50\x98\x0d\x55\x2e\xc4\xee\x74\xdb\xf2\x7b\x54\x0c\xc6\x21\x59\xf5\xaf\xa5\x25\x2b\x0d\xbd\xd9\x82\x1a\x63\xed\x94\x2f\xb9\xc9\xbb\xc3\xad\xc1\x7b\x93\xb3\xda\x9a\xb3\x49\x3b\x5c\x03\x1a\x40\x0d\xd4\x80\xfa\xdb\x55\xe7\x70\x49\x65\xcd\xbc\x3c\x59\xf2\x10\x6b\x8f\xb4\xac\x95\xcf\x7b\x59\xdc\xb4\x9f\xd0\x36\xce\xe7\x27\xba\xce\x0a\xb9\xd4\xe1\xb1\x78\x39\x30\x68\xba\x0f\x9c\x7e\x57\x97\x0b\xd8\xcf\x8c\x15\x70\x58\x1f\x32\x7b\x7d\xf1\x71\x7e\x3e\xdc\x0d\x06\x73\xe6\x14\x0f\x6d\x05\xbb\xd8\xc8\x3e\xaf\x80\x18\x0c\x7e\x0d\xaf\x6e\x31\x0e\x3e\xd0\x9b\x4b\x7a\xf7\x96\x2e\xdf\x0f\xf7\xa4\x07\x80\x3c\x29\xa0\x42\x75\xc3\x41\x63\xf7\x11\x7b\x98\x1b\xc7\x5d\x07\x9a\x46\xdf\x95\xfa\xc3\x3a\x15\xe9\x9b\x73\x16\x14\xd2\x8d\xd1\x91\x3b\xaa\x7c\x4b\xd7\xde\xab\x96\x6e\x0f\x0a\xdb\x23\x5c\x63\x7b\xbf\xf8\x03\x7a\x5b\xda\x03\x4f\xe2\x48\x86\x9c\xfd\x96\xf3\x54\xf6\x01\xdf\x5d\x79\xb8\x6d\xfa\xf1\xca\x5b\x39\x1e\xa5\xf2\xf8\xf1\xc4\x2b\x83\xfa\x38\x91\xe3\x2c\xcd\x52\x29\x00\xf3\x89\xcc\xd2\xf1\x51\xee\x6c\x9c\xa6\x73\x99\xfc\x0f\x00\x00\xff\xff\x13\x1a\x64\x48\x04\x04\x00\x00")

func runtimeSyntaxSwiftMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxSwiftMicro,
		"runtime/syntax/swift.micro",
	)
}

func runtimeSyntaxSwiftMicro() (*asset, error) {
	bytes, err := runtimeSyntaxSwiftMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/swift.micro", size: 1028, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxSystemdMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x58\x4b\x73\xe3\x36\x12\x3e\x27\xbf\xc2\xe5\xcd\x61\x66\x67\x2b\xc7\x3d\xa4\xf6\x51\x14\x45\xc9\x8c\xc5\x47\x48\xca\xce\xec\x78\xc2\x82\x49\x48\xc2\x9a\x22\x18\x90\xb4\xad\x2c\x7e\xfc\x7e\x0d\xbe\x35\x39\xd8\xea\xfe\x00\x02\xcd\x46\xf7\xd7\x0d\xd6\x97\xb2\x61\xef\x37\xb7\xf1\xa5\x6e\xf8\x39\xbf\xbd\xb9\x7d\xfa\xf1\x43\xcd\xd5\xab\xc8\xb8\xae\x65\xf6\xc2\x9b\x8f\x3f\xdc\x7e\x7f\xe2\x2c\xe7\xea\xe6\xf6\xb7\xa7\x2f\xfb\x52\x34\x4f\x5f\x81\x7d\x9f\xc9\x42\xaa\x9b\xec\xc2\xca\x1b\x8c\x7c\xb0\xb2\x8c\x57\x8d\xb6\x0e\x0d\x57\xda\x2a\x04\xab\xf1\xbf\x90\x6f\x6e\x2d\x0b\xd6\x70\x28\xb5\xd4\x96\x1f\xbb\xa9\x1d\xec\x82\x48\xa7\xd6\x7e\xed\x26\xe9\x2e\xd8\xba\xfe\xde\x5d\x0f\x7a\xec\xc4\xb1\x1b\xf8\x7a\xc5\xb2\x97\x42\x1e\xf5\x8a\x1f\xa4\xe2\x7a\x25\xca\xdc\x0d\x5f\xff\x1e\x94\xc5\xc5\x28\x75\x22\xcd\x6f\x22\xd7\xdc\x58\xbb\x2a\x60\xae\x1b\x44\x30\x75\xc5\xca\xfc\x4d\xe4\xcd\x69\x00\x1f\xb9\x38\x9e\x9a\x51\x53\xa2\xe1\xd3\x9c\x74\x15\x04\x49\x0a\x0b\x56\x4a\xb2\x3c\x63\x35\x26\xee\xb7\x69\xe4\x84\x41\x94\xa4\xfb\x68\xa7\x57\x6d\xed\xb3\x33\xd7\x36\xab\xd8\xb3\x28\x44\x23\x78\x3d\x29\x97\x95\x6c\xcb\x5c\x94\xc7\x98\x37\xda\xbe\xb3\x60\x7f\xac\x33\x51\x9d\xe0\x87\xac\x60\x75\xad\x53\xdb\x5b\xef\x5c\xdf\xd1\x76\xb0\x76\xd2\x8d\xbb\x1b\xa4\xbd\x6f\x77\x92\x19\x85\x63\x3c\x4f\xdb\xf2\x5c\x29\x8e\xa7\x6c\x89\x55\x1b\x21\x4b\xcb\x0e\xe5\x1b\x16\x1b\x81\x69\xeb\x09\x5b\x0b\xc5\xb3\x46\xaa\x8b\x2f\x1b\xe7\x5c\xcd\x87\x36\xa2\xe0\x6e\xed\xbc\xf3\xac\x6d\xd8\x73\xc1\x97\x23\xdf\xce\xbf\x93\x70\xc1\xa8\xdd\x73\x55\xf2\x02\x56\x9d\xe1\xb1\x9d\x28\x67\x8f\xfb\x6d\x51\x4c\x5a\xc8\x9a\x93\xf3\x2e\xea\xa6\xfe\x33\x6c\x5b\xc8\xe7\x25\xee\xd6\xa3\xcd\xd7\x03\x1e\x3c\xda\x84\x52\x94\xcd\xf5\x08\x1d\xaf\x39\xbf\xeb\x81\xf8\x72\x7e\x96\x85\xc8\x60\xe1\xcb\x34\x16\xe3\x9d\xd5\xc2\x4f\x0f\x42\x35\x2d\x2b\xc4\x1f\x8c\x34\xc2\x0f\x78\xaa\xb3\xb9\x51\xb2\xd8\x2a\xd9\x56\x0b\xc5\x6a\x1a\x25\x9e\xdb\x6e\xcb\x11\xf5\x64\x2e\x0e\x97\x05\x14\x72\x55\xe3\x55\x39\xac\xce\x3a\xb8\x00\x32\x4c\xe9\xe4\xd0\x49\x7d\xcb\xc3\xf9\x87\x7b\xeb\x70\x10\xa5\xb1\x2d\xdc\xc7\xd9\x89\xe7\x6d\x81\x20\x0a\xe9\x25\xae\x31\x25\xa4\xfa\x66\x66\xc4\x6b\xde\x04\xe5\x46\xaa\x17\x33\x70\x62\x8a\xc2\x52\xb1\xfa\x64\x9f\x1e\x92\x4e\x8a\x4f\x1c\x67\x94\xa6\xf6\x3e\x8a\x91\x74\x39\x7f\x6e\x8f\x7a\xcd\x0f\xac\x2d\x9a\xb9\x61\x3d\xb4\xe6\x15\x2f\x73\x5e\x66\x14\xe1\x3d\xb6\x13\x67\xd1\x58\xf1\x42\xb5\x83\xc8\x59\x02\xe1\x7e\xa1\xaf\xad\xc4\x5a\x00\x9b\xd8\xfd\xcf\xf2\x91\x5d\x60\xdf\x2f\x57\xf5\x1c\x8f\xc0\x25\x16\x6f\x7f\xd9\x3b\xfb\xe5\xa3\xbe\x6b\x5f\x01\x81\xc9\xaa\x05\x14\x46\x81\xbd\x40\xa2\x78\xb9\x5d\x94\x84\x91\x1b\x5c\x41\x89\xeb\x2d\xd7\x89\xdd\x6d\xe8\xf8\x6b\xd7\xdf\x2e\xe1\xc4\x9a\x2c\x8d\x1b\xe4\x06\x53\xb9\xa3\x94\x54\xd7\x60\xd0\x36\x55\xdb\x00\xad\x33\x25\x2a\x13\x75\x1d\x65\x19\x7a\xec\xe5\x35\x2f\x2f\x7a\xcc\x07\x04\x17\xd7\xdf\x66\xf4\x5a\x66\xed\x19\xe1\xd5\x85\xee\xba\x3d\x57\x36\x71\x23\xa7\x63\xac\x2e\xda\x29\x5f\x85\x92\x25\xcd\x98\xcb\x94\xe4\xda\x89\x22\x3f\xd0\xfc\x15\x7a\xda\x88\x33\x97\xb0\x28\x75\x7e\x75\x34\xd1\x42\xc4\x0b\x30\x9f\x11\x61\xb4\x6a\x26\x29\x24\x2a\x98\x34\x6c\xd6\x29\xb2\x1a\x85\xd9\x14\x28\x98\x71\x10\x05\x95\x80\x4d\xe0\x27\xe6\x5f\xea\x59\x61\x27\xec\x7d\xd7\xc8\x52\xbd\xc1\x2f\x89\x44\x00\xa2\x38\xf0\x09\xb8\xf7\xea\xe3\xa4\xa1\x28\x51\x05\xd8\x28\xce\x89\xe9\xf5\x41\xf1\xdf\xf5\xa6\xce\x5e\x42\x90\xaa\x2f\xf5\xa1\x06\x9d\xe9\x74\x0b\xea\xee\xb2\x76\xdb\x82\x37\x3d\x26\xca\x10\xd0\x1d\xbc\x5f\xf0\x3b\xf1\x0c\xfe\x42\xfd\xb9\xe7\x97\x1e\xda\x89\x3c\x7e\x13\x4d\x76\xea\x75\x43\xae\xd3\x70\xdc\xd6\x94\x03\x04\x9c\x90\x40\x7a\xbe\x82\x7b\x2c\xe1\x70\xb7\x3c\x89\x67\x50\x50\xae\xef\x02\xcf\x31\x15\x22\xbd\x0b\xe2\xc4\x24\xb6\x6b\x07\x7e\x97\xe2\xb0\xc1\xc5\x7a\x56\x66\x4e\x6b\x12\xc1\x49\x18\x03\xe5\xdf\xd3\x9c\xd4\x03\xff\xef\x46\x21\xdd\x44\x81\x97\x52\xf6\xac\xac\x18\xe3\x66\xc3\xa0\x1c\x8a\xe8\xa0\xc7\x25\xab\xea\x93\x6c\x7a\x80\x62\xd4\x0d\x31\xbd\x64\xa8\xc2\x75\x2d\xc0\xf2\x43\xf8\x50\x26\xf7\x16\xaf\x79\xc1\x2e\x1e\x7b\x27\x0b\x88\x7a\xb4\x1b\x4c\x74\x62\x9b\x52\x35\x47\x46\xda\x71\xc3\x24\x88\xe9\x7f\xb2\xd3\x3f\xcb\xe7\xa4\x8b\x1f\x5a\xe5\x67\x70\xf4\x9c\x46\xee\x39\xaf\x50\xfb\x5f\xb9\xbe\x77\x3e\xd3\x59\x77\x3f\x69\x12\x6c\xb7\xc8\xcf\x7b\x51\x14\xce\x7b\x56\xb4\x39\xdf\xd7\x66\x3e\x00\x13\xec\x24\x50\x6d\x9f\xe0\x58\x1c\x4b\x56\x18\x91\xc0\x50\x49\x7a\x33\xbc\xcc\x78\x7e\xd7\xa7\x31\x10\xd5\xc4\x50\x23\x35\x4d\x9c\x34\x23\xa3\x19\x0b\x2d\xe8\x67\xc9\x3b\x13\xe1\xcc\x99\x66\x46\x31\x23\xb7\xcc\x49\x65\xce\x26\xd7\x34\x32\xe3\x0f\xb8\xf9\x25\xad\x06\x3f\xbf\xb2\xa2\x45\x78\x52\x09\x59\xb3\x86\x1d\x15\x3b\xeb\x4e\xdd\xb8\x9b\xa0\x17\x3d\x78\x81\x1d\xf9\x2f\x2d\x6f\x79\x0f\xf9\xbc\xa1\x85\x7a\x2d\xe6\xbf\xb7\x48\x73\xc1\x8a\x90\x51\x03\x37\xc0\x15\xcf\x80\x0d\x5a\xa3\x38\xad\x2e\x8f\x36\xb5\x71\x24\xec\xc0\x0e\x85\x11\x64\xd6\x31\x0c\xe4\x84\xa9\x23\x96\x28\xda\x17\xb4\x31\x9e\x65\xdf\xa1\x51\xa1\x5e\xc9\x63\x2f\x7c\x2a\xdf\x1e\x43\x0d\x42\x60\x21\x14\x4a\x6e\x82\xbc\x26\x95\x98\x87\xa2\x04\xa2\x59\x7c\xc8\xf7\x41\x37\xe9\x3e\x28\xa0\x0f\x35\x0d\xf5\xb9\x0f\x35\xe2\x54\x51\xfb\xbc\xf1\xf8\x19\xfb\x19\x07\xf6\x72\x2c\x0f\x4d\xaf\xa3\x73\xb4\xb6\xce\xf0\x6b\xac\x9c\xf9\x0a\x4b\xf5\x6a\xbd\xc4\x3b\x39\x16\x7f\x70\xd4\x49\x2f\xf0\x83\x24\xc0\x71\xa7\x74\x74\x38\x24\x2f\xd4\xa6\x1b\xd9\x14\xec\x58\x6b\x93\xd8\xbe\xd5\x36\xf2\x21\x81\x46\x7d\xa7\x2f\x4b\xd3\x57\x22\x61\x20\xfb\xfc\x0d\x69\xf3\x8a\x17\xa7\x7d\xc0\xdc\x68\x12\x2c\x93\x93\x3a\x28\x29\xff\x5f\x8d\x47\x82\x72\x25\x65\xd3\x49\x36\x2b\x38\x15\x0a\x88\x1b\x26\x8a\x16\x5e\x18\xa5\x21\xef\x91\xf1\x44\xc0\x6d\xd5\x3d\x42\x4d\xf8\x7c\x31\xd2\x29\xf7\x47\x24\xf0\xe2\x0c\xee\xb4\xf2\xff\xb6\x60\xe7\xa0\xea\x8e\x44\x76\x95\x28\xb4\x3c\xd3\xce\x86\x58\x31\x38\x68\x62\x53\x5b\xf1\xbc\x8b\x99\xda\xe8\x63\xdf\x44\xcd\x95\x7d\x62\xe5\x11\xf9\x35\x6b\xf0\xae\xfa\x3a\x52\x4d\x43\x24\x68\x1a\x57\x67\x01\x0e\xc2\x8e\xc6\x68\xd3\xb2\xa7\x44\xc9\xf8\x33\xc5\x28\x14\x55\xe7\xef\x81\x7a\xaf\x33\x39\x8c\x9c\x24\xf9\x3c\x91\x6a\xaf\x77\xf2\x90\x2d\x94\x67\x91\x9b\x7c\x26\xe4\x15\x4e\x42\x16\xbc\x51\x2f\xd4\xab\xc9\xb9\x82\x28\x2b\x76\x84\x52\x77\x25\x0e\x77\x86\x0a\x27\x11\x01\x31\x31\xb3\x6a\x15\xdc\x33\xaa\x6e\x89\xc2\x85\x24\xd4\xd4\x65\x92\xd9\x73\x0e\x1d\x3b\xcf\x39\x98\xe2\x9a\x60\xed\x28\x54\x66\xf1\x12\xf1\x8c\xe3\x20\x56\xed\xe1\x80\x3a\x18\xf1\x43\x5b\x23\xfa\x4a\x74\x9d\x5d\x75\x5d\x22\x28\xa5\x8a\xd3\x96\x64\xe0\x68\x70\xbe\x51\xf2\x0c\xf0\x8c\x6a\x66\xae\x54\xf0\x36\x3d\xf9\x7b\x8b\xdd\xf3\xd5\x65\x10\xeb\x51\x30\x51\x5a\xa3\x78\x8e\x48\xf0\xca\x95\x12\xb9\x69\xf9\x0d\x56\x53\xdf\x3c\x4a\xcb\x61\xba\xf4\x71\x74\x8d\xa6\xab\x9c\x53\x3a\x80\xde\xea\xba\xef\x01\xa8\x89\x20\x73\xf0\x36\x4d\x3b\x4e\xa0\xb8\x8b\x10\xd4\x13\x2b\x2c\xb4\x29\x14\x22\xd8\x89\x0a\x42\xa5\x82\x4a\xfb\xa0\x0f\x7c\x41\x71\x31\x41\xa0\xfe\x41\x7b\x64\xe0\xfc\x5c\x1e\x69\xa3\x9a\x9d\xab\x02\x2f\x5f\x67\x48\x9e\xf4\xbd\xff\xbd\xe8\x98\xe3\xf4\x4c\xf0\xa2\x65\x40\x9c\xe2\x3a\x89\xab\xd5\xfe\x57\x5c\xad\xfc\xc4\xf9\x35\xc1\x58\x99\xf7\x07\x43\x22\x58\xf9\xde\xdd\xed\x20\x77\x57\xde\xf8\x24\xdf\xfa\xd7\x8a\x4f\x6d\x93\xcb\xb7\x72\xb1\x2d\x19\x17\x9f\x41\xab\x3b\xf6\x8c\x43\x9b\x44\x37\x74\xcb\x85\x8a\xae\x4f\xc7\xe6\x02\x6d\xea\x5b\x27\x62\x55\xd9\xaa\x8c\x53\xbe\xc0\xb6\x60\x1f\xd9\xce\x9f\x45\x50\x5c\xe1\x72\xd7\x3d\xb7\xe8\x2c\x07\xcd\x2d\x29\x8f\xaf\x1a\x4c\xe3\xe1\xae\x06\x76\x2d\xc7\x04\x74\x71\x3e\xe9\x63\xa0\xd7\xd4\x4b\x66\x69\xd9\x6d\x25\xab\xc7\x13\x07\x99\x94\x1c\x6c\x90\x13\xa0\xc0\x8c\x98\xa4\x40\x6e\x29\xfa\x57\x56\x71\x5d\x4a\x5c\x01\x15\xaf\x0a\x96\xa1\x57\x32\xd4\x36\x0b\x86\xb8\xad\x70\x30\xa6\x49\x55\x17\xd3\x95\x01\xdb\x87\xe3\x55\x7a\xea\xae\xae\x73\xbe\x63\xfc\x0d\xcb\xba\x8b\x6d\xfc\x39\xde\x05\xdb\x74\x63\xd9\xee\x8e\x92\xbc\x1b\x76\x0d\x4b\x81\x66\xd4\x30\xc1\x5d\x3b\x7e\xe2\x6e\x5c\x27\xea\xa7\x74\x65\x6c\x26\x23\x62\x0f\xe2\x7d\x98\x4f\x3c\xd4\x7d\xed\x00\xef\x16\x9b\xae\x57\xc5\x58\xe2\x78\xeb\xd4\xda\xb9\xe8\x1f\xd2\x41\xb5\xb7\x51\xb0\x0f\x27\x3d\x78\xf4\x9d\x28\xa5\x8f\x15\x03\x82\xb3\x5b\x7f\x9e\x26\x0c\x1f\x2f\x46\x00\x1d\x6f\x32\xd3\x62\x7a\x9c\xa0\x01\x79\xb4\xfc\x24\xee\xed\x19\x13\xa2\x53\xe7\xf9\x30\x22\x94\x0e\x50\x1e\xfa\x76\xbc\x67\xc2\xc4\x0e\x91\xb1\x28\x38\xe6\xd8\xa1\x3d\x2a\x56\x19\x8a\x1f\x5a\xfd\x59\xcb\x36\x88\x43\xce\x8e\xba\xac\x06\x55\xc5\x38\xdc\x17\xdf\xa8\x8a\x95\x75\x85\x9b\x25\xee\x14\x69\x12\x59\x7e\x4c\x47\xa9\x1b\xc3\x7e\xe0\x64\x13\xc9\xf8\x35\xb4\x41\xc2\x03\xba\xe8\x23\x7a\x71\x12\x93\xb5\xa8\xe1\x64\x6a\x27\xb8\x4e\x2e\x08\x1e\xe3\xbc\xbd\xc7\xea\x17\x4d\x35\x4b\x53\x67\xa7\xf7\xcd\xb9\x9a\x1d\xec\x83\x13\x19\x27\xf6\xbf\x54\xc7\x1f\x19\x02\x96\x58\x8f\x84\x5a\xcf\x53\xf2\xf1\xc4\x1a\xfc\xe3\xa8\x9a\x8f\x60\x7f\x04\xea\x48\x39\x1f\xff\x79\xdb\x7f\xa4\x7a\x56\xf4\xfd\xe7\x19\xdd\x15\x7d\xc3\xfa\x51\x94\xa6\x05\x7d\xfa\xd7\x30\x0e\x4a\xbd\xb9\xbd\x9a\x7d\x46\xe8\x23\x8a\x6f\xcc\x57\xaf\x0f\xc6\x5a\xb7\x44\xbe\x14\xc5\xc4\x16\xdd\x07\xb2\xa7\xaf\xcb\x27\x2f\x9c\x2e\x76\x37\xb7\x4f\x3f\x78\x96\xeb\x23\xe0\x96\xc3\xe6\x8b\xd9\xed\xd3\x3f\x3e\x34\x0a\x1d\xdc\x01\x25\x97\x7f\x9c\x4c\x19\x4c\xc5\x01\xdc\xdc\x7e\xf8\x4d\x7f\xf9\xf2\x13\xfc\x9f\xf1\x9f\xbe\x7e\xfd\xf8\x97\x0f\x5f\x7e\xfb\xdf\xd7\x1f\xff\xfa\xf1\xdf\x3f\x0c\xd3\xff\x76\x44\xc4\x60\xb9\xd9\xb4\x4f\xd3\xa0\x79\xaf\xef\x3e\xdd\x7c\xd2\x37\x9f\xbe\xfb\x74\xfb\xfd\xff\x03\x00\x00\xff\xff\xf4\x5f\x77\x4f\xef\x13\x00\x00")

func runtimeSyntaxSystemdMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxSystemdMicro,
		"runtime/syntax/systemd.micro",
	)
}

func runtimeSyntaxSystemdMicro() (*asset, error) {
	bytes, err := runtimeSyntaxSystemdMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/systemd.micro", size: 5103, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxTclMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x56\x41\x73\xdb\x36\x13\xbd\xfb\x57\x30\xb2\xe7\x8b\x65\x7f\x71\x7b\x6d\x92\xc6\x6d\x33\xed\x29\xd3\x4b\x32\x9d\x4e\x4d\x47\x85\xc0\xa5\x88\x0a\x04\x58\x00\xb4\xc4\x66\xf3\xdf\xfb\x16\x20\x6d\xa5\x3d\xf4\x20\xec\x2e\x80\x5d\x2c\x1e\x76\x1f\x15\x27\x97\xd4\xb1\x5a\x7d\x78\xfb\x6e\x55\xad\xea\x9b\xa4\xed\xc5\xea\xac\x23\xd5\x50\xa8\x56\x1f\xcf\x9f\xdd\x5c\x7d\x75\x49\xee\xa1\xba\x5e\xdf\x62\x2d\x76\x97\x15\x5f\xac\x57\x67\x67\xe7\xe7\xd5\xfb\xa4\x5c\xa3\x42\x53\x7d\xd0\xb6\xba\x33\xae\xf5\x95\xf6\x7d\x8f\xc9\x78\x7f\xa6\xbd\xf5\xa1\xd2\x93\x72\x08\xfb\xfa\x52\xb5\x89\x02\xab\x61\x20\xd7\xb0\x0a\x41\x4d\xac\xc6\xe4\x37\x74\x24\xed\xf7\x45\x37\xfd\xe0\x43\x2a\xba\xf5\xaa\x79\xd2\x36\xc6\x35\x74\x2c\xf6\x9f\xa3\xb2\xa6\x9d\x78\x6b\x9c\x0a\x10\x81\xd4\x9e\xb5\x8a\x84\x21\xe9\x8e\x75\xc3\xda\x7a\xbd\x97\x51\x26\xbd\xc3\xbc\x88\x64\xdc\x48\x4c\x16\x93\xe4\xb4\x6f\x8c\xdb\x31\xf9\x96\x29\x04\x1f\x98\x1e\x94\x65\xc9\x06\x83\x49\x18\x86\xc0\xed\x56\x02\x51\xc3\x2d\xdc\x5b\xb3\x1b\x03\x89\x3a\x4c\xdc\x1a\x4b\x79\xa0\x07\x72\x89\x5b\x3b\xc6\x8e\x5b\x84\xc1\x8f\x94\xce\x7a\x8f\x63\x77\x94\x22\xef\xac\xdf\xe6\x01\x27\x74\x26\x26\x8f\xb4\x4d\xcb\xc6\xe9\xc0\x82\x1a\x06\x80\x33\xf0\x1f\xde\x38\xb6\x33\x46\xb6\x5c\x19\x22\x12\x40\xb1\xf0\x63\x6b\xc9\xed\x52\xc7\x19\x1c\x1b\x94\xdb\x11\x04\x0d\x56\x69\x28\x91\x54\xc0\xc9\x90\xd8\x19\x05\x49\xa7\x7a\x8a\x83\x2c\x7a\xc4\x64\x68\x7b\x05\x97\xc1\x34\x3c\x8c\x48\x6c\x38\x34\x8c\x74\x65\xd8\xe1\xc2\x22\xe2\xb8\x85\x10\x47\x88\x34\x06\xc7\x51\x2b\x0c\x44\x7b\x96\xc0\x51\x00\x11\x31\x06\x84\x8d\x83\x05\x56\x31\x05\xc1\x12\xae\xc8\x31\x1e\x8c\xbc\x02\x6a\xe5\x9d\xdf\x71\x22\x6b\x39\x19\x44\x4b\x41\xf2\x18\xdd\xde\xf9\x83\x83\x94\x60\xe3\xd0\xa8\x84\xc9\xc1\x02\x46\x0b\xf9\xa0\x02\xe3\x67\xd4\x16\xf0\x3e\x1c\x14\x82\x1f\x3a\xa0\xbc\xae\xdf\xac\xa4\xe2\x7e\x50\xd1\xe8\x5c\x6e\x38\xec\xb1\xd8\xfe\x55\x6b\x52\x5e\x95\x72\x53\x8f\xc7\x28\xc5\x56\x35\xde\xd1\x0c\x50\x99\xc0\x2b\x47\x40\x50\x0c\x3c\xd3\xac\x65\xc8\x16\x9d\x8e\xc8\x9f\x7a\x79\xe1\x32\x13\x1f\xf7\x45\xf3\xd7\x12\x3a\x26\x15\xd2\x17\xb1\x31\x93\x10\xdd\xe8\x25\x52\xbe\x6e\xbe\xc4\x3f\x52\x2d\xd0\x55\xdb\x49\x0e\xca\x6f\x3b\xcf\xe0\x6e\x83\x42\xf6\xb3\x49\x52\xf5\x8b\xd1\x9a\x10\x17\xd4\xab\x52\x26\x8b\x11\x17\xcd\xaa\xa7\x2d\x5f\x46\xee\xd5\xf0\xa4\xca\x53\xcd\x46\x29\xa7\xc5\xa0\x81\x54\x3a\xb1\x72\x89\xcd\x66\xf2\x4f\x9a\xf5\x07\xf4\xf5\xa3\x99\x4c\xb2\x27\xfb\x46\xd4\xf2\xd3\x6a\x30\xfd\xa9\x6e\xa9\x4d\xa7\x76\x30\xbb\xee\x71\xe2\x60\xec\xe3\x7d\x0f\x3e\x34\xd2\x12\x27\x66\xc6\x7c\xa9\x8a\x1f\xf1\x4c\x40\x21\xf3\xd0\xaf\xff\x49\x44\x56\x85\xfe\x84\x59\x86\xfd\x8e\xb7\xf3\xeb\x09\x81\x14\xd2\x50\x29\x77\x2e\x64\xee\x1c\x8d\x20\x56\x4a\x55\x2f\x74\x52\x1e\x44\x77\x3b\xf4\xad\xee\x7a\x0f\xd2\xe9\xa4\xb0\x75\x17\xbc\xc7\x7a\x79\x16\x3d\x43\xaf\xfb\xa6\xd4\xff\x9c\x96\xf5\x1e\x6e\x05\x71\x9d\xfb\x26\xb0\x4e\x7e\x2f\x47\xa5\x69\x20\x6e\xc6\x81\x09\x11\x33\x23\x59\x90\x8e\x4b\x18\x33\xad\x81\x59\x30\x48\x89\x71\x9b\xc2\x28\xe9\x80\x8a\x46\x97\x17\x3b\x1f\xd3\xa6\x70\x4a\x93\xb9\xe5\xc8\x7b\x9a\x6c\x83\xee\x12\x29\x75\x2e\x12\xbf\x98\x15\x29\xe8\xbd\x40\x8d\x7a\x89\x66\x07\xfa\x11\xa2\x54\xc2\x43\xd4\x0f\x69\x62\x9b\x71\x00\x0b\xed\xd9\x96\x72\x11\xd4\xac\xd9\xce\xf4\x24\x17\xb1\x68\x59\x01\x45\xe4\x30\xdb\x83\x10\x62\xaf\x8e\xdc\x23\x96\x33\x5a\x58\x07\xf7\x1a\x82\xcf\xd4\x89\xab\x37\xbe\xcf\xe4\xd3\x98\xc0\x52\x60\x26\x5f\x44\xd8\x46\x52\x40\xeb\x65\x3d\xef\x16\x65\xae\x55\xb4\x89\xc6\x0a\x85\x07\x0a\x1b\xa5\x35\x0d\x8f\x96\x46\x34\x89\x80\x6b\x48\xaf\x80\x9b\x51\xe8\x93\xd3\x18\x62\xa2\x5e\x28\xe9\xb8\x69\x91\xb7\x71\xe0\x95\x62\x09\x96\x59\xcb\xb5\x90\x5c\x73\x8c\xc5\x2e\xee\x45\x3d\x71\xcf\x94\x24\x7c\x16\x85\xd0\x5c\x14\xfa\x4b\x61\xda\xe4\xaf\xc7\xd8\xab\xb8\x67\xd9\xb2\x54\xe6\x4f\x78\x9e\x64\xbc\xab\x1a\xbc\xa2\x0a\x4a\xf4\xb9\x20\xb7\xb9\xdc\xb7\x76\xa4\x6a\x05\x54\xf4\xdd\xdd\xcb\x4c\xd5\x2f\xef\xef\xf1\x21\xbe\xac\x3f\x71\xfd\x79\x9d\x83\xbc\xcf\x9f\xe8\xd9\x6d\x17\x88\x9c\xac\x5f\x72\xbd\xe6\xfa\x15\xff\xce\x75\xcd\xf5\x05\xbf\xe6\x37\xfc\x8c\xbf\xe5\xff\x71\xcd\xc5\xef\xe7\xb1\xdf\x52\x88\x5f\x9c\x37\x81\x8f\xfd\x41\x1a\xe1\xee\xeb\x17\xdf\xdc\x5f\x5f\xd6\x37\x45\x59\xdf\xce\x29\xbf\xcf\x4d\xb6\x78\x2d\xfb\x71\x60\x7d\xc3\x77\x1f\x57\xf7\xeb\xab\x15\xf2\x7b\x3e\xdb\xcf\x61\x3f\xcf\x7e\xbf\xcc\xb4\x1d\xcf\xca\x49\x01\xfd\x78\x69\xd6\x38\xea\xa2\xfe\x74\x2b\x87\x7c\xff\xe2\xb7\xcd\xb3\xef\xce\x2f\xae\x6e\x5f\xdc\x5f\xd7\x9f\x6f\xb3\xdb\x5b\x34\x04\xf8\x75\x39\xaf\xc7\xf7\x09\xb7\xc5\x05\x3f\xf2\xab\xf5\x09\x26\x57\xe7\x37\x57\xd9\xe1\x43\x50\xc6\x66\x1a\xe8\x4c\x2a\x5f\xb7\xd9\xf7\xff\x05\xcc\x13\xa7\x6b\xfc\x95\xf9\x3b\x00\x00\xff\xff\x93\x15\x12\xd6\xe1\x08\x00\x00")

func runtimeSyntaxTclMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxTclMicro,
		"runtime/syntax/tcl.micro",
	)
}

func runtimeSyntaxTclMicro() (*asset, error) {
	bytes, err := runtimeSyntaxTclMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/tcl.micro", size: 2273, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxTexMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8d\xcd\x6a\xc3\x30\x10\x84\xef\x7a\x8a\x45\x52\xa1\x35\x54\x6f\xd0\x43\x6f\x7d\x80\x1e\x4a\x2d\x17\x24\x77\xed\x08\xf4\x13\x24\x85\xd8\x38\x7e\xf7\xac\x0d\x86\xe4\x34\x3b\xdf\x30\xb3\x42\xc0\x17\x66\x04\x57\xc0\x40\x39\xa5\x5c\x01\x27\x13\xce\x1e\x61\x48\x19\xbe\xf1\x07\x06\xe7\xb1\x28\x26\x04\x2b\x73\xac\x66\x02\x4e\x94\x03\xd7\xaa\xe2\x24\xe9\xb0\xce\xee\x96\x74\xb3\xbd\x2f\xbb\x25\x95\x9c\xf5\xc9\xd3\xce\x8c\xde\xa7\x2b\x51\xd9\xfe\xc9\xae\xd1\x14\x8c\x19\x31\xc2\xab\x7b\x23\xaa\xd5\x4d\xeb\xf6\xf3\xfd\xb7\x6b\x8e\x46\x30\x23\xd2\x37\xe0\xed\xb2\x76\x07\xb4\xfe\x82\xc0\x5f\x54\xf3\x04\x4a\x35\xb9\x7e\xd0\x8a\xc5\xd1\x45\xbd\xf4\x29\x04\xea\xea\x95\x03\xc6\xff\x2d\x20\x79\xc4\xec\x1e\x00\x00\xff\xff\x0c\x14\xb2\xd6\xf6\x00\x00\x00")

func runtimeSyntaxTexMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxTexMicro,
		"runtime/syntax/tex.micro",
	)
}

func runtimeSyntaxTexMicro() (*asset, error) {
	bytes, err := runtimeSyntaxTexMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/tex.micro", size: 246, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxValaMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x52\xc1\x6e\xdb\x30\x0c\x3d\x37\x5f\xa1\x09\xdd\x92\xd8\x4d\xb2\xeb\x82\xa6\xc1\x80\xdd\x7b\x19\x76\x98\xed\x16\x8a\xcc\xc4\x42\x35\x29\x90\xa8\xb8\x1e\x88\x7d\xfb\xe8\x26\xcd\xbc\x36\x3a\x08\x24\xf8\x48\x3e\x3e\x32\x76\x0e\xd5\xb3\x90\x3f\x94\x55\x52\xc8\x72\x7e\x60\xe3\x5a\x8e\x46\xda\x5b\x1f\xc4\x2e\x00\x38\xd1\x3f\x59\xde\x4e\xb6\xd6\x2b\xa4\xda\xa7\x8d\x05\xda\x78\x6f\x49\x37\x2a\x90\x71\x48\xa9\xff\x62\xe3\x03\x92\xf5\x6e\x47\x07\x6f\x6a\x9a\x24\x37\x5d\x47\xb3\x73\x50\x4f\xcb\x3b\x79\xaa\xb9\x09\x66\xd7\xe0\xc6\x26\x10\xb2\xf8\x3a\xfb\xa9\x66\xbf\x1f\xab\x93\xf1\x79\xf6\xe5\xb1\xca\x8a\x62\x19\xf7\x4a\xc3\xb2\x62\x7b\x32\xad\x5e\x33\x75\xa7\xdc\x89\x89\xe7\xb6\x5b\x6a\x1b\xc3\x4c\x6a\x4f\x60\x23\x90\x56\xfc\xd5\xb0\x55\xc9\x32\x97\xd6\xa0\x6e\x08\x43\x47\xd8\x04\xdf\x72\x94\xfd\x01\x8d\x7f\xc5\x8c\xb3\xc6\x01\x61\xb7\x07\xce\xa6\x88\x21\x69\x24\x70\xe9\x17\x25\x67\xbc\x23\x78\x46\x08\x8e\x03\x0a\x8d\x26\xed\x5d\xc4\x8b\x85\xfc\x1e\x82\x42\xa6\xe6\xa0\x65\x22\x16\x10\x28\x00\x26\xce\x75\xc9\xda\x8b\x39\xda\xaa\x18\xc9\x1f\x20\x04\x53\x03\xed\x83\x39\x28\x4e\xdb\xb3\xc6\xdc\xab\x17\x4f\x59\x9e\xc0\x44\x6a\x41\x3d\xbd\x93\x31\x40\x7d\x5e\xcf\xce\xa3\xa7\x4d\x60\x58\xcf\x11\x8d\x4b\xf0\x0e\xff\xd2\xb8\x07\xf3\x90\x40\x5b\xc5\xba\x0d\x31\xfd\x52\x8e\xc5\x0a\x5e\x45\x95\x0f\x62\x7d\x27\x59\xcc\xf2\x45\xb6\xba\xbd\x5b\x2f\x3f\xfc\xf9\xf8\x89\x2a\x3e\x99\xd9\x19\xd1\x81\xb5\xbe\x15\x52\x4e\xca\x72\x4e\xc5\x83\xac\xa6\x99\xa4\xf1\xc9\x1b\xb3\x37\x7e\x7b\x03\x4a\x3f\x09\x39\x79\xa0\xc1\xc6\xa7\x8b\xc5\x3c\xbb\x84\x63\xf9\x03\xae\xe4\xa2\xcc\xa4\x00\x57\xaf\x64\x99\x2d\xfe\xc7\xf1\x39\x20\xdc\x1c\x47\xfc\x7e\xff\xed\x7e\xb9\x7e\x8d\xdf\x1c\x0f\x59\x0e\xfa\xe4\xd7\xe7\xe0\xcb\x68\x57\xb9\xc8\x49\xe4\x57\xb9\x1c\xfd\x0d\x00\x00\xff\xff\x9f\x4a\xab\x27\x15\x03\x00\x00")

func runtimeSyntaxValaMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxValaMicro,
		"runtime/syntax/vala.micro",
	)
}

func runtimeSyntaxValaMicro() (*asset, error) {
	bytes, err := runtimeSyntaxValaMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/vala.micro", size: 789, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxViMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\xcf\x6a\xc3\x30\x0c\x87\xef\x7d\x0a\x4f\x94\xc5\x0e\xa4\xdb\x75\x85\x11\x76\xdc\x0b\xec\x30\x5b\x2d\xa9\xeb\x82\x21\x96\x4b\x9c\x84\x6c\xe8\xe1\xa7\x42\xd8\x76\xd8\x2e\xe2\xf7\x59\xfe\xe4\x3f\xe5\x83\xc6\x6e\x51\xf0\xf6\x0a\x0a\xf4\x81\x1f\xd8\xed\x8c\x0e\x0b\xcf\x31\x99\xc1\x6f\x05\x25\xc1\x66\xe3\x73\x9f\x07\x15\xcf\x81\xc6\x78\x89\x61\x50\x60\x5f\x9a\xf7\xae\xf9\x3c\xe2\x1a\x1e\x9b\xa7\x23\xd6\xd6\xee\xcb\xb5\xf3\x61\x8f\x92\xb5\x41\x58\xcd\x32\x76\x63\x48\x62\x2b\x05\xee\xa4\x2d\xcd\x4b\xc9\xb1\xf7\xd8\x6a\xca\x43\xe0\x89\x4c\x9b\xba\x2b\x4b\xa3\x5f\x90\xd8\x46\x9f\xb1\xa5\xcc\xd6\xc7\x3e\xcf\x0b\xda\x29\x21\x97\x76\xa2\x64\xdc\xe9\x9f\xa9\x45\x46\x31\x4d\xc4\x94\xb8\x84\x91\xe3\x85\x03\x9d\xa5\xf6\x02\x13\x49\xfd\xd3\x05\x7b\x77\xff\xfc\x7d\x53\x9f\x49\x5a\xb7\x65\xd0\xce\xed\xd8\x1e\x00\x4d\x0d\x5c\xad\x54\x09\x55\x3f\x9b\xd3\x7a\xbc\x7c\xde\xaf\xb7\x1b\x07\x37\xaf\xde\xc2\xe6\x2b\x00\x00\xff\xff\xa4\xb5\x92\x62\x63\x01\x00\x00")

func runtimeSyntaxViMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxViMicro,
		"runtime/syntax/vi.micro",
	)
}

func runtimeSyntaxViMicro() (*asset, error) {
	bytes, err := runtimeSyntaxViMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/vi.micro", size: 355, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxXmlMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\xce\xcd\x4a\x03\x31\x14\xc5\xf1\x7d\x9e\xe2\x78\x23\xa2\x2d\x89\x0f\xd0\x8f\x59\xa8\xe0\x42\xd1\x85\x0b\x25\x66\x20\xb4\xb7\xd3\x91\x4c\x46\x92\x40\x67\xa0\x0f\xef\x14\x6a\x16\x82\xbb\x70\xf2\xe3\xcf\x95\x12\x8f\x1c\x19\x6d\x82\x0b\xe0\xc1\x75\xdf\x9e\xb1\xeb\x23\x86\xce\x63\xd7\x7a\x4e\x5a\x48\x29\x44\x1a\x43\x76\x03\xe8\xfd\xf9\x89\x40\x7a\xf6\xa9\xaf\xcd\x57\x4c\xb6\xda\xe7\xce\x57\xc7\x49\x1f\x53\x73\x7a\xc5\xd0\xdc\x5c\x92\xd8\xf4\x7e\x8a\x1c\xf6\x6d\x66\x50\xad\xe7\x65\x6a\x22\x73\x00\x52\x76\x31\xaf\x68\x49\xe0\xb0\x5d\xd1\xfa\xf7\x7b\x33\x4e\x77\x00\xb4\x34\xf5\x1a\x76\xfe\x77\x2e\x6e\x64\xef\xfb\x43\xc9\x5c\xdc\xbf\xdc\xbd\x7d\xbc\x3e\x9c\x73\xe6\xd6\x56\xff\x52\xa5\xce\x4a\xa9\x62\x22\x6f\x71\xea\x5f\x99\x7a\x61\x67\x0b\x12\x3f\x01\x00\x00\xff\xff\x48\xd5\xba\x38\x19\x01\x00\x00")

func runtimeSyntaxXmlMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxXmlMicro,
		"runtime/syntax/xml.micro",
	)
}

func runtimeSyntaxXmlMicro() (*asset, error) {
	bytes, err := runtimeSyntaxXmlMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/xml.micro", size: 281, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxXresourcesMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8f\xdb\x4e\xc3\x30\x0c\x86\xaf\xd7\xa7\xb0\xcc\x2e\xda\x06\x10\xb7\x44\x1c\x5e\x03\x29\x4d\xa5\x2c\xf3\x06\xc2\x24\x28\x07\x41\x45\x1e\x9e\x94\xb1\x43\x7d\x67\xff\x9f\xff\xdf\x8e\x93\x4b\xe6\x1b\xf0\x25\x50\xf4\x39\x58\x8a\x58\x9b\x76\x4b\x3b\x93\x39\xc5\x72\x1a\x77\x6b\x6c\x1a\xeb\xd9\x07\xd8\x07\x22\x07\x73\xe1\xa8\x94\x34\xec\xf2\x87\xd4\x5a\x0c\x3d\xfe\x13\x9b\xf0\xb6\x7f\x4d\x13\x31\xfb\x2f\xc0\xa1\x5f\x50\xf2\x44\x71\xa6\xd9\x64\x78\x50\x77\x37\xf7\x55\x79\x3a\x2a\x81\xb6\x80\xaa\x97\x8f\x7a\xe9\x68\x27\xe3\x66\xbe\x4d\x21\x53\xd9\x19\x8e\xd4\x9d\xb7\x0e\xcc\x86\x8d\x7d\x07\x6c\xc7\x52\x53\xe3\xa7\xb1\x54\x53\xbb\xab\x56\x8d\x3f\xfa\xb6\xef\x9e\xd7\x47\xfc\xfa\xf0\x07\x5e\x60\xe2\x2c\xfe\x9d\xb0\x12\x20\x0a\x88\x95\xc0\xe6\x37\x00\x00\xff\xff\xd6\x65\x3b\xf7\x29\x01\x00\x00")

func runtimeSyntaxXresourcesMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxXresourcesMicro,
		"runtime/syntax/xresources.micro",
	)
}

func runtimeSyntaxXresourcesMicro() (*asset, error) {
	bytes, err := runtimeSyntaxXresourcesMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/xresources.micro", size: 297, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxYamlMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x51\x5d\x4f\xc2\x30\x14\x7d\x86\x5f\x51\x2a\xc8\x3e\xd8\xe2\xab\xc4\x40\x78\x10\x5f\x14\x1e\xf4\x05\xdb\x35\xe9\x46\x07\xc4\xd2\x62\x57\xa2\xd5\xfb\xe3\x5d\x11\xc8\x30\x6e\xd9\x72\x3f\xce\x39\xb9\xf7\x9e\xca\x29\xcb\x3f\x11\x5e\x4c\x9e\x1e\x31\xc2\x34\x75\x7c\xbc\x95\x5d\xdc\x5e\x0b\xbe\x14\x06\x61\x96\x24\x49\xdd\xe8\x1d\x00\xed\x76\xa1\xa5\x36\x68\x65\x84\x50\xc8\x3f\x38\x60\x80\xc2\x4e\x27\xc8\x37\x8a\x1b\x07\xb9\xd6\x12\x4a\xa9\xb9\x85\x8d\xb2\xb0\xe5\x3b\x50\x7b\x29\x41\xfb\xa8\x12\xef\xf5\x67\xa1\xb2\x26\x44\xf8\xa8\x95\x9b\xcd\x6a\x6d\x0b\xc7\x6b\x41\x4c\xef\x82\xc5\xfd\x33\x38\x51\xc1\x02\x1c\xcc\x67\xa0\x15\xcc\xe6\xa0\x34\xcc\x40\xc1\x7c\x3a\x05\x5d\x96\x21\x1d\xfd\xc3\xf6\x64\x6b\xf6\x02\x4a\x2e\x2b\xd1\xc0\x18\xb1\x44\x78\x48\xc8\xb0\xda\xf1\x42\x0c\xb3\xcc\x2f\x4a\xfc\xcf\x47\xcd\x46\x4c\x60\xe4\x6b\xac\x51\x8b\x92\x3f\xa3\x3a\x21\xa5\xfe\x40\xb8\x81\x21\x34\xba\xce\xc8\x24\x79\xe5\xc9\xd7\x4d\x72\x9b\xc5\x27\xc6\x09\x8b\x03\x4a\x53\x20\x0c\x67\x61\x84\xa1\x7f\xcc\xfa\x75\xd6\xbf\x14\xcf\x25\x2f\xde\x0e\x57\x6d\xc8\x87\x57\x01\x61\xdf\x59\x1a\x85\xe3\xee\x25\x7c\xcb\x57\xa2\x36\x10\x9d\x7d\x62\x34\xf5\xaf\x8f\x7a\x47\x4f\x59\xef\x65\xf2\x70\xa2\x0d\x7e\xad\x6b\x0e\x1f\x9f\x35\x07\x87\x4b\xb5\x62\x14\x03\x8a\x5b\xf5\x12\x3f\x01\x00\x00\xff\xff\x0b\xb8\xfc\x8d\x1e\x02\x00\x00")

func runtimeSyntaxYamlMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxYamlMicro,
		"runtime/syntax/yaml.micro",
	)
}

func runtimeSyntaxYamlMicro() (*asset, error) {
	bytes, err := runtimeSyntaxYamlMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/yaml.micro", size: 542, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxYumMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8e\xc1\x4e\xc3\x30\x0c\x86\xcf\xeb\x53\x58\x26\x87\x36\x81\x88\x2b\x93\x26\x9e\x80\x23\x07\x94\x26\x52\x9a\x99\x6e\x22\x6b\x26\x77\x05\x22\xf2\xf0\x44\x08\xc1\xb6\x9b\x2d\x7f\xfe\xbf\x7f\xce\xd3\xc9\x7f\x02\xbe\x3c\x3f\x21\x60\xaf\x99\x8e\x49\x94\xbc\x1c\xb4\xec\x75\x48\xd3\xab\xc0\xa6\x09\x29\x26\x86\x90\xfd\x04\xe8\x8c\x59\xcf\x47\x1f\x68\x6d\xad\x34\x6e\x63\xe5\x06\x7f\x81\x81\xf7\xe3\xee\x74\xf0\x23\xd5\xcc\x2b\xb2\x37\x35\xd0\x8a\x4b\x34\x53\x8c\xe9\xa3\x6a\x45\xcb\x14\xc9\xcf\xf4\x4e\x5c\x3c\x87\x5d\x19\xea\xf2\x33\x2c\xcb\x7e\x5b\x6a\x3b\x73\x7f\xf7\x60\xbb\xcb\xff\x21\xfa\xf0\x06\xd8\xba\x72\xa6\xea\x6e\x5a\xe3\xbe\xac\x96\xdd\xe3\x9f\xee\x76\x64\xa2\x5a\xfe\x0c\x53\xff\x47\xa6\x2d\xe0\x4a\x81\x2a\xa0\x56\x0a\x9b\xef\x00\x00\x00\xff\xff\x86\xf1\x4c\x36\x14\x01\x00\x00")

func runtimeSyntaxYumMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxYumMicro,
		"runtime/syntax/yum.micro",
	)
}

func runtimeSyntaxYumMicro() (*asset, error) {
	bytes, err := runtimeSyntaxYumMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/yum.micro", size: 276, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeSyntaxZshMicro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x55\x5d\x8f\xd4\x36\x14\x7d\xdf\x5f\x11\x66\x47\x25\xd9\x65\xb6\x40\x01\xb5\x94\x32\x6d\x91\xaa\x3e\x54\x7d\xa1\xea\x03\x9b\xa5\xf5\xd8\x4e\x62\xe2\x8f\xe0\x8f\x9d\xcd\x72\xf9\xef\x3d\x76\x76\x28\x53\x21\x55\x4a\x6c\x47\xb6\xef\xc7\xb9\xf7\x9c\x9c\x9e\x56\xaf\x67\x1b\xd9\x4d\x35\xa8\x7e\xd0\x78\xa3\xb2\x7d\xd5\x39\x5f\xbd\x79\xfd\x6b\x15\xb8\x57\x53\x0c\x55\xad\xac\x8a\x8a\x69\x3d\x57\xdc\x4d\x4a\x8a\xaa\xf3\xce\x54\x61\xb8\xb0\xcc\x3a\xcf\x9b\x93\xb0\x58\x59\xe1\xd6\xaa\x5a\xb5\x17\xb7\x61\x58\x97\xc5\xb6\xc6\x52\xda\x6b\xba\x9d\xbc\xeb\x94\x96\x84\x6f\xcf\xe9\x56\xbb\x5e\xd9\x32\xb9\x14\x9b\xf5\xea\x64\x90\x4c\x48\x5f\xad\xde\x9e\xde\xbb\x38\xfb\xba\xc6\x9d\xea\xbc\xd9\xe2\x74\x5d\xd1\xba\x59\x9d\x9c\x20\xd8\xdf\x93\xd9\x49\x1f\x4e\xb8\xd3\x08\x71\xe7\x73\xc0\xb3\xd4\xda\xed\xe1\x6b\x77\xf9\x70\xf3\xdd\xd5\x79\xbb\x5b\xce\xbe\x72\x56\x20\x6a\x67\x99\x0e\x15\xb3\x02\xa1\xdb\xe8\x9d\xae\x3a\x1c\xbf\xb3\xd0\x7b\x29\x2d\xae\xbe\xa8\x99\xde\xb3\x39\xd0\xce\x4b\x36\xd2\x6e\x96\xc4\x59\xc0\x80\x2b\xca\x26\x49\x42\x05\xb7\xb7\x24\x1c\x1e\x2b\x49\x6a\xd5\x61\xc0\x09\x19\x18\x27\x79\xa3\x22\x75\x8a\x80\x1b\x75\xc9\xf2\xec\x95\x70\x02\x09\x6a\xc7\x99\x26\x58\x15\x18\x62\xf2\x96\x82\xd4\x92\x47\x0a\x83\xea\x22\x45\x60\x43\x51\x19\x49\x09\x9e\x34\xed\x07\x40\xd4\xb4\x2f\x91\xc2\x51\x84\x75\xfb\x81\xda\x8f\xd4\xd6\xd4\x36\xd4\x7e\x4f\xed\x15\xb5\x97\xf4\x37\xb5\x2d\xb5\x6b\x7a\x41\x2f\xe9\x1e\xfd\x40\x5f\x51\x4b\x40\xea\x38\x79\xe4\xcb\xfa\x70\x6c\x6e\x73\xf9\x9b\x90\x5d\xef\xd3\xfe\xe6\x2a\x3b\x3b\xde\xac\xe5\x7b\x42\x92\x7d\x24\x1d\xa9\x97\x84\xa2\x05\x42\xad\x96\xb8\x60\xfd\x67\x16\x86\x8d\xb2\x83\xf4\x2a\x4a\x71\x54\x8d\x9d\x4e\xb2\x00\x5a\x27\xdb\x6c\x99\x56\x0c\xa0\x2a\x2b\x46\x39\xd3\x2e\x29\x0d\x38\x89\x0b\x12\x92\x6b\xe6\x01\xdf\x35\xd0\x91\x37\x32\x63\x38\x39\x1f\xe9\x9d\xdb\x05\x38\x8c\x34\xb9\x49\xd0\x94\xc2\x20\x80\x18\xe0\x72\xc9\x73\x49\x71\x9e\x64\xfe\x4c\x86\x85\x11\x98\x61\x5d\xa2\x42\x50\x68\xbd\x4d\x98\x24\x57\x9d\xe2\x5f\x0e\x89\x09\xb1\x41\x3f\x6d\x06\xe7\x46\x62\x29\xe2\x0c\xca\xc2\x07\xa1\x3c\x2a\x6d\xa6\xdc\xe5\xa8\xb4\x0f\x54\xa3\xde\x24\x6d\xc3\x76\xc8\x5d\xf2\xc1\x45\x04\x68\x92\x66\x51\xd2\xe4\x95\x45\x78\x20\xc0\x14\x0b\x31\x9a\x2d\x95\x64\x11\x8b\x9b\x22\x5a\x1a\x3d\x6e\x9c\x28\xc6\x6f\x43\x9c\xf1\xbd\x47\x99\xb9\xfc\x84\xdf\x2b\x67\x8c\xb3\x95\x46\x6b\xdd\xa0\x2d\x8d\x41\x7b\x1e\x37\xb5\x61\xbd\x04\xa3\x16\x24\x7b\x52\x3d\xb0\xdc\x8f\xe8\x31\x2b\xa8\xdd\x7f\x78\xf8\xe0\xc9\x47\x54\x6b\xa2\x51\x69\x5d\x06\x90\xf3\xb0\xa1\x65\x08\x64\xd8\x88\x50\xcb\x76\x90\x82\x22\xf3\x9f\x79\xf7\x32\xa1\xd9\xc2\xff\xbb\xde\x81\x04\xcf\x9e\x50\x9e\x2c\x33\x99\x14\x11\x78\x81\x15\x18\x7b\x3f\x61\x44\xa2\x18\x33\x37\xf8\xe0\x9d\xc3\xf6\x18\x92\xc9\x70\x62\xc0\x81\x30\x69\x80\xca\x13\x80\xcd\xe0\x09\x94\xbe\xcb\x18\xe7\xb7\x78\x0d\x79\x55\x8c\x8b\x54\xa0\xa6\xac\x16\xe8\x06\x04\x96\x27\x30\x8a\xf1\x98\x89\xc5\x32\xdf\x3a\x03\xa6\x39\x2d\x28\xcb\x05\x0d\x2e\x44\x25\x28\x3f\x36\xc4\x8c\xc1\x3b\x97\x49\xa7\xec\x48\x3a\x93\xaf\x2f\x96\x35\xf0\x10\x4f\x73\x5c\x66\xcc\xbe\xcd\xd8\xa9\xce\x61\xb2\x88\xde\x8c\x51\x9a\x89\xcc\x35\x59\x85\x0e\xb3\x9a\xac\x1b\xd2\x44\x16\x25\xe6\x64\x93\xc9\x2e\x71\x6e\x62\x21\x57\x9f\xc5\x81\x0f\x23\xa1\x59\xc6\x19\x5d\xb0\xb4\x43\x0e\xb9\x2c\x3a\x9a\xe2\x0d\x4d\x7b\x51\x28\x5f\xe2\xc0\x42\xe7\x5b\xe4\x0d\x9e\xec\xde\x43\x22\x5c\x16\x82\xf7\x54\x87\x81\x3d\x82\x16\xb0\xc7\x8f\x9f\x94\xe9\xe9\xb3\x3c\x7d\xf3\x6d\xf9\x7a\xfa\xe8\x71\x93\xa3\x86\x62\xa2\x86\x61\x48\x1d\x05\x2d\x51\xf6\x90\xa9\xb2\x40\x8b\xb4\xf3\x20\x76\x79\x33\xc6\x99\xca\x85\xd9\x72\xd4\x3c\xbf\x10\x95\x28\x41\x1c\x19\x62\x11\x1a\xa8\x2d\x45\x97\xf8\x40\xd1\xe3\x81\xb6\xc5\x1c\x4f\x2e\x4e\x2c\x66\xb3\x8d\x54\x60\x4b\xf6\xae\x0c\xc9\xaa\xf7\x18\x4a\x3a\x29\x40\x80\xe9\x3a\xe7\xb1\xe7\x68\x6c\x97\x5f\x66\x14\xcd\x32\x7c\x6a\xb1\x5f\xee\x44\xb0\x82\xca\x94\x7f\x87\xb3\x27\x4b\x77\x2d\x1a\x53\xab\x06\x42\xdf\x86\xf3\xfa\x20\x97\x58\x37\x59\xbf\x7f\xda\xbc\xf9\x0b\x1a\x1e\xce\xdb\xba\xbd\x13\xfd\x3f\x99\x57\x99\x88\xe1\xce\x04\xb0\x58\x0c\xb4\xeb\xf6\xc3\xf6\x70\xe9\xde\x8f\xa7\xeb\xb3\xed\x06\x77\x3f\x6e\x97\x7b\xaf\x23\x2a\xf2\x49\xf9\x0e\xbf\x09\x48\x69\x7b\x41\x97\x6f\x57\x57\xcd\xd9\x6a\xf5\x9f\xcd\xfb\x77\x9b\xf7\xb1\x79\xff\x5f\xae\x82\x0f\x07\x33\x7c\x66\x59\x8e\xdf\xd2\xe5\xe5\xf3\x30\x31\x2e\x9f\x5f\x5d\x35\xa7\x17\x67\xeb\xd5\x11\x89\xbe\x7c\x6c\x39\x97\xad\xfe\xe1\x51\x98\xfc\xab\x2d\x9b\x07\xe3\x0f\x16\xa9\xfa\xec\xce\x39\xce\xff\x13\x00\x00\xff\xff\x6b\xdb\xa9\x09\xa5\x07\x00\x00")

func runtimeSyntaxZshMicroBytes() ([]byte, error) {
	return bindataRead(
		_runtimeSyntaxZshMicro,
		"runtime/syntax/zsh.micro",
	)
}

func runtimeSyntaxZshMicro() (*asset, error) {
	bytes, err := runtimeSyntaxZshMicroBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/syntax/zsh.micro", size: 1957, mode: os.FileMode(436), modTime: time.Unix(1461425440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"runtime/README.md": runtimeReadmeMd,
	"runtime/colorschemes/default.micro": runtimeColorschemesDefaultMicro,
	"runtime/colorschemes/solarized-tc.micro": runtimeColorschemesSolarizedTcMicro,
	"runtime/colorschemes/solarized.micro": runtimeColorschemesSolarizedMicro,
	"runtime/syntax/Dockerfile.micro": runtimeSyntaxDockerfileMicro,
	"runtime/syntax/LICENSE": runtimeSyntaxLicense,
	"runtime/syntax/README.md": runtimeSyntaxReadmeMd,
	"runtime/syntax/apacheconf.micro": runtimeSyntaxApacheconfMicro,
	"runtime/syntax/arduino.micro": runtimeSyntaxArduinoMicro,
	"runtime/syntax/asciidoc.micro": runtimeSyntaxAsciidocMicro,
	"runtime/syntax/asm.micro": runtimeSyntaxAsmMicro,
	"runtime/syntax/awk.micro": runtimeSyntaxAwkMicro,
	"runtime/syntax/c.micro": runtimeSyntaxCMicro,
	"runtime/syntax/cmake.micro": runtimeSyntaxCmakeMicro,
	"runtime/syntax/coffeescript.micro": runtimeSyntaxCoffeescriptMicro,
	"runtime/syntax/colortest.micro": runtimeSyntaxColortestMicro,
	"runtime/syntax/conf.micro": runtimeSyntaxConfMicro,
	"runtime/syntax/conky.micro": runtimeSyntaxConkyMicro,
	"runtime/syntax/csharp.micro": runtimeSyntaxCsharpMicro,
	"runtime/syntax/css.micro": runtimeSyntaxCssMicro,
	"runtime/syntax/cython.micro": runtimeSyntaxCythonMicro,
	"runtime/syntax/d.micro": runtimeSyntaxDMicro,
	"runtime/syntax/dot.micro": runtimeSyntaxDotMicro,
	"runtime/syntax/erb.micro": runtimeSyntaxErbMicro,
	"runtime/syntax/fish.micro": runtimeSyntaxFishMicro,
	"runtime/syntax/fortran.micro": runtimeSyntaxFortranMicro,
	"runtime/syntax/gentoo-ebuild.micro": runtimeSyntaxGentooEbuildMicro,
	"runtime/syntax/gentoo-etc-portage.micro": runtimeSyntaxGentooEtcPortageMicro,
	"runtime/syntax/git-commit.micro": runtimeSyntaxGitCommitMicro,
	"runtime/syntax/git-config.micro": runtimeSyntaxGitConfigMicro,
	"runtime/syntax/git-rebase-todo.micro": runtimeSyntaxGitRebaseTodoMicro,
	"runtime/syntax/glsl.micro": runtimeSyntaxGlslMicro,
	"runtime/syntax/go.micro": runtimeSyntaxGoMicro,
	"runtime/syntax/groff.micro": runtimeSyntaxGroffMicro,
	"runtime/syntax/haml.micro": runtimeSyntaxHamlMicro,
	"runtime/syntax/haskell.micro": runtimeSyntaxHaskellMicro,
	"runtime/syntax/html.micro": runtimeSyntaxHtmlMicro,
	"runtime/syntax/ini.micro": runtimeSyntaxIniMicro,
	"runtime/syntax/inputrc.micro": runtimeSyntaxInputrcMicro,
	"runtime/syntax/java.micro": runtimeSyntaxJavaMicro,
	"runtime/syntax/javascript.micro": runtimeSyntaxJavascriptMicro,
	"runtime/syntax/json.micro": runtimeSyntaxJsonMicro,
	"runtime/syntax/keymap.micro": runtimeSyntaxKeymapMicro,
	"runtime/syntax/kickstart.micro": runtimeSyntaxKickstartMicro,
	"runtime/syntax/ledger.micro": runtimeSyntaxLedgerMicro,
	"runtime/syntax/lisp.micro": runtimeSyntaxLispMicro,
	"runtime/syntax/lua.micro": runtimeSyntaxLuaMicro,
	"runtime/syntax/makefile.micro": runtimeSyntaxMakefileMicro,
	"runtime/syntax/man.micro": runtimeSyntaxManMicro,
	"runtime/syntax/markdown.micro": runtimeSyntaxMarkdownMicro,
	"runtime/syntax/mpdconf.micro": runtimeSyntaxMpdconfMicro,
	"runtime/syntax/nanorc.micro": runtimeSyntaxNanorcMicro,
	"runtime/syntax/nginx.micro": runtimeSyntaxNginxMicro,
	"runtime/syntax/ocaml.micro": runtimeSyntaxOcamlMicro,
	"runtime/syntax/patch.micro": runtimeSyntaxPatchMicro,
	"runtime/syntax/peg.micro": runtimeSyntaxPegMicro,
	"runtime/syntax/perl.micro": runtimeSyntaxPerlMicro,
	"runtime/syntax/perl6.micro": runtimeSyntaxPerl6Micro,
	"runtime/syntax/php.micro": runtimeSyntaxPhpMicro,
	"runtime/syntax/pkg-config.micro": runtimeSyntaxPkgConfigMicro,
	"runtime/syntax/pkgbuild.micro": runtimeSyntaxPkgbuildMicro,
	"runtime/syntax/po.micro": runtimeSyntaxPoMicro,
	"runtime/syntax/pov.micro": runtimeSyntaxPovMicro,
	"runtime/syntax/privoxy-action.micro": runtimeSyntaxPrivoxyActionMicro,
	"runtime/syntax/privoxy-config.micro": runtimeSyntaxPrivoxyConfigMicro,
	"runtime/syntax/privoxy-filter.micro": runtimeSyntaxPrivoxyFilterMicro,
	"runtime/syntax/puppet.micro": runtimeSyntaxPuppetMicro,
	"runtime/syntax/python.micro": runtimeSyntaxPythonMicro,
	"runtime/syntax/reST.micro": runtimeSyntaxRestMicro,
	"runtime/syntax/rpmspec.micro": runtimeSyntaxRpmspecMicro,
	"runtime/syntax/ruby.micro": runtimeSyntaxRubyMicro,
	"runtime/syntax/rust.micro": runtimeSyntaxRustMicro,
	"runtime/syntax/scala.micro": runtimeSyntaxScalaMicro,
	"runtime/syntax/sed.micro": runtimeSyntaxSedMicro,
	"runtime/syntax/sh.micro": runtimeSyntaxShMicro,
	"runtime/syntax/sls.micro": runtimeSyntaxSlsMicro,
	"runtime/syntax/sql.micro": runtimeSyntaxSqlMicro,
	"runtime/syntax/swift.micro": runtimeSyntaxSwiftMicro,
	"runtime/syntax/systemd.micro": runtimeSyntaxSystemdMicro,
	"runtime/syntax/tcl.micro": runtimeSyntaxTclMicro,
	"runtime/syntax/tex.micro": runtimeSyntaxTexMicro,
	"runtime/syntax/vala.micro": runtimeSyntaxValaMicro,
	"runtime/syntax/vi.micro": runtimeSyntaxViMicro,
	"runtime/syntax/xml.micro": runtimeSyntaxXmlMicro,
	"runtime/syntax/xresources.micro": runtimeSyntaxXresourcesMicro,
	"runtime/syntax/yaml.micro": runtimeSyntaxYamlMicro,
	"runtime/syntax/yum.micro": runtimeSyntaxYumMicro,
	"runtime/syntax/zsh.micro": runtimeSyntaxZshMicro,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"runtime": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{runtimeReadmeMd, map[string]*bintree{}},
		"colorschemes": &bintree{nil, map[string]*bintree{
			"default.micro": &bintree{runtimeColorschemesDefaultMicro, map[string]*bintree{}},
			"solarized-tc.micro": &bintree{runtimeColorschemesSolarizedTcMicro, map[string]*bintree{}},
			"solarized.micro": &bintree{runtimeColorschemesSolarizedMicro, map[string]*bintree{}},
		}},
		"syntax": &bintree{nil, map[string]*bintree{
			"Dockerfile.micro": &bintree{runtimeSyntaxDockerfileMicro, map[string]*bintree{}},
			"LICENSE": &bintree{runtimeSyntaxLicense, map[string]*bintree{}},
			"README.md": &bintree{runtimeSyntaxReadmeMd, map[string]*bintree{}},
			"apacheconf.micro": &bintree{runtimeSyntaxApacheconfMicro, map[string]*bintree{}},
			"arduino.micro": &bintree{runtimeSyntaxArduinoMicro, map[string]*bintree{}},
			"asciidoc.micro": &bintree{runtimeSyntaxAsciidocMicro, map[string]*bintree{}},
			"asm.micro": &bintree{runtimeSyntaxAsmMicro, map[string]*bintree{}},
			"awk.micro": &bintree{runtimeSyntaxAwkMicro, map[string]*bintree{}},
			"c.micro": &bintree{runtimeSyntaxCMicro, map[string]*bintree{}},
			"cmake.micro": &bintree{runtimeSyntaxCmakeMicro, map[string]*bintree{}},
			"coffeescript.micro": &bintree{runtimeSyntaxCoffeescriptMicro, map[string]*bintree{}},
			"colortest.micro": &bintree{runtimeSyntaxColortestMicro, map[string]*bintree{}},
			"conf.micro": &bintree{runtimeSyntaxConfMicro, map[string]*bintree{}},
			"conky.micro": &bintree{runtimeSyntaxConkyMicro, map[string]*bintree{}},
			"csharp.micro": &bintree{runtimeSyntaxCsharpMicro, map[string]*bintree{}},
			"css.micro": &bintree{runtimeSyntaxCssMicro, map[string]*bintree{}},
			"cython.micro": &bintree{runtimeSyntaxCythonMicro, map[string]*bintree{}},
			"d.micro": &bintree{runtimeSyntaxDMicro, map[string]*bintree{}},
			"dot.micro": &bintree{runtimeSyntaxDotMicro, map[string]*bintree{}},
			"erb.micro": &bintree{runtimeSyntaxErbMicro, map[string]*bintree{}},
			"fish.micro": &bintree{runtimeSyntaxFishMicro, map[string]*bintree{}},
			"fortran.micro": &bintree{runtimeSyntaxFortranMicro, map[string]*bintree{}},
			"gentoo-ebuild.micro": &bintree{runtimeSyntaxGentooEbuildMicro, map[string]*bintree{}},
			"gentoo-etc-portage.micro": &bintree{runtimeSyntaxGentooEtcPortageMicro, map[string]*bintree{}},
			"git-commit.micro": &bintree{runtimeSyntaxGitCommitMicro, map[string]*bintree{}},
			"git-config.micro": &bintree{runtimeSyntaxGitConfigMicro, map[string]*bintree{}},
			"git-rebase-todo.micro": &bintree{runtimeSyntaxGitRebaseTodoMicro, map[string]*bintree{}},
			"glsl.micro": &bintree{runtimeSyntaxGlslMicro, map[string]*bintree{}},
			"go.micro": &bintree{runtimeSyntaxGoMicro, map[string]*bintree{}},
			"groff.micro": &bintree{runtimeSyntaxGroffMicro, map[string]*bintree{}},
			"haml.micro": &bintree{runtimeSyntaxHamlMicro, map[string]*bintree{}},
			"haskell.micro": &bintree{runtimeSyntaxHaskellMicro, map[string]*bintree{}},
			"html.micro": &bintree{runtimeSyntaxHtmlMicro, map[string]*bintree{}},
			"ini.micro": &bintree{runtimeSyntaxIniMicro, map[string]*bintree{}},
			"inputrc.micro": &bintree{runtimeSyntaxInputrcMicro, map[string]*bintree{}},
			"java.micro": &bintree{runtimeSyntaxJavaMicro, map[string]*bintree{}},
			"javascript.micro": &bintree{runtimeSyntaxJavascriptMicro, map[string]*bintree{}},
			"json.micro": &bintree{runtimeSyntaxJsonMicro, map[string]*bintree{}},
			"keymap.micro": &bintree{runtimeSyntaxKeymapMicro, map[string]*bintree{}},
			"kickstart.micro": &bintree{runtimeSyntaxKickstartMicro, map[string]*bintree{}},
			"ledger.micro": &bintree{runtimeSyntaxLedgerMicro, map[string]*bintree{}},
			"lisp.micro": &bintree{runtimeSyntaxLispMicro, map[string]*bintree{}},
			"lua.micro": &bintree{runtimeSyntaxLuaMicro, map[string]*bintree{}},
			"makefile.micro": &bintree{runtimeSyntaxMakefileMicro, map[string]*bintree{}},
			"man.micro": &bintree{runtimeSyntaxManMicro, map[string]*bintree{}},
			"markdown.micro": &bintree{runtimeSyntaxMarkdownMicro, map[string]*bintree{}},
			"mpdconf.micro": &bintree{runtimeSyntaxMpdconfMicro, map[string]*bintree{}},
			"nanorc.micro": &bintree{runtimeSyntaxNanorcMicro, map[string]*bintree{}},
			"nginx.micro": &bintree{runtimeSyntaxNginxMicro, map[string]*bintree{}},
			"ocaml.micro": &bintree{runtimeSyntaxOcamlMicro, map[string]*bintree{}},
			"patch.micro": &bintree{runtimeSyntaxPatchMicro, map[string]*bintree{}},
			"peg.micro": &bintree{runtimeSyntaxPegMicro, map[string]*bintree{}},
			"perl.micro": &bintree{runtimeSyntaxPerlMicro, map[string]*bintree{}},
			"perl6.micro": &bintree{runtimeSyntaxPerl6Micro, map[string]*bintree{}},
			"php.micro": &bintree{runtimeSyntaxPhpMicro, map[string]*bintree{}},
			"pkg-config.micro": &bintree{runtimeSyntaxPkgConfigMicro, map[string]*bintree{}},
			"pkgbuild.micro": &bintree{runtimeSyntaxPkgbuildMicro, map[string]*bintree{}},
			"po.micro": &bintree{runtimeSyntaxPoMicro, map[string]*bintree{}},
			"pov.micro": &bintree{runtimeSyntaxPovMicro, map[string]*bintree{}},
			"privoxy-action.micro": &bintree{runtimeSyntaxPrivoxyActionMicro, map[string]*bintree{}},
			"privoxy-config.micro": &bintree{runtimeSyntaxPrivoxyConfigMicro, map[string]*bintree{}},
			"privoxy-filter.micro": &bintree{runtimeSyntaxPrivoxyFilterMicro, map[string]*bintree{}},
			"puppet.micro": &bintree{runtimeSyntaxPuppetMicro, map[string]*bintree{}},
			"python.micro": &bintree{runtimeSyntaxPythonMicro, map[string]*bintree{}},
			"reST.micro": &bintree{runtimeSyntaxRestMicro, map[string]*bintree{}},
			"rpmspec.micro": &bintree{runtimeSyntaxRpmspecMicro, map[string]*bintree{}},
			"ruby.micro": &bintree{runtimeSyntaxRubyMicro, map[string]*bintree{}},
			"rust.micro": &bintree{runtimeSyntaxRustMicro, map[string]*bintree{}},
			"scala.micro": &bintree{runtimeSyntaxScalaMicro, map[string]*bintree{}},
			"sed.micro": &bintree{runtimeSyntaxSedMicro, map[string]*bintree{}},
			"sh.micro": &bintree{runtimeSyntaxShMicro, map[string]*bintree{}},
			"sls.micro": &bintree{runtimeSyntaxSlsMicro, map[string]*bintree{}},
			"sql.micro": &bintree{runtimeSyntaxSqlMicro, map[string]*bintree{}},
			"swift.micro": &bintree{runtimeSyntaxSwiftMicro, map[string]*bintree{}},
			"systemd.micro": &bintree{runtimeSyntaxSystemdMicro, map[string]*bintree{}},
			"tcl.micro": &bintree{runtimeSyntaxTclMicro, map[string]*bintree{}},
			"tex.micro": &bintree{runtimeSyntaxTexMicro, map[string]*bintree{}},
			"vala.micro": &bintree{runtimeSyntaxValaMicro, map[string]*bintree{}},
			"vi.micro": &bintree{runtimeSyntaxViMicro, map[string]*bintree{}},
			"xml.micro": &bintree{runtimeSyntaxXmlMicro, map[string]*bintree{}},
			"xresources.micro": &bintree{runtimeSyntaxXresourcesMicro, map[string]*bintree{}},
			"yaml.micro": &bintree{runtimeSyntaxYamlMicro, map[string]*bintree{}},
			"yum.micro": &bintree{runtimeSyntaxYumMicro, map[string]*bintree{}},
			"zsh.micro": &bintree{runtimeSyntaxZshMicro, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

