syntax "haskell" "\.hs$"

## Keywords
color statement "[ ](as|case|of|class|data|default|deriving|do|forall|foreign|hiding|if|then|else|import|infix|infixl|infixr|instance|let|in|mdo|module|newtype|qualified|type|where)[ ]"
color statement "(^data|^foreign|^import|^infix|^infixl|^infixr|^instance|^module|^newtype|^type)[ ]"
color statement "[ ](as$|case$|of$|class$|data$|default$|deriving$|do$|forall$|foreign$|hiding$|if$|then$|else$|import$|infix$|infixl$|infixr$|instance$|let$|in$|mdo$|module$|newtype$|qualified$|type$|where$)"

## Various symbols
color symbol "(\||@|!|:|_|~|=|\\|;|\(\)|,|\[|\]|\{|\})"

## Operators
color symbol.operator "(==|/=|&&|\|\||<|>|<=|>=)"

## Various symbols
color special "(->|<-)"
color symbol "\.|\$"

## Data constructors
color constant.bool "\b(True|False)\b"
color constant "(Nothing|Just|Left|Right|LT|EQ|GT)"

## Data classes
color identifier.class "[ ](Read|Show|Enum|Eq|Ord|Data|Bounded|Typeable|Num|Real|Fractional|Integral|RealFrac|Floating|RealFloat|Monad|MonadPlus|Functor)"

## Strings
color constant.string ""[^\"]*""

## Comments
color comment "--.*"
color comment start="\{-" end="-\}"

color identifier.micro "undefined"
