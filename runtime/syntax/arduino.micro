
## FILENAME:    arduino.nanorc
##
## DESCRIPTION: The arduino.nanorc syntax files allows syntax highlighting
##              for Arduino sketch files in the GNU nano text editor.
##
## Maintainer:  Nicholas Wilde
## Version:     0.1
## DATE:        06/23/2011
##
## HOMEPAGE:    http://code.google.com/p/arduino-nano-editor-syntax/
##
## COMMENTS:    -Most of the code was taken from the c.nanorc code found with 
##               GNU nano 2.2.6.
##              -Direction was taken from the arduino vim syntax code by johannes
##               <https://bitbucket.org/johannes/arduino-vim-syntax/>
##              -Tested on Ubuntu Server 11.04 Natty Narwhal and GNU nano 2.2.6
##
## DIRECTIONS:  For Ubuntu Server 11.04 Natty Narwhal:
##              -Move this file <arduino.nanorc> to the nano directory
##               /usr/share/nano/
##              -Add arduino.nanorc reference to the nanorc settings file
##               /etc/nanorc
##               ...
##               ## Arduino
##               /usr/share/nano/arduino.nanorc
##               ...

syntax "ino"  "\.?ino$"

## 
color identifier.macro "\b[A-Z_][0-9A-Z_]+\b" 

## 
color type "\b((s?size)|((u_?)?int(8|16|32|64|ptr)))_t\b"

## Constants
color constant "\b(HIGH|LOW|INPUT|OUTPUT)\b"

## Serial Print
color identifier.macro "\b(DEC|BIN|HEX|OCT|BYTE)\b"

## PI Constants
color constant "\b(PI|HALF_PI|TWO_PI)\b"

## ShiftOut
color constant "\b(LSBFIRST|MSBFIRST)\b"

## Attach Interrupt
color constant  "\b(CHANGE|FALLING|RISING)\b"

## Analog Reference
color constant  "\b(DEFAULT|EXTERNAL|INTERNAL|INTERNAL1V1|INTERNAL2V56)\b"

## === FUNCTIONS === ##

## Data Types
color type "\b(boolean|byte|char|float|int|long|word)\b"

## Control Structions
color statement "\b(case|class|default|do|double|else|false|for|if|new|null|private|protected|public|short|signed|static|String|switch|this|throw|try|true|unsigned|void|while)\b" 
color special "\b(goto|continue|break|return)\b"

## Math
color statement "\b(abs|acos|asin|atan|atan2|ceil|constrain|cos|degrees|exp|floor|log|map|max|min|radians|random|randomSeed|round|sin|sq|sqrt|tan)\b"

## Bits & Bytes
color statement "\b(bitRead|bitWrite|bitSet|bitClear|bit|highByte|lowByte)\b"

## Analog I/O
color statement "\b(analogReference|analogRead|analogWrite)\b"

## External Interrupts
color statement "\b(attachInterrupt|detachInterrupt)\b"

## Time
color statement "\b(delay|delayMicroseconds|millis|micros)\b"

## Digital I/O
color statement "\b(pinMode|digitalWrite|digitalRead)\b"

## Interrupts
color statement "\b(interrupts|noInterrupts)\b"

## Advanced I/O
color statement "\b(noTone|pulseIn|shiftIn|shiftOut|tone)\b"

## Serial
color special "b<(Serial|Serial1|Serial2|Serial3|begin|end|peek|read|print|println|available|flush)\b"

## Structure
color statement "\b(setup|loop)\b"

## 
color preproc "^[[:space:]]*#[[:space:]]*(define|include(_next)?|(un|ifn?)def|endif|el(if|se)|if|warning|error|pragma)"

## 
color constant.specialChar "'([^']|(\\["'abfnrtv\\]))'" "'\\(([0-3]?[0-7]{1,2}))'" "'\\x[0-9A-Fa-f]{1,2}'"

## GCC builtins
color preproc "__attribute__[[:space:]]*\(\([^)]*\)\)" "__(aligned|asm|builtin|hidden|inline|packed|restrict|section|typeof|weak)__"

## String highlighting.  You will in general want your comments and
## strings to come last, because syntax highlighting rules will be
## applied in the order they are read in.
color constant.string "<[^=    ]*>" ""(\\.|[^"])*""

## This string is VERY resource intensive!
color constant.string start=""(\\.|[^"])*\\[[:space:]]*$" end="^(\\.|[^"])*""

## Comments
color comment "//.*"
color comment start="/\*" end="\*/"

## Trailing whitespace
color indent-char.whitespace "[[:space:]]+$"
